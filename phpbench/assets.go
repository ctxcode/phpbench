// Package main Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// assets/PhpBench.php
// templates/overview.html
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsPhpbenchPhp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x73\x22\xb9\x11\x7f\xf7\xa7\xe8\x23\xd4\xce\x70\x0b\x06\xf6\x72\x95\x0a\x18\xbb\x7c\x1c\xbb\x76\xc5\x67\x3b\x80\x6f\xab\x82\x7d\x94\x98\x91\x41\xf1\xa0\x99\x93\x34\x6b\xfb\x6c\xbe\x47\xde\xf2\x94\xef\x97\x8f\x90\xd2\x9f\x19\xa4\x99\x01\x5f\x2a\xb9\x87\x54\x85\x17\x66\xa4\xee\x56\x77\xeb\xd7\x52\x77\xc3\xd1\x49\xb2\x4a\x0e\x0e\x82\x08\x71\x0e\xd7\xab\xe4\x3b\x4c\x83\x15\xbc\x1c\x1c\x00\x00\x70\x81\x04\x09\xa0\x1e\xe2\x80\x61\xc4\xf1\x94\xac\x31\x0c\x80\xa6\x51\xd4\x77\x08\x04\x59\x63\xc6\x61\x00\xb3\xbb\xfe\x41\x79\x66\x18\xa7\x54\xc0\x00\x3a\x2e\x57\x10\x53\x2e\xac\xb9\xc2\xe4\x3a\x21\x11\x1e\xa2\x60\x85\x8d\x60\x7b\x9a\xc7\xc1\x03\x16\x95\xca\x60\x2a\x18\xc1\x95\xda\x70\xac\xd6\xba\x47\x11\xc7\x66\x2a\x49\x17\x11\x09\x32\x8a\xfb\x94\x06\x82\xc4\x54\xbe\x33\x21\xed\x65\xbe\xb6\xa1\x01\x2f\x8a\x7e\x2b\xae\xd7\x33\x76\xcf\x3c\xe1\xc1\xa1\xb1\xf5\x0e\x06\xb0\x26\x01\x8b\xe5\x9b\x2f\x58\x8a\x1b\x5a\xbd\xcd\xde\xf5\x24\xf5\x30\x0e\xb1\x59\xad\x09\xf5\x7b\x12\x61\x8a\xd6\xb8\x09\xf5\x88\x50\x7c\x29\xc7\x82\x38\xc4\xb6\x22\x75\x4c\xc3\xaa\xf5\xb6\x04\xca\x0e\x18\xec\x57\xb9\xbf\xa5\x97\x03\x93\x44\xbb\x49\x49\x6f\x19\x19\x5b\x9a\x94\x72\x2c\xfc\xbd\x02\x1d\x15\xd6\x72\x2b\x58\x9c\xd2\xd0\xb7\xc4\x7f\x0d\xdd\x4e\xa7\x63\xbe\x6c\x7a\x72\x0f\xfe\x57\xb9\x74\x1b\x7a\xb6\xe5\xce\x36\x14\xf0\x79\x1f\xc5\x31\xf3\x8d\xe9\x6d\xb5\x40\xa7\x61\x56\xea\x6c\xed\xd8\x14\xbd\xd4\x1a\x54\x8b\xec\xbb\xfe\xde\x4d\x96\xd3\xb5\xdb\x80\x83\x55\xac\x6c\x3f\x04\x6f\xcd\x3d\x6b\x32\x67\x36\x40\x9d\x49\xc8\xcc\x1c\xcb\xbc\x6c\xf3\x3d\x18\x1c\x5b\x50\x70\x89\x1e\xf0\xb3\x9e\x57\x4e\x97\x0b\x79\x05\x0a\x0d\x1c\x4d\xa4\x9f\xab\xa8\x24\xaa\x34\x8d\x7c\xaa\xa2\x58\x73\x3d\xaf\xcd\x29\xce\x2a\xef\x29\x02\xc7\xf3\xf6\x0e\x37\xaa\xf8\x30\x0d\x15\x97\xc1\x86\xf4\xed\x3e\x9e\x2c\x98\xf7\x07\x12\xc7\x34\xf4\x1b\xd9\x09\x96\x01\x2a\xf7\xb9\x3c\x01\x8a\x38\x62\x58\xa4\x8c\xda\xc0\x28\xef\x95\x39\x39\x64\x7c\xd9\xd8\x16\xb1\x40\xd1\x0f\x7c\x7b\xb6\x19\x94\x64\x27\x50\x71\xaf\xfb\x8e\x56\x81\x3c\xfb\xfc\x6c\xae\x01\xc7\xd0\x29\xea\x56\xbf\x27\x8c\x9b\x60\xd4\x68\xe9\x58\xe1\xaa\x28\x22\xe4\x12\x14\xa5\xb6\xa0\x5b\x64\x11\x3c\x41\x54\xf2\x48\xde\x99\xda\x88\x3b\x19\xe9\x6a\xb1\x99\xd9\xd0\x6a\xa6\xf6\x40\xee\x4d\xa5\xb3\xea\x1c\x8b\x4b\x96\x07\x60\xe1\x54\xaa\x08\xf5\x7a\x88\x04\x2a\x83\x5f\x8e\x2a\x60\xfc\x95\xc7\x74\x8e\xa9\x44\xa5\xef\xd2\x28\x3a\x29\x5b\xd1\x85\x48\x60\xdf\x3b\xeb\x91\x1e\xf7\x1a\xcd\x32\x61\xca\x22\x45\x47\xb8\x3c\xb9\xea\xf3\xc9\x68\xfc\xe3\x68\x3c\xf3\xc6\xa3\x3f\xdf\x8c\x26\xd3\xf9\xcd\xf8\xdc\xbb\x6b\xc0\x09\xec\x98\x82\x5e\x09\xbc\x4a\x2e\x35\xa1\xa5\xed\x2e\x23\x5c\x6b\xa9\x21\x62\x22\x55\xf9\x50\x1f\x09\x15\xb4\x66\xcf\x14\x6d\x11\x3a\x2e\xf9\x5d\xa3\x1c\x18\xca\xa5\x29\x8b\x60\x00\xde\x4a\x88\xa4\xd7\x6e\x77\x3f\xfc\xe1\xb0\x73\xd8\x39\xec\xf6\xbe\xe9\x74\xba\x6d\x8e\x45\x5b\x1e\x58\x02\x7b\x7d\xfb\xb0\xfa\x84\x05\x04\x37\xe3\x0b\x60\x98\xc7\x29\x0b\xf0\x56\x5e\xa0\x05\xca\xaf\x39\xa1\x44\xf8\x0d\x87\x73\x82\x05\xf0\x78\x8d\x21\x4e\x64\xf8\x71\x68\xc1\x23\x06\xc4\x30\x24\x88\x73\x42\x97\x40\x28\x20\x48\x39\x66\x68\x29\x63\x48\xc4\x31\xac\x30\xdb\xae\xa0\x24\x73\x2c\xe2\x44\xcc\x11\x63\xe8\xd9\x57\x6b\x36\x0b\xa8\x18\xde\x8c\x2f\xae\xae\xa7\xf3\xf1\x68\x7a\x33\xbe\x9c\x8e\x4f\x2f\x27\x1f\x47\x63\xe9\xa8\x6e\xb3\x92\x50\x9a\x23\x5d\x2e\x65\x55\x12\x5c\x5f\x4d\xa6\x7b\xf8\xe5\xf4\xc7\xf3\xd1\xc5\xf7\x13\x25\x46\x82\xd2\x72\x79\xd1\x0b\x34\x04\xb1\xc2\xc0\xf0\xcf\x29\xe6\x02\xde\x01\x47\x5f\xe4\x2b\x4f\x62\xca\x31\x88\x18\xea\xf2\x65\xeb\x57\xf9\x96\xf9\x15\x3f\xe1\x40\x5b\xed\x8a\x1d\x46\x31\xdf\xca\x14\x31\x04\x11\x46\x0c\xd2\x44\xbb\x3c\xdb\x2c\xee\xfa\x32\x90\x5c\x8e\xb8\xcd\xc1\xc1\xe6\xe0\x20\x3f\x22\x93\x55\xb2\x90\x69\xde\x1c\x33\x26\x8f\x6b\x6c\x65\x16\x8a\x5e\xdd\x5d\xde\x11\x17\xcf\x11\x3e\x5e\xc4\xe1\x73\x73\x25\xd6\xd1\x4b\x82\xc2\x90\xd0\x65\xaf\xd3\x5f\x23\xb6\x24\xb4\xd7\xe9\x6f\x20\x61\x18\x14\xa8\x5f\x20\x24\x3c\x89\xd0\x73\x0f\x16\x51\x1c\x3c\xf4\x41\x4d\x1e\x66\xab\xb5\xd4\xe5\x22\x49\x7b\x0b\x7c\x1f\x33\x0c\x2f\xa0\x8e\x2a\xcc\x5a\x84\x06\x0c\xaf\x31\x15\x3d\x90\xd7\x54\x1f\x82\x98\x0a\xf5\x6a\x28\x7c\x39\xdc\xe8\x6f\x97\x20\x54\x8e\xb4\xcc\x4a\x6b\x42\x5b\x8f\x24\x14\xab\x1e\x7c\xd3\x49\x9e\xfa\xa0\x15\x6c\x31\xb2\x5c\x89\x1e\x7c\x2b\x87\x36\x47\x6d\x6d\x90\x81\xbe\x31\x32\x24\x5f\x40\x8d\x0f\x6a\x99\x7d\x5d\x49\x5f\x2b\xd0\x29\x3b\x0b\x74\x9d\xe4\x09\x14\x31\x40\xe6\x11\xe8\x80\x1a\xee\xf4\x61\x81\x82\x87\xa5\xba\xdb\x5a\x41\x1c\xc5\xac\xb7\x88\x90\x54\x56\xbf\x30\x1c\xf6\x6b\xc7\x99\x73\x80\x63\xbc\xe6\x72\x8b\x57\x12\x37\x09\x8b\x17\x91\x1c\x48\x69\x88\x19\x17\x88\xca\x05\x21\xc0\x4c\x20\x42\x81\x3f\x53\x81\x9e\x9a\xa0\x43\x19\x10\x95\x27\x5b\x8a\x21\xa6\x10\xa7\x0c\x96\x44\xac\xd2\x45\x13\x78\xcc\xd8\x33\xfc\xf3\xef\x7f\xfb\xc7\x51\x3b\x61\xca\xf0\x1d\x16\xd9\xda\x7f\xab\xb5\xcf\x8c\x54\xe6\x54\x18\xf3\x3b\x8c\x71\xd1\x49\x23\x89\xa7\x1e\xa8\x44\x10\xb7\x8e\x97\x58\xfc\x80\x39\x47\x4b\xec\xcb\xbb\xbc\x76\x4b\x6b\x36\xf5\x47\x12\x61\x87\x58\x0e\x54\x52\x5e\x10\xea\x52\xca\x81\x2a\xca\xc2\xab\xa1\x9e\x32\x14\xe0\x53\x3e\x11\x8c\xd0\x65\x76\x7e\x19\x27\xbc\xe1\x98\x8a\xad\xfe\xb7\x77\xfa\x71\x45\x84\x74\xd5\x74\x85\x61\x89\x29\x66\x48\xe0\x10\x64\x34\xfc\x56\xdb\x92\xc7\x15\xc3\x1c\x67\x31\x55\x03\x55\xe4\x0d\x6a\x4e\x40\xe6\x3b\xa8\xf2\x43\x99\xb2\xe0\xa7\x24\x92\x17\xae\xf4\x65\x13\x04\x23\x6b\x5f\x9f\x0e\xc6\x71\x32\x74\x51\xb0\x02\xdf\x70\x20\xae\x79\x1b\xf0\x92\x9d\x1b\x09\xa2\xc7\x6a\xb7\xe4\xb8\xbc\xed\x8e\xda\x7a\xac\xaf\x73\xee\x2c\x3d\xb6\x84\x57\x6e\x8a\x3d\x14\x92\x2f\x5b\x4f\x3d\x11\xd1\xaf\x3e\xd2\x08\x0d\xa2\x54\x96\x51\x09\x12\xab\xfc\x40\x93\xc9\x96\xbe\xfc\x6f\xb3\x1a\xb7\xd7\x73\x4a\xcc\x99\x62\xb8\x6b\xd8\xf9\x97\xce\x0b\xe1\x0d\x16\xa7\xba\xab\xdf\xcb\xb4\x6a\x81\xb8\xca\xd7\x8d\x16\xfd\x5c\x07\x35\x3d\x00\x0f\xa5\x22\x8e\x62\x14\xca\xc3\xd1\xab\x58\x52\xf1\x39\x82\x55\x55\x24\xeb\x80\x39\x7e\x22\x5c\x70\x23\xda\xe6\x15\x2b\x16\x3f\xc2\xed\xe8\x29\xc0\xea\x2e\xf6\xbd\x29\x7b\x96\xc7\x86\x88\xc1\xb8\x05\xa4\x04\x10\x2b\x24\x20\x8c\x31\xa7\x02\xb4\x34\x13\x5c\x96\xb6\xd9\xb2\x94\xc8\xbb\xd9\xf7\xcc\xc1\xab\xaf\x0c\xee\x35\xa1\x9b\x99\x55\xa4\x50\xc9\x63\x9a\x94\x29\xd5\xc0\x9c\xe1\x24\x66\x42\x06\xe2\x68\x7e\x7a\x71\x91\xa5\x83\xba\xf4\x18\xc8\x8d\x54\xbe\xfe\x84\x85\x2e\x87\x8d\x4e\x0e\x6e\xd4\xa0\xc2\xd5\x82\x65\x38\x69\xb7\x1d\x0f\xcb\x54\xc5\xf1\x6e\xbb\x0d\x6e\x90\x59\x8c\xf9\x04\x17\x4a\xc1\x08\x05\xd8\xf7\x54\x6b\xc4\x6b\x82\x77\x04\xe6\xc9\x86\xaa\x2b\xaf\xbd\x43\xa0\xf7\x4b\x61\x50\x21\xd7\x0c\x64\x98\xa1\xf8\xf1\x5a\x1a\x34\x00\x9e\x2e\xb8\x60\xda\xe8\x26\x74\x9a\xd0\xfa\xbd\xaa\x82\xf2\x4b\x54\x99\x64\xe2\x50\x82\x21\x49\xc5\xdc\xdc\x95\xdc\xcf\x04\x6d\x15\x55\x84\x6f\xe0\x57\x96\x01\x86\xd1\x30\x64\x20\x74\x47\xdb\x6d\x10\xec\x79\xeb\x4d\x99\xc1\xa4\x91\xac\x3c\xf0\x17\x14\xf9\x05\xdf\x6c\x20\x40\x42\x9e\x12\xd7\x88\x71\xac\x2e\x06\x78\x85\xa9\x84\x28\x5a\x44\x18\xea\xb8\xb0\x31\xa5\xa4\xc4\x92\xe5\x68\xa5\x97\x2d\x85\x7f\x05\x6a\xb2\xe8\xcf\xb0\xa5\x3c\xb6\xc4\xb6\xc7\x6c\x74\x49\x7b\x87\x9a\xb2\x56\xcb\x0e\x45\xc4\x95\x44\x79\xe1\xd8\xe3\x28\x0c\x0d\xa9\xe9\x25\xe5\x47\xa8\x2a\x80\xba\x16\xfb\x34\x7e\xc0\xf4\x33\xe2\x97\xf8\xd1\x48\xb1\x59\x54\xc5\x75\xbd\x4a\xa6\x68\xe9\x96\x97\xf5\xfb\x28\xe5\xab\x0b\x77\xfd\xdc\x60\xbf\x21\x53\x6a\xf0\xdf\x65\x4a\x37\xe1\x9d\xa3\xac\xd3\x25\xca\x0c\x3b\x1c\xb8\x16\x59\x25\xeb\x0e\x43\x37\x99\x36\x42\x5a\x21\xaf\x07\xf5\xa0\xbc\x88\x22\xb3\xeb\x4d\x98\x5e\xfd\x69\x74\x39\xbf\x3e\x1d\x4f\x46\x66\xdb\xea\x81\xe9\xeb\x99\x6a\x54\xf3\xe7\xae\xe6\x0f\x24\xb9\xa1\x82\x44\x93\x20\x4e\x5c\xcb\xde\xd5\x49\x6e\x9c\xad\x95\xb4\x50\x4b\x91\x4f\x4a\xac\x32\x5a\xf9\xdc\x31\x77\xc1\x50\xf0\x50\xa8\xc9\x1f\x57\xf2\xe4\xf3\xeb\x04\x8e\x8c\x6e\xa5\x4a\x5b\x09\x97\xd1\xa0\x57\x99\xd5\x89\x5d\x58\xe5\x47\xb8\x21\x1b\xa8\x64\xa3\x28\xc4\x82\xc1\xfb\xf7\x6e\xfd\xbc\xd9\x27\xcb\xf3\xbd\x4a\x51\xda\x94\xb2\xa8\x3d\x92\x1a\xfb\x24\xb5\x5a\x6f\x4a\xca\xbc\x37\x18\x40\x07\xde\xbd\x73\x64\xbf\x78\xf0\xfa\x0a\x96\x0b\xfa\xb5\x46\xe5\x6a\xa4\xb8\x90\xfc\x2c\x18\x46\x0f\x7b\x9d\xe2\xc2\xf0\x70\x00\x84\x67\x35\xa1\x5a\x53\xd5\xe8\xea\x69\xd6\x95\x55\xb9\x7e\x2e\xec\x52\x9d\xd8\xfe\xda\xb8\x38\xde\x02\x0f\xaf\xc9\xff\x71\xe7\xf9\x85\x1d\xf5\x5e\xfe\x8b\x40\x2c\x88\xde\xfc\x76\xc8\xfc\x9f\x03\xe2\x7d\xcc\x14\x2a\x24\x58\xc0\x42\x47\x5f\x71\x39\xfd\xcb\x37\x00\xa2\x5c\x43\xe0\x18\xba\x25\x64\xbd\x79\xfd\xe4\x94\x09\xc3\x5f\xa6\xa5\x65\x2a\x5a\x87\x3a\x93\xce\x7c\x91\xb3\x55\x3b\x3f\x9f\xbe\x44\xaa\x31\xaf\xef\x0e\x93\x19\x67\x73\xb3\x8e\xdd\x4c\x71\xac\x2a\xf0\x0f\xc0\x9b\xce\x3f\x9f\x9d\x4f\x47\x93\xeb\xd3\xe1\xa8\x12\x4d\x90\x37\x7c\x59\x12\x73\x7b\x99\xee\x5d\xd3\x84\xce\x57\x03\xe3\x84\x5d\x02\x72\xe5\x3f\x54\xfa\xe4\xc3\x5d\x59\x5f\xc7\x3f\xd4\xf6\x8f\x96\xd1\x84\x99\xd7\x97\xc9\xe4\x8b\x77\xd7\x54\xf7\x7c\xa5\xcb\x7e\xc5\xf6\xe9\x1c\x61\x17\xd3\xa6\x72\xa6\x3c\xba\xd9\x11\x6c\x1b\x17\x58\x45\xd8\x97\x20\x46\xcb\x3b\x2b\xb6\xbb\x5a\x8e\x61\xba\xdd\xc9\xab\xeb\xd1\xe5\x7c\x7a\xfa\xc9\x93\xb1\x6c\x27\x42\x55\x8e\x91\x09\x67\x31\x26\x4d\x86\x5e\x76\x46\x21\xab\xaa\x00\xbc\x11\x29\x13\x41\x42\x8b\xfe\xac\x38\x31\xb7\x5b\xaa\x7f\x92\x9b\x79\xd3\xf9\xf0\xe2\x74\x32\x91\x5b\x3a\x9d\x7f\xbc\x1a\xe7\x0f\xa3\xd3\xe1\x99\x7e\xf9\x7c\x76\x7e\x31\xd2\x8f\xe7\x1f\xf5\xf7\xe8\x62\x32\xb2\x9f\x0d\xd7\xcd\xe5\x70\x7a\x7e\x75\xa9\xdf\xa6\x67\xe3\xab\xcf\xfa\x71\x78\x3a\x1d\x9e\xed\x05\x4c\x21\x93\xf2\xeb\xa4\x22\x98\xfe\x23\x33\x7f\x3c\x1d\x9f\x9f\x7e\x97\x19\x32\x99\x8e\xcf\x2f\x3f\x19\x03\x86\x67\x57\x7b\x95\x53\x45\x6b\x9e\x2b\xcb\x5d\xae\x80\xf4\xae\x30\xb0\x72\xec\xdd\x90\x2f\x67\xc9\x7e\x85\xfd\x50\xba\xf9\xab\xfd\xb4\xdb\x57\x50\x11\x32\xfb\x2f\x8c\xfc\x76\x70\x05\x95\xc5\xdb\x3f\xa0\x54\x0b\x29\x1e\xf6\x7b\x33\x81\x8a\x2c\x60\xb3\x8b\xdf\xeb\x97\xce\x50\x45\x60\x3c\xef\xdc\x42\xd9\xc7\xae\x26\xb7\x3f\xee\x17\x13\x03\x28\x94\x1d\xb5\x5b\x8b\xcf\xfa\x6d\xbd\x06\x87\xe0\x57\x8b\x54\xed\xbd\x46\x3f\xef\xe8\xed\x12\x5d\x70\x9a\xe9\x01\x96\x59\x30\x0f\xac\x02\xc7\xae\xf4\x6b\x5e\xad\x09\xb5\x5a\xd3\x15\x55\x81\x8f\x82\x8c\x84\xe1\xe5\xb6\x5d\xd0\xbe\x65\x27\xb7\xb4\x2d\x43\x03\xbc\xa6\x43\xfb\xb6\x28\xdd\x09\x7b\x83\x65\x97\x3f\xf3\xff\x0e\x48\x6f\x56\x3b\x53\xfa\xa5\x09\xf3\xf9\xc7\xf3\x8b\xd1\x7c\xde\x84\x5a\xd6\x9d\x53\xbf\x5b\xd5\x9a\xe0\xa9\x11\x5b\xa9\x43\xa8\x79\xc6\xfd\x15\xa9\x66\x75\xb9\xe8\xd0\x54\xd6\xc8\xf6\x67\xd7\xb1\xb4\x7d\x3a\x00\xbb\xb5\x56\x15\xea\x07\x7b\xe1\xb0\x6d\x5d\x0c\xb3\x56\x79\x08\x66\xc7\x40\xfd\xfd\x04\x51\xc1\xdd\x82\xf5\xfd\x7b\xb7\x61\x92\xfd\x47\xc5\xc8\x0a\xf1\xbd\x5c\xda\xbb\x3e\xbb\xfe\x6e\x74\x39\x3c\xcb\x7c\xaa\x1a\x68\xa6\x3a\xb0\x1b\x69\x65\xfa\xef\xcf\xc7\x2e\x79\x48\x98\xd5\x2d\xac\x68\x47\x14\x80\xe6\xcf\x7e\x42\xad\x5f\x4e\x5b\x7f\xe9\xb4\xfe\x38\xbf\x6b\x64\x1a\x14\x86\x15\x12\xeb\xdd\xdd\x7a\xc2\x21\x78\xf5\x0f\x12\xaa\x66\xa5\xac\x74\xff\xf5\x0b\x2b\x53\xde\x5a\xb7\x60\x6f\xd5\xb2\x6f\xad\xeb\x9f\xf4\x4c\xfb\xe7\x75\x00\x27\xaf\xb7\x14\xbe\x6e\x9c\x34\xfc\x93\xaf\xdc\xa5\x7d\xd3\xe6\x7c\x35\xdf\xf3\x98\x06\xf8\x95\xe1\x9f\x53\xc2\xf2\x6f\x35\xd8\x70\x95\x9e\xfd\xd4\xbf\xa5\x77\xef\x1b\x7d\xa3\x7c\xfd\x83\x5f\xee\x28\x7f\xd3\x68\xf4\x2b\xd4\xce\x9a\x92\xc5\xa6\xe2\xaf\x6a\x28\xba\x9e\xdf\x8a\x2a\xf4\x13\x75\xdb\xd0\x69\x83\x19\xce\xfe\xc1\xe6\xe0\x5f\x01\x00\x00\xff\xff\x2a\x71\x94\x7c\xc4\x25\x00\x00")

func assetsPhpbenchPhpBytes() ([]byte, error) {
	return bindataRead(
		_assetsPhpbenchPhp,
		"assets/PhpBench.php",
	)
}

func assetsPhpbenchPhp() (*asset, error) {
	bytes, err := assetsPhpbenchPhpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/PhpBench.php", size: 9668, mode: os.FileMode(511), modTime: time.Unix(1563663460, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOverviewHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x5d\x93\xe2\x36\xd6\xbe\xef\x5f\x71\xe2\xd4\xfb\x42\x67\xc1\xc6\xdd\x74\x6f\x8f\x1b\xd8\x4a\xed\x26\x55\x9b\xec\x64\xaa\x76\xb2\x7b\x43\xb8\x10\xf6\x31\x68\x10\x92\x4b\x12\xdd\x4d\x18\xfe\xfb\x96\x64\x83\xbf\x0d\x93\x4a\xed\x07\x55\x33\x60\xe9\x7c\x9f\x47\xcf\x51\x7b\xc2\x28\xdf\xc0\x5a\x62\x3c\x75\xd6\x5a\x27\x2a\xf0\xbc\x58\x70\xad\xdc\x95\x10\x2b\x86\x24\xa1\xca\x0d\xc5\xd6\x0b\x95\xfa\x53\x4c\xb6\x94\xed\xa7\x1f\x12\xe4\x7f\xf8\x48\xb8\xfa\xff\x88\xaa\x84\x91\xfd\x54\xbd\x92\xc4\x01\x89\x6c\xea\x28\xbd\x67\xa8\xd6\x88\xda\x99\xdd\xdc\x4c\xec\xe3\xec\x06\x00\x60\x29\xa2\x3d\x1c\xec\x4f\xf3\x31\x5e\x86\xa9\xc5\x00\x7a\xc6\x26\x18\x9b\xbd\x67\x2b\x71\xbc\xb1\x5f\xae\xa2\x11\x2e\x89\xcc\xd5\x12\xa1\xa8\xa6\x82\x07\x10\xd3\x37\x8c\x9e\xcf\x1b\xbf\x0e\x29\x8f\xf0\x2d\xb8\xcf\x97\xb4\x48\x82\x51\xfe\xc8\x30\xd6\xc5\xe7\xa5\xd0\x5a\x6c\x8b\x2b\xaf\x34\xd2\xeb\xe0\x7e\x34\x4a\xde\x0a\x62\x24\xdc\xac\xa4\xd8\xf1\x68\x18\x0a\x26\x64\xf0\x35\x22\x16\xad\xbc\x0d\xd5\x9a\x44\xe2\x35\x80\x51\xf2\x66\xff\xf9\x0f\xc9\x1b\xc8\xd5\x92\xf4\x7d\xdf\x1f\x80\x7f\xf7\x34\x00\xff\xe1\x6e\x00\x23\xf7\xe1\x36\x57\x15\x2f\x28\x63\x26\x5e\x87\xfb\x00\xc8\x4e\x8b\xc6\xd4\xdd\x98\x32\x54\x87\x5a\x9e\x77\x95\xc4\x0a\x51\x57\x2c\x80\xbb\x46\x12\x61\xa1\x88\x6b\xa4\xab\xb5\x0e\xe0\x8f\x17\x12\xbd\x7b\xbc\x1f\x8d\xc7\xb9\x44\x42\xa2\x88\xf2\x55\x60\x72\xbc\x2b\xe9\x66\x0a\x71\x1c\x3f\x97\x3b\xac\xe8\xaf\x18\xf8\x8f\x45\x59\xbb\xfe\x9a\x85\xb0\x14\xac\xd0\xc4\x0c\x50\x41\xcc\xb0\xa0\x40\x18\x5d\xf1\x21\xd5\xb8\x55\x01\x84\xc8\x35\xca\x53\xa2\x4d\x79\x82\x4a\x08\x3f\xd4\x6c\x02\xe5\x8c\x72\x1c\x2e\x99\x08\x37\x2d\x85\x32\x3e\x0e\xb5\x74\x6d\x3b\xf3\xff\xca\x99\x2f\x85\x8c\x50\x0e\x33\x30\xf9\xc9\x1b\x28\xc1\x68\x04\x5f\x87\x61\x58\xa8\xcf\x4e\x2a\x21\x03\x48\x04\x2d\x86\xdf\xd0\xe9\x6a\x10\xaf\x42\x46\xc3\xa5\x44\xb2\x09\xc0\x7e\x0d\x09\x63\x1d\xe1\xbb\x24\xd4\xf4\x05\x0f\x1d\x6d\x8d\xed\xe7\x8a\x14\x9e\xec\x27\x17\xf4\xbe\x29\x36\x1a\xbe\xf1\x3a\xc2\xa0\x2b\x2e\x64\x21\x0c\x8d\x6f\x7a\x18\x61\x28\x24\x49\xcf\xaf\x6d\x86\x5e\x4b\xb1\x5b\xad\x6b\x40\x22\x84\x74\xe4\x08\xae\xa6\xdb\xcc\x76\x15\x03\xe9\xfe\x4e\xb2\x43\xd5\xe6\xbb\x77\xef\x1a\xc1\x79\x9f\x9f\x9b\x46\x57\x42\x13\xb6\x55\xbf\xc5\x5c\x6a\x2f\x14\x5c\x23\xd7\x4d\x1c\x46\x96\x4a\xb0\x9d\xc6\x3a\x8d\xf9\xdd\x34\xf6\x58\xe6\x28\x69\x0f\xd3\xa8\xec\x57\x2f\x0b\x35\x48\x7b\x1c\x00\x17\x1c\xab\x84\xe7\x8f\x46\xff\x97\xaf\x6d\x89\x5c\x51\x7e\x46\x43\x9d\x56\xf4\x92\x81\x36\x47\x0d\xf4\xfa\x12\xa7\x14\x19\xc3\xbf\xc0\x36\xf7\xe3\xb1\xff\x40\x6a\xb0\x4c\x73\x2b\xa0\x72\x4c\x1e\xef\x9f\xc6\xed\xdc\x53\x8a\xd3\x4e\x1d\x1d\x35\x1c\xea\x13\x51\x5f\x76\x18\x45\x51\xcd\xdb\xf9\x5c\x34\x79\x73\xc3\x0a\xee\x2d\x83\x55\xb9\xab\xa6\x27\x03\xae\xd7\xc3\x70\x4d\x59\xd4\x17\x51\x74\xdb\x71\x86\x21\x1f\x42\x67\x43\x06\xa7\xc3\xa5\x78\xbb\xec\x1b\x3a\xd8\xd9\xea\x68\x49\xb8\x8a\x85\xdc\x06\xb0\x4b\x12\x94\x21\x51\x78\x15\x81\x5f\x1c\xcf\x0f\x55\x20\xdf\x3d\xd4\x81\x7c\x57\x69\x8b\x45\x22\x94\x57\x8b\xe4\x7c\x61\x1a\x8f\xae\x9a\xc6\x0d\x35\x6e\x62\x49\x49\x22\xba\x53\xc1\x53\x7e\x2a\x26\x5e\x76\xcb\xb9\x99\x44\xf4\x05\x68\x34\x75\x48\x92\x38\xe9\xad\xc7\x2e\x85\x8c\x28\x35\x75\x32\x62\xc9\x76\xaa\xbb\xe9\xf0\x72\x66\x13\x33\xbe\x66\x3f\xa3\xd2\x6a\xe2\xd9\xdf\x13\x2f\xa2\x2f\xcd\x4a\x86\xa2\x1c\x78\x19\xc6\x42\x4e\x9d\x0d\xee\x81\x72\x50\xa8\x7f\xc4\xbd\x72\x20\xc8\x84\x0e\x90\xce\x84\xc0\x8c\x21\x89\x5c\x7f\xb4\x12\x30\x9d\x82\x51\x39\x1a\x03\x82\x07\x21\xa3\xe1\x66\xea\x28\xcc\xf6\xfb\x1b\xdc\xdf\x16\x82\xad\xfa\x36\x1c\xec\xcc\xe6\x73\x90\xa8\x76\xcc\x28\xa9\xf9\x06\xf7\x0b\xf7\x67\xba\x45\x58\x2c\xc0\x66\x72\x96\x4e\x69\xd4\x99\xc1\x67\x68\xd2\x31\xdb\xef\x15\x2c\x16\xcd\x49\x57\x9d\xef\x24\x33\x61\xd3\x78\xea\x54\x4d\xfd\x43\x32\xf8\x6a\x0a\xbd\x5e\x63\x70\x66\xd7\x38\x29\x97\x34\x7f\xcc\x7e\xb6\x35\x0f\xec\x90\xbe\xaa\x85\xdf\x1b\xc9\xeb\x5b\x98\x77\xc0\xb8\xe0\x64\x8b\xea\xaf\x76\x86\x46\x30\x85\xf9\xe2\xb9\xa9\x9f\x55\x49\x97\x21\x5f\xe9\xb5\xe9\xec\x08\x8e\xce\xec\x5b\xc6\xd2\x80\xaf\x85\x90\x11\x36\x18\x3a\x1b\x2e\x7a\x4d\x47\x7a\x83\x57\x7b\xb4\x3f\xc4\x7d\xb3\x71\x0b\x33\x18\xfa\x55\x50\xa5\xaa\xa6\x22\xa9\x90\x6d\x8d\x75\x56\xea\x45\x5b\xf1\xb3\x11\x5a\x2c\xbb\x26\x4b\x86\x67\x70\x2d\x99\x03\x21\x32\xa6\x12\x12\x52\xbe\x9a\x3a\xa3\x2a\x70\xed\xc4\x2a\xaf\xa5\xeb\xb2\xbe\x98\x29\xcc\xfe\x2c\x22\x9c\x78\x7a\xdd\x2e\xb1\x55\xdd\xfb\xe6\x28\x28\x08\x09\x63\x18\x75\x4b\x7e\xfb\x82\x92\xac\x10\xda\x2c\x4e\xbc\x6a\xa4\x46\xae\x96\xd3\xc4\xce\x92\xea\x1a\x6e\x13\x46\x34\x66\x07\x26\x67\x01\xa7\xb1\x20\x27\x30\x84\xe6\x8a\x66\xd0\x90\x9e\x21\xd5\x20\x9d\x6a\x44\xa6\x9b\x56\xda\x35\x25\xb3\x3d\xd5\x0d\xc5\xae\x49\xbf\x57\x7f\x49\x6f\xe7\xb0\x58\xd8\xc4\xaf\x51\xfa\x8e\x6b\x49\x51\x9d\xb0\x7e\xb5\xb3\xac\xc2\xd7\xf8\x6c\x2c\x76\x56\xc4\xda\x7a\xb9\xe0\x13\xcf\x22\xb3\x8c\xe7\x1c\xd0\xb5\x0e\x94\xf8\xd1\x8c\xef\x42\x95\x2d\x29\x06\x86\x2e\xed\xae\x0d\xb8\x64\xf7\x6c\x7f\xa2\x42\x49\x13\x0d\x4a\x86\xf9\x1f\xf2\x61\xc4\xdd\x4f\x2a\x42\x46\x5f\xa4\xcb\x51\x7b\x3c\xd9\x7a\x2f\x3b\xf4\x22\xaa\xb4\xf9\xe1\x7e\x52\xce\x6c\xe2\xa5\xba\xb3\xb3\x95\x34\x80\x17\x22\x0b\xe4\x09\x53\xf8\xe1\xe3\x87\x9f\xdc\x84\x48\x85\xfd\xc3\x01\xdc\xbf\x9f\xf7\x7e\x50\x82\xc3\xf1\x98\xcd\x52\xcf\xab\xab\x1e\x1c\xff\xe1\xf1\xde\x7f\x37\x1e\xdd\x8f\x9f\x9e\xee\x9d\xe0\xe0\x18\xa0\xfc\x8d\x72\x54\xe6\xc1\x37\xff\x7d\x9f\xd1\x8a\x13\x38\xde\x96\x6b\x2f\xf4\x5e\x5f\x5f\xbd\x64\x9d\x2c\x91\x87\x6b\x2f\xc2\xe5\x6e\xe5\x69\x54\xda\x3d\xad\x99\x1f\xce\xc0\x9a\x72\x02\x47\x31\xc4\xa4\x7f\x77\xfb\xec\x0c\x1c\x63\xf9\x27\xe9\x04\xce\xd8\x19\x38\x19\x60\x9c\x80\xef\x18\x1b\x38\xef\x95\x13\xdc\x99\xaf\x0c\x07\xf6\xa9\x0a\x0e\x27\x18\x1d\x07\xce\xdd\xef\x11\x17\x86\x6b\x01\xbf\x38\x91\xe0\xf8\x8b\x53\x0a\xee\xb1\x39\xb8\x71\x29\xb8\x71\x5b\x70\xf7\xbf\x47\x70\x66\xab\x5f\x2e\xd9\xbb\xe6\xa8\xfc\x52\x54\x7e\x73\x54\xc7\x41\xde\xd8\x8f\x42\x6a\x8c\x4e\x26\xb2\x01\x9f\x86\x9e\xa1\xc1\x1f\x8d\xc7\xe3\xa7\xff\x3c\x1a\x46\xa5\xd4\x46\xff\x5d\x68\xb8\x32\xb8\x7f\x33\x1a\xae\x8a\xea\x2a\x34\x1c\x9f\x6f\xce\x84\x67\x88\x83\x24\x09\x4c\x81\xe3\x2b\xfc\x73\x87\xfd\x43\x89\x6d\x0d\x97\x6d\xa9\x46\xa9\x02\x98\xf7\xe6\xf3\xde\x00\x7a\x8b\x45\x6f\x31\x28\x49\x21\x0b\xa0\xf7\x35\x49\x92\x5e\x79\x3d\x22\x9a\x04\x70\xa8\xb1\x7d\x76\x61\x0e\x60\x5e\x31\x64\x3e\x39\x8f\x05\x85\xdf\x75\xb9\x9c\xd2\x03\xb0\x39\x76\x48\xfc\x88\xfb\x36\xa1\xf3\xdd\xaa\x39\x9a\xea\xd5\xab\x2e\x75\x2c\x3f\x86\x62\x9b\xec\xb4\x11\xac\xe7\x9d\x8d\xf5\x00\xe2\x1d\x0f\xcd\x5f\x6d\xfd\xdb\xba\x90\xf9\xd0\xb8\xff\x95\x5e\x53\xe5\xe6\x29\xb4\x48\xa6\x66\xf5\x4e\x72\x73\x65\x6d\x14\x39\xde\x34\x2e\xe7\x33\x23\xbd\xee\xb6\x0a\x31\xaa\x8c\x48\x25\x1e\xf7\x0c\xb4\xe7\x66\xfb\xb1\x90\x7d\xa3\xbe\x31\x17\x1a\x63\xa3\x23\x03\x23\x47\x61\x6a\xc5\xe6\x9b\x45\x8b\xc5\x93\xa4\x4a\x18\x35\x11\x51\xf7\x74\xfc\x5c\xbb\xd4\xef\x79\xbd\xdb\xe6\x3c\x4e\xaa\x31\x87\x69\xaa\x3f\xb7\xff\x9f\xee\x34\x43\xf0\x5b\x2a\x60\x53\x31\x5a\x31\x77\x25\x26\x8c\x84\xd8\xef\x95\x4e\xb3\x39\x13\xf6\xbb\xc3\x37\x8d\xfb\xb6\x7e\xed\x37\x79\x9e\xde\xe3\x3b\x8a\x04\x16\x5d\x5c\x53\xbe\xc3\x76\x4f\x2d\xdd\x86\x33\xfc\xdc\x64\xa7\xd6\x7d\xda\x12\x6c\x8b\x7a\xa6\xaa\x84\xd4\x69\x22\xe6\xd7\x6d\x4b\x9f\x32\x3c\xa6\x3a\x75\x37\xc7\xfa\x29\xd3\xe9\xbd\xeb\xd2\xb1\xb0\xcd\xd7\x44\x9a\xe6\x9b\xd3\xdc\x8e\x59\xe4\xe6\x8f\xb8\x51\xb3\x40\x09\x99\x36\x9b\xec\x60\x5e\x81\xd0\xa2\x78\x37\x52\x69\xdc\xcf\x62\x9d\xa6\xd1\xc2\xe7\xcf\x40\xdd\x8f\x76\x6d\x92\xe6\x71\xa1\xdb\xa7\x5c\x33\xad\xdf\xd4\x74\x1a\xf7\xa9\xfb\x1d\x8f\x60\x66\x8a\x72\xc1\x61\x5a\x36\x2b\xdf\xe5\xec\xfa\xd5\x0c\x0a\x7d\xe4\xd1\x30\xcd\x18\x3c\xf0\x47\x0d\x8d\x39\x76\x91\xea\x16\xf5\x5a\x44\xaa\x65\x96\x9c\x08\xfe\x0c\x9f\x0d\xee\x5b\x12\xad\x90\x58\xb9\xa1\xe7\x77\x16\xcd\xb9\x57\x74\xed\x0b\x1d\xd8\xe0\xbe\x43\xfa\x7c\xdc\x3b\x28\xb6\x8e\xc6\x26\x92\xbd\x00\xcd\x90\x75\x31\xb4\x05\x6a\x97\xfa\x89\x51\x43\xf6\x3f\x4c\xa9\x25\x2e\x9d\x4e\x2f\x93\x69\x45\xdd\xf2\x62\xcc\x3b\x5c\x5e\x8b\xfc\x06\x86\xcb\xdf\xc7\x14\x70\x6a\xdf\xcc\xb4\x53\x9d\xcd\xe7\xd4\xd7\xee\x77\x40\xcd\x31\x9b\xb3\x6f\x6d\x5c\x98\x2c\xcd\x0e\x4c\x37\x43\x4c\x2d\x0c\xc0\x6f\x1b\x18\xc8\x14\x7e\xa9\xe9\xb4\xd4\xed\x81\x5f\x55\x52\x33\x82\x0a\xc5\x24\x03\x58\xb6\x5e\xa7\xa0\x0f\xc4\x7d\xaf\x60\x02\x4b\xf3\xd5\x5a\x8b\x8c\xaf\xfc\x6b\xc3\x2a\x5b\x9f\x5d\x67\x7d\xf8\x45\xe6\x33\xa5\x2f\xa5\xcc\x50\x22\xb1\xd7\xd0\xae\xa1\x6a\x79\x07\xf7\x86\x9e\x3e\x2c\x3f\x61\xa8\x5d\xf3\xd4\xaf\x70\x62\x43\x93\x8c\x58\x7a\x1b\x68\xdb\x94\xf8\x82\x52\x61\xd3\x3e\x8d\x0d\x43\xab\xf9\x68\xd1\xc5\xd2\xa5\xd7\xe2\x56\xf8\x52\x05\x8a\xaa\x3f\xa6\x59\x19\xd5\xb2\x5a\xae\x72\x34\xf7\x97\xc2\xcb\x98\x7f\x05\x00\x00\xff\xff\x65\x7b\x52\xa8\x9b\x21\x00\x00")

func templatesOverviewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesOverviewHtml,
		"templates/overview.html",
	)
}

func templatesOverviewHtml() (*asset, error) {
	bytes, err := templatesOverviewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/overview.html", size: 8603, mode: os.FileMode(511), modTime: time.Unix(1563663662, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/PhpBench.php":     assetsPhpbenchPhp,
	"templates/overview.html": templatesOverviewHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"PhpBench.php": &bintree{assetsPhpbenchPhp, map[string]*bintree{}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"overview.html": &bintree{templatesOverviewHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
