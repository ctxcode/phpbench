// Package main Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// assets/PhpBench.php
// templates/overview.html
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsPhpbenchPhp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdf\x6e\xeb\xb8\xd1\xbf\xf7\x53\xcc\xfa\x33\x8e\xe4\x3d\x76\x6c\x9f\xfd\x16\x45\xad\xf8\x04\x59\xaf\x73\x12\x34\x4d\x82\xd8\xa7\x07\x68\x92\x35\x68\x69\x62\xb3\x91\x29\x2d\x49\x9f\x24\x9b\xf8\x3d\x7a\xd7\xab\xbe\x5f\x1f\xa1\x20\x45\xc9\xa4\x2c\x3b\x5b\xb4\x7b\x51\xa0\xb9\x91\x44\x0e\xe7\xcf\x6f\x66\xc8\xe1\x38\x87\x47\xe9\x22\xad\xd5\xc2\x98\x08\x01\x57\x8b\xf4\x07\x64\xe1\x02\x5e\x6a\x35\x00\x00\x21\x89\xa4\x21\x34\x22\x0c\x39\x12\x81\x13\xba\x44\x18\x00\x5b\xc5\x71\xe0\x10\x48\xba\x44\x2e\x60\x00\x37\x77\x41\x6d\x7b\x66\x98\xac\x98\x84\x01\x74\xdd\x55\x61\xc2\x84\xb4\xe6\x4a\x93\xcb\x94\xc6\x38\x24\xe1\x02\x0d\x63\x7b\x5a\x24\xe1\x03\xca\x4a\x65\x90\x49\x4e\xb1\x52\x1b\x81\x5a\xd6\x3d\x89\x05\x9a\xa9\x74\x35\x8b\x69\x98\x53\xdc\xaf\x58\x28\x69\xc2\xd4\x37\x97\xca\x5e\xee\x67\x36\x34\xe1\x45\xd3\x6f\xd8\xf5\xfb\xc6\xee\x1b\x4f\x7a\x70\x60\x6c\xbd\x83\x01\x2c\x69\xc8\x13\xf5\xe5\x4b\xbe\xc2\x66\xa6\xde\x7a\xaf\x3c\x45\x3d\x4c\x22\x34\xd2\x5a\xd0\xb8\xa7\x31\x32\xb2\xc4\x16\x34\x62\xca\xf0\x42\x8d\x85\x49\x84\xb6\x22\x0d\x64\x51\x95\xbc\x0d\x81\xb6\x03\x06\xfb\x55\x0e\x36\xf4\x6a\x60\x9c\x66\x30\x69\xee\x6d\xc3\x63\x43\xb3\x62\x02\xa5\xbf\x97\xa1\xa3\xc2\x52\xb9\x82\x27\x2b\x16\xf9\x16\xfb\x6f\xa1\xd7\xed\x76\xcd\xc3\xa6\xa7\xf7\xe0\x7f\x53\x70\xb7\x43\xcf\xb6\xdc\x71\x43\x29\x3e\xef\xe3\x24\xe1\xbe\x31\xbd\xa3\x05\x74\x9b\x46\x52\x77\x63\xc7\xba\x8c\x52\x7b\x50\xcd\x32\x70\xf1\xde\x4d\x56\xd0\x75\x3a\x80\xe1\x22\xd1\xb6\x1f\x80\xb7\x14\x9e\x35\x59\x2c\x36\x81\x7a\xa3\x42\xe6\xc6\xb1\xcc\xcb\x9d\xef\xc1\xe0\xa3\x15\x0a\x2e\xd1\x03\x3e\x67\xf3\x1a\x74\x25\xc8\x2b\x51\x64\x81\x93\x11\x65\xef\x55\x54\x2a\xaa\x32\x1a\xf5\x56\x45\xb1\x14\xd9\x7c\x66\x4e\x79\x56\xa3\xa7\x09\x1c\xe4\x6d\x0f\x37\xab\xd6\x21\x8b\xf4\x2a\x13\x1b\x0a\xdb\x7d\x6b\xf2\x64\xde\x9f\x48\x02\x59\xe4\x37\xf3\x1d\x2c\x0f\xa8\x02\x73\xb5\x03\x94\xe3\x88\xa3\x5c\x71\x66\x07\xc6\xb6\xaf\xcc\xce\xa1\xf2\xcb\x49\x2f\x94\x17\xbc\x08\xb9\x52\x1e\x56\x04\x77\x23\x22\x92\x6c\xbb\x5b\x8d\x6a\x28\xfe\x22\x12\x36\x45\xa6\xfc\xe0\xbb\x34\x19\xd2\x4a\x5c\xe6\x8a\x4c\xf2\x36\xaa\x06\x59\x1d\x59\x9a\xb2\x1c\x6e\x2e\xf9\x5d\x73\x1b\x60\xad\xe8\x8a\xc7\x30\x00\x6f\x21\x65\xda\xef\x74\x7a\x1f\x7e\x77\xd0\x3d\xe8\x1e\xf4\xfa\xdf\x75\xbb\xbd\x8e\x40\xd9\x51\x81\x2f\xd1\x0b\xec\xa0\xff\x84\x12\xc2\xcf\xd7\xe7\xc0\x51\x24\x2b\x1e\xe2\x86\x5f\x98\x31\x54\x8f\x29\x65\x54\xfa\x4d\x67\xe5\x18\x25\x88\x64\x89\x90\xa4\xca\x8d\x02\xda\xf0\x88\x40\x38\x42\x4a\x84\xa0\x6c\x0e\x94\x01\x81\x95\x40\x4e\xe6\xca\x17\x32\x49\x60\x81\x7c\x23\x41\x73\x16\x28\x93\x54\x4e\x09\xe7\xe4\xd9\xd7\x32\x5b\x25\xac\x87\x9f\xaf\xcf\x2f\xaf\x26\xd3\xeb\xd1\xe4\xf3\xf5\xc5\xe4\xfa\xf8\x62\x7c\x32\xba\x56\x40\xf5\x5a\x95\x84\xca\x1c\x05\xb8\xe2\x55\x49\x70\x75\x39\x9e\xec\x59\xaf\xa6\x4f\xce\x46\xe7\x3f\x8e\x35\x1b\xe5\x6a\x0b\xf2\x32\x0a\x2c\x02\xb9\x40\xe0\xf8\xf3\x0a\x85\x84\x77\x20\xc8\x57\xf5\x29\xd2\x84\x09\x04\x99\x40\x43\x7d\x6c\x70\x55\x5f\x39\xae\xf8\x84\x61\x66\xb5\xcb\x76\x18\x27\x62\xc3\x53\x26\x10\xc6\x48\x38\xac\xd2\x0c\xf2\xdc\x59\xc2\xc5\x32\x54\xab\x1c\x76\xeb\x5a\x6d\x5d\xab\x15\xa9\x96\x2e\xd2\x99\x2a\x17\xa6\xc8\xb9\x4a\x7b\xb4\x4e\x28\x4d\xaf\xf7\x40\xef\x50\xc8\xe7\x18\x3f\xce\x92\xe8\xb9\xb5\x90\xcb\xf8\x25\x25\x51\x44\xd9\xbc\xdf\x0d\x96\x84\xcf\x29\xeb\x77\x83\x35\xa4\x1c\x41\xa4\x84\xc1\x0b\x44\x54\xa4\x31\x79\xee\xc3\x2c\x4e\xc2\x87\x00\xf4\xe4\x41\x2e\xad\xad\x37\x29\x45\xda\x9f\xe1\x7d\xc2\x11\x5e\x20\x54\x45\x04\xf2\x36\x65\x21\xc7\x25\x32\xd9\x07\xb5\xdd\x05\x10\x26\x4c\xea\x4f\x43\xe1\xab\xe1\x66\xb0\x11\x41\x99\x1a\x69\x1b\x49\x4b\xca\xda\x8f\x34\x92\x8b\x3e\x7c\xd7\x4d\x9f\x02\xc8\x14\x6c\x73\x3a\x5f\xc8\x3e\x7c\xaf\x86\xd6\x87\x9d\xcc\x20\x13\xfa\xc6\xc8\x88\x7e\x05\x3d\x3e\xa8\xe7\xf6\xf5\x14\x7d\xbd\x44\xa7\xed\x2c\xd1\x75\xd3\x27\xd0\xc4\x00\x39\x22\xd0\x05\x3d\xdc\x0d\x60\x46\xc2\x87\xb9\xde\x23\xdb\x61\x12\x27\xbc\x3f\x8b\x89\x52\x36\xfb\xe0\x18\x05\xf5\x8f\x39\x38\x20\x10\x97\x42\xb9\x78\xa1\xe2\x26\xe5\xc9\x2c\x56\x03\x2b\x16\x21\x17\x92\x30\x25\x10\x42\xe4\x92\x50\x06\xe2\x99\x49\xf2\xd4\x82\x2c\x95\x81\x30\xa0\x42\xac\x10\x12\x06\xc9\x8a\xc3\x9c\xca\xc5\x6a\xd6\x02\x91\x70\xfe\x0c\xff\xf8\xdb\x5f\xff\x7e\xd8\x49\xb9\x36\x7c\x87\x45\xb6\xf6\xdf\x67\xda\xe7\x46\x6a\x73\x2a\x8c\xf9\x3f\x44\x2c\x83\x34\x52\xf1\xd4\x07\x5d\x50\x60\xfb\xe3\x1c\xe5\x1f\x51\x08\x32\x47\x5f\x9d\x09\xf5\x5b\x56\xb7\xa9\x4f\x68\x8c\x0e\xb1\x1a\xa8\xa4\x3c\xa7\xcc\xa5\x54\x03\x55\x94\xa5\x4f\x43\x3d\xe1\x24\xc4\x63\x31\x96\x9c\xb2\x79\xbe\x7f\x19\x10\xde\x00\xa6\xc2\xd5\xff\xb2\xa7\x1f\x17\x54\x2a\xa8\x26\x0b\x84\x39\x32\xe4\x44\x62\x04\x2a\x1b\x7e\x2b\xb7\x14\x79\xc5\x51\x60\x9e\x53\x75\xd0\x97\x85\x41\xdd\x49\xc8\xc2\x83\xba\xce\x50\x15\x1f\x3e\xa5\xb1\x3a\xc6\x14\x96\x2d\x90\x9c\x2e\xfd\x6c\x77\x30\xc0\xa9\xd4\x25\xe1\x02\x7c\xb3\x82\x88\x6c\x6d\x13\x5e\xf2\x7d\x23\x25\xec\xa3\xf6\x96\x1a\x57\x67\xdd\x61\x27\x1b\x0b\xb2\xda\x2d\x2f\xb3\x2c\xe6\x95\x4e\xb1\x87\x22\xfa\x75\x83\xd4\x13\x95\x41\xf5\x96\x46\x59\x18\xaf\x54\x39\x9e\x12\xb9\x28\x36\x34\x55\x4a\x50\xa1\xca\xdf\xdb\xfc\xae\xd4\xef\x3b\x57\x95\x1b\xbd\xe0\xae\x69\xd7\x18\x59\x7d\x01\x6f\x2c\x71\x6e\x09\x8d\x7b\x06\x03\x98\x11\xa1\xeb\x3e\xa3\x45\x50\xe8\xa0\xa7\x07\xe0\x91\x95\x4c\xe2\x84\x44\x6a\x73\xf4\x2a\x44\xea\x75\x0e\x63\x5d\x5d\xab\x7a\x72\x8a\x4f\x54\x48\x61\x58\xdb\x6b\xe5\x82\x27\x8f\x70\x3b\x7a\x0a\x51\x9f\xc5\xbe\x37\xe1\xcf\x6a\xdb\x90\x09\x18\x58\x40\x71\x00\xb9\x20\x12\xa2\x04\x05\x93\x90\x71\x33\xc9\x65\x69\x9b\x8b\x65\x54\x9d\xcd\xbe\x67\x36\xde\xec\xc8\x10\x5e\x0b\x7a\xb9\x59\x65\x0a\x5d\x44\xae\xd2\x6d\x4a\x3d\x30\xe5\x98\x26\x5c\xaa\x44\x1c\x4d\x8f\xcf\xcf\xf3\x22\x2b\x2b\x61\x07\xca\x91\x1a\xeb\x4f\x28\xb3\x6b\x95\xd1\xc9\x89\x1b\x3d\xa8\xe3\x6a\xc6\xf3\x38\xe9\x74\x1c\x84\x55\xa9\xe2\xa0\xdb\xe9\x80\x9b\x64\xd6\xc2\x62\x42\x48\xad\x60\x4c\x42\xf4\x3d\x7d\xc5\xf6\x5a\xe0\x1d\x82\x79\xb3\x43\xd5\xe5\xd7\xd9\xc1\xd0\xfb\xa5\x34\xa8\x23\xd7\x0c\xe4\x31\xc3\xf0\xf1\x4a\x19\x34\x00\xb1\x9a\x09\xc9\x33\xa3\x5b\xd0\x6d\x41\xfb\xff\x75\x35\x5d\x1c\xa2\xda\x24\x93\x87\x2a\x18\xd2\x95\x9c\x9a\xb3\x52\xf8\x39\xa3\x8d\xa2\x9a\xf0\x8d\xf8\x55\x17\x46\xb3\xd0\x2c\xc8\x83\xd0\x1d\xed\x74\x40\xf2\xe7\x0d\x9a\xaa\x82\x59\xc5\xaa\xb8\xc6\xaf\x24\xf6\x4b\xd8\xac\x21\x24\x52\xed\x12\x57\x84\x0b\xd4\x07\x03\xbc\xc2\x44\x85\x28\x99\xc5\x08\x0d\x2c\x39\x66\xab\x28\xb1\x78\x39\x5a\x65\x62\xb7\xd2\xbf\x22\x6a\xf2\xec\xcf\x63\x4b\x23\x36\x47\x1b\x31\x3b\xba\x94\xbd\xc3\x8c\xb2\x5e\xcf\x37\x45\x22\x34\x47\x75\xe0\xd8\xe3\x24\x8a\x0c\xa9\xe9\x49\x14\x5b\xa8\xbe\x56\xf4\xac\xe5\x93\xe4\x01\xd9\x17\x22\x2e\xf0\xd1\x70\xb1\x97\xdc\x53\x2e\xe4\xd5\x22\x9d\x90\xb9\x7b\x4d\x69\xdc\xc7\x2b\xb1\x38\x77\xe5\x17\x06\xfb\x4d\x55\x52\x83\xff\x2e\x57\xba\x05\xef\x1c\x65\x9d\x6e\x43\x6e\xd8\xc1\xc0\xb5\xc8\xba\x20\xef\x30\x74\x9d\x6b\x23\x95\x15\xea\x78\xd0\x2f\x1a\x45\x12\x1b\xaf\xb7\x60\x72\xf9\x87\xd1\xc5\xf4\xea\xf8\x7a\x3c\x32\x6e\x6b\x84\xa6\x3f\xa4\x9f\xbe\x59\x5f\x40\x2d\x1e\x68\xfa\x99\x49\x1a\x8f\xc3\x24\x75\x2d\x7b\xd7\xa0\x85\x71\xb6\x56\xca\xc2\x8c\x8b\x7a\xd3\x6c\xb5\xd1\x1a\x73\xc7\xdc\x19\x27\xe1\x83\xd8\xf4\xad\xd4\xdf\xe3\x42\xed\x7c\x7e\x83\xc2\xa1\xd1\xad\x7c\x9b\xcc\x98\xab\x6c\xc8\xa4\xdc\x34\xa8\x7d\xb1\x2a\xb6\x70\x43\x36\xd0\xc5\x46\x99\x89\x15\x06\xef\xdf\x07\xce\xd4\x7a\x1f\x2f\xcf\xf7\x2a\x59\x65\xa6\x6c\xb3\xda\xc3\xa9\xb9\x8f\x53\xbb\xfd\x26\xa7\x1c\xbd\xc1\x00\xba\xf0\xee\x9d\xc3\xfb\xc5\x83\xd7\x57\xb0\x20\x08\xea\xcd\x4a\x69\xb4\x2c\x48\xfd\xcd\x38\x92\x87\xbd\xa0\xb8\x61\x78\x30\x00\x2a\xf2\x3b\xa1\x96\xd9\x84\x23\x23\xfd\xa6\x77\x07\x7d\xf3\x5e\xf2\x52\x83\xda\x78\xad\xdd\x38\xde\x04\x1e\x2e\xe9\xff\xe2\xce\xf3\x4b\x1e\xf5\x5e\xfe\x83\x81\x58\x62\xbd\xfe\xed\x22\xf3\xbf\x2e\x10\xef\x13\xae\xa3\x42\x05\x0b\x58\xd1\x11\xe8\x55\x4e\x1f\xec\x8d\x00\xd1\xd0\x50\xf8\x08\xbd\xad\xc8\x7a\xf3\xf8\x29\x28\x53\x8e\x5f\x27\x5b\x62\xa0\x0d\xbd\xbb\x60\xcb\x11\x1b\x2c\x8a\x65\xd5\xe0\x17\xd3\x17\x44\x37\x78\xb3\xb3\xc3\x54\xc6\xf9\xdc\x4d\xd7\x6e\xa6\x38\x56\x95\xd6\x0f\xc0\x9b\x4c\xbf\x9c\x9e\x4d\x46\xe3\xab\xe3\xe1\xa8\x32\x9a\xa0\x68\x1c\xf2\x34\x11\xb6\x98\xde\x5d\xcb\xa4\xce\x37\x03\x03\xc2\x2e\x06\x85\xf2\x1f\x2a\x31\xf9\x70\xb7\xad\xaf\x83\x0f\xb3\xf1\xc9\x78\xb4\xe0\xc6\x0b\x54\x31\xf9\xe2\xdd\xb5\xf4\x39\x5f\x09\xd9\xaf\x70\x5f\x56\x23\xec\x5a\xb4\xae\x9c\xd9\x1e\x5d\xef\x48\xb6\xb5\x1b\x58\xe5\xb0\xdf\x0a\x31\xb6\xed\x59\xb9\xf1\xea\x76\x0e\xb3\x8d\x27\x2f\xaf\x46\x17\xd3\xc9\xf1\x27\x4f\xe5\xb2\x5d\x08\x55\x01\xa3\x0a\xce\x72\x4e\x9a\x0a\x7d\x1b\x8c\x52\x55\x55\x11\xf0\x86\xa5\x2a\x04\x29\x2b\xe3\x59\xb1\x63\x6e\x5c\x9a\xfd\xb4\x73\xe3\x4d\xa6\xc3\xf3\xe3\xf1\x58\xb9\x74\x32\x3d\xb9\xbc\x2e\x5e\x46\xc7\xc3\xd3\xec\xe3\xcb\xe9\xd9\xf9\x28\x7b\x3d\x3b\xc9\x9e\xa3\xf3\xf1\xc8\x7e\x37\xab\x3e\x5f\x0c\x27\x67\x97\x17\xd9\xd7\xe4\xf4\xfa\xf2\x4b\xf6\x3a\x3c\x9e\x0c\x4f\xf7\x06\x4c\xa9\x92\xf2\x1b\xb4\x22\x99\xfe\x2d\x33\xff\x74\x7c\x7d\x76\xfc\x43\x6e\xc8\x78\x72\x7d\x76\xf1\xc9\x18\x30\x3c\xbd\xdc\xab\x9c\xbe\xb4\x16\xb5\xb2\xf2\x72\x45\x48\xef\x4a\x03\xab\xc6\xde\x1d\xf2\xdb\x55\xb2\x5f\x61\x3f\x6c\x9d\xfc\xd5\x38\xed\xc6\x0a\x2a\x52\x66\xff\x81\x51\x9c\x0e\x2e\xa3\x6d\xf6\x16\xa3\x1d\x4c\xca\x9b\xfd\xde\x4a\xa0\xa2\x0a\x58\xef\x5a\xef\x05\x5b\x7b\xa8\x26\x30\xc8\x3b\xa7\x50\xfe\x67\xdf\x26\x37\x3f\x12\x97\x0b\x03\x28\x5d\x3b\xea\xb7\xd6\x3a\xeb\x37\xda\x3a\x1c\x80\x5f\xcd\x52\xb7\xf7\x9a\x41\xd1\xd1\xdb\xc5\xba\x04\x9a\xe9\x01\x6e\x2f\x41\x11\x5a\x17\x1c\xfb\xa6\x5f\xf7\xea\x2d\xa8\xd7\x5b\x2e\xab\x8a\xf8\x28\xf1\x48\x39\xce\x37\xed\x82\xce\x2d\x3f\xba\x65\x1d\x95\x1a\xe0\xb5\x1c\xda\xb7\x59\x65\x9d\xb0\x37\x96\xec\xc2\xb3\xf8\x0d\x5a\xa1\x59\x0d\xa6\xc2\xa5\x05\xd3\xe9\xc9\xd9\xf9\x68\x3a\x6d\x41\x3d\xef\xce\xe9\xdf\xa2\xea\x2d\xf0\xf4\x88\xad\xd4\x01\xd4\x3d\x03\x7f\x45\xa9\x59\x7d\x5d\x74\x68\x2a\xef\xc8\xf6\xdf\xae\x6d\x69\xf3\x56\x03\xbb\xb5\x56\x95\xea\xb5\xbd\xe1\xb0\x69\x5d\x0c\xf3\x56\x79\x04\xc6\x63\xa0\xff\x8d\x81\x30\x29\xdc\x0b\xeb\xfb\xf7\x6e\xc3\x24\xff\x5f\x07\xc3\x2b\xc2\x7b\x25\xda\xbb\x3a\xbd\xfa\x61\x74\x31\x3c\xcd\x31\xd5\x0d\x34\x73\x3b\xb0\x1b\x69\xdb\xf4\x3f\x9e\x5d\xbb\xe4\x11\xe5\x56\xb7\xb0\xa2\x1d\x51\x0a\x34\xff\xe6\x27\xd2\xfe\xe5\xb8\xfd\xe7\x6e\xfb\xf7\xd3\xbb\x66\xae\x41\x69\x58\x47\x62\xa3\xb7\x5b\x4f\x38\x00\xaf\xf1\x41\x85\xaa\x91\x94\x5f\xdd\x7f\xbd\x60\x6d\xca\x5b\x72\x4b\xf6\x56\x89\x7d\x4b\xae\x7f\xd4\x37\xed\x9f\xd7\x01\x1c\xbd\xde\x32\xf8\xb6\x79\xd4\xf4\x8f\xbe\x71\x45\xfb\xa6\xcd\xf9\x6a\x9e\xd3\x84\x85\xf8\xca\xf1\xe7\x15\xe5\xc5\x53\x0f\x36\x5d\xa5\x6f\x7e\x0a\x6e\xd9\xdd\xfb\x66\x60\x94\x6f\x7c\xf0\xb7\x3b\xca\xdf\x35\x9b\x41\x85\xda\x79\x53\xb2\xdc\x54\xfc\x55\x0d\x45\x17\xf9\x0d\xab\x52\x3f\x31\x6b\x1b\x3a\x6d\x30\xb3\x32\xa8\xad\x6b\xff\x0c\x00\x00\xff\xff\x36\x89\xf1\x31\x0c\x24\x00\x00")

func assetsPhpbenchPhpBytes() ([]byte, error) {
	return bindataRead(
		_assetsPhpbenchPhp,
		"assets/PhpBench.php",
	)
}

func assetsPhpbenchPhp() (*asset, error) {
	bytes, err := assetsPhpbenchPhpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/PhpBench.php", size: 9228, mode: os.FileMode(511), modTime: time.Unix(1563498621, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOverviewHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x6d\x6f\xeb\xb6\x15\xfe\x9e\x5f\x71\xa6\x62\xb3\xd3\xd9\x92\x95\x38\x59\xaa\xd8\x1e\x8a\xad\x05\xd6\xee\xf6\x02\xcb\xc5\xbe\xb8\xf9\x40\x4b\x47\x36\xaf\x69\x52\x20\x69\x27\xae\xeb\xff\x3e\x90\x92\xad\x77\xd9\x77\x28\xf6\x22\x20\x91\x44\x9e\x73\x78\x5e\x9e\xf3\x90\xd6\x84\x51\xbe\x86\x95\xc4\x78\xea\xac\xb4\x4e\x54\xe0\x79\xb1\xe0\x5a\xb9\x4b\x21\x96\x0c\x49\x42\x95\x1b\x8a\x8d\x17\x2a\xf5\xe7\x98\x6c\x28\xdb\x4f\x3f\x26\xc8\xff\xf8\x42\xb8\xfa\x43\x44\x55\xc2\xc8\x7e\xaa\xde\x48\xe2\x80\x44\x36\x75\x94\xde\x33\x54\x2b\x44\xed\xcc\x6e\x6e\x26\xf6\x75\x76\x03\x00\xb0\x10\xd1\x1e\x0e\xf6\xd1\x5c\x66\x95\x61\x6a\x31\x80\x9e\xb1\x09\xc6\x66\xef\xd9\x4a\x1c\x6f\xec\xcd\x55\x34\xc2\x05\x91\xb9\x5a\x22\x14\xd5\x54\xf0\x00\x62\xfa\x8e\xd1\xf3\x79\xe2\x97\x21\xe5\x11\xbe\x07\xf7\xf9\x90\x16\x49\x30\xca\x5f\x19\xc6\xba\xf8\xbe\x10\x5a\x8b\x4d\x71\xe4\x8d\x46\x7a\x15\xdc\x8f\x46\xc9\x7b\x41\x8c\x84\xeb\xa5\x14\x5b\x1e\x0d\x43\xc1\x84\x0c\xbe\x42\xc4\xa2\x95\xf7\xa1\x5a\x91\x48\xbc\x05\x30\x4a\xde\xed\x9f\xff\x90\xbc\x83\x5c\x2e\x48\xdf\xf7\xfd\x01\xf8\x77\x4f\x03\xf0\x1f\xee\x06\x30\x72\x1f\x6e\x73\x55\xb1\x43\x19\x33\xf1\x36\xdc\x07\x40\xb6\x5a\x34\x86\xee\xc6\x94\xa1\x3a\xd4\xe2\xbc\xab\x04\x56\xf0\xba\x62\x01\xdc\x15\x92\x08\x0b\x49\x5c\x21\x5d\xae\x74\x00\x7f\xba\x10\xe8\xdd\xe3\xfd\x68\x3c\xce\x25\x12\x12\x45\x94\x2f\x03\x13\xe3\x5d\x49\x37\x53\x88\xe3\xf8\xb9\x5c\x61\x45\x7f\xc1\xc0\x7f\x2c\xca\xda\xf1\xb7\xcc\x85\x85\x60\x85\x22\x66\x80\x0a\x62\x86\x05\x05\xc2\xe8\x92\x0f\xa9\xc6\x8d\x0a\x20\x44\xae\x51\x9e\x02\x6d\x8a\x13\x54\x42\xf8\xa1\x66\x13\x28\x67\x94\xe3\x70\xc1\x44\xb8\x6e\x49\x94\x59\xe3\x50\x0b\xd7\x96\x33\xff\x57\x8e\x7c\x21\x64\x84\x72\x98\x81\xc9\x4f\xde\x41\x09\x46\x23\xf8\x2a\x0c\xc3\x42\x7e\xb6\x52\x09\x19\x40\x22\x68\xd1\xfd\x86\x4a\x57\x9d\x78\x13\x32\x1a\x2e\x24\x92\x75\x00\xf6\x36\x24\x8c\x75\xb8\xef\x92\x50\xd3\x1d\x1e\x3a\xca\x1a\xdb\xeb\x8a\x10\x9e\xec\x95\x0b\x7a\x5f\x17\x0b\x0d\x5f\x7b\x1d\x6e\xd0\x25\x17\xb2\xe0\x86\xc6\x77\x3d\x8c\x30\x14\x92\xa4\xfd\x6b\x8b\xa1\x57\x52\x6c\x97\xab\x1a\x90\x08\x21\xe5\x18\x43\xc1\x35\x72\xdd\x44\x04\x64\xa1\x04\xdb\x6a\xac\x73\x81\xdf\xcd\x05\x8f\xe5\x46\x97\x16\x91\xa3\xf2\xba\x7a\xc1\x0e\x95\x44\x05\xc0\x05\xc7\x2a\x6b\xf8\xa3\xd1\xef\xf3\xb1\x0d\x91\x4b\xca\xcf\x29\xad\xf7\xa6\x5e\x30\xd0\x06\xaf\xa0\x57\x97\x1a\xb3\xd8\x76\xfe\x85\x96\xbd\x1f\x8f\xfd\x07\x52\xab\x6d\x1a\x5b\xa1\xb4\x63\xf2\x78\xff\x34\x6e\x6f\xe0\x92\x9f\x96\xba\x75\xd4\xd0\x19\x27\xb6\xbb\xbc\x60\x14\x45\xb5\xd5\xce\xe0\x6a\x5a\xcd\x0d\x2b\xe0\xb1\x34\x50\x25\x80\x9a\x9e\x0c\xb8\x5e\x0d\xc3\x15\x65\x51\x5f\x44\xd1\x6d\x47\x23\x40\xce\xe4\x67\x43\x42\x13\x36\x5c\x88\xf7\xcb\x6b\x43\x07\xc5\x59\x1d\x2d\x09\x57\xb1\x90\x9b\x00\xb6\x49\x82\x32\x24\x0a\xaf\x62\xc1\x8b\x7b\xdc\x43\x15\xc8\x77\x0f\x75\x20\xdf\x55\xca\x62\x91\x08\xe5\xd1\x22\xc3\x5d\xd8\xd2\x46\x57\x6d\x69\x0d\x39\x6e\xa2\x1a\x49\x22\xba\x55\xc1\x53\xde\x15\x13\x2f\x3b\x2a\xdc\x4c\x22\xba\x03\x1a\x4d\x1d\x92\x24\x4e\x7a\x74\xb0\x43\x21\x23\x4a\x4d\x9d\x8c\x65\xb2\x99\xea\x6c\xba\x03\x38\xb3\x89\xd9\x03\x66\x9f\x50\x69\x35\xf1\xec\xf3\xc4\x8b\xe8\xae\x59\xc9\xf0\x95\x03\xbb\x61\x2c\xe4\xd4\x59\xe3\x1e\x28\x07\x85\xfa\x47\xdc\x2b\x07\x82\x4c\xe8\x00\x29\xb1\x06\x86\xcb\x25\x72\xfd\x62\x25\x60\x3a\x05\xa3\x72\x34\x06\x04\x0f\x42\x46\xc3\xf5\xd4\x51\x98\xcd\xf7\xd7\xb8\xbf\x75\x66\xf3\xb9\x95\x7a\x7d\x2d\xb8\x91\x3d\xb6\x45\x08\x76\x3b\xb8\x2a\xce\xef\x8d\xe4\xf5\x71\xe6\x6e\x9a\x25\x38\xd9\xa0\xfa\x9b\x65\xeb\x08\xa6\x30\x7f\x7d\x6e\x0a\xba\x2a\xe9\x32\xe4\x4b\xbd\x32\xe1\x8f\xe0\xe8\xcc\xbe\x65\x2c\x75\xf8\xda\x3c\x1b\x61\x93\xe8\xb3\xe1\xe2\xaa\xe9\xe6\xd1\xb0\xaa\xc5\xff\xc7\xb8\x6f\x26\x6e\x61\x06\x43\xbf\x9a\xf9\x54\xd5\x64\x24\x15\xb2\xb9\xb7\x8b\x5d\x95\xfc\x6c\x9f\x29\xa6\x5d\x93\x05\xc3\xd3\xbc\x5e\x30\x07\x42\x64\x4c\x25\x24\xa4\x7c\x39\x75\x46\x05\xd9\x54\xde\x14\xa7\x3c\x96\x8e\xcb\xfa\x60\xa6\x30\xfb\x8b\x88\x70\xe2\xe9\x55\xbb\xc4\x46\x75\xcf\x7f\xa2\x1b\x54\x10\x12\xc6\x30\xea\x96\xfc\x76\x87\x92\x2c\x11\xda\x2c\x4e\xbc\xaa\xa7\x46\xae\x16\xd3\xc4\x12\x6e\x75\x0c\x37\x09\x23\x1a\x61\x37\xa4\xf1\xd4\xc9\x5b\xc5\x69\x4c\xc8\x09\x0c\xa1\x39\x0c\x18\x34\x48\x54\x5b\xa6\x55\x83\x74\xaa\x11\x99\x6a\x5a\x69\xd7\xa4\xcc\xd6\x54\x37\x24\xbb\x26\xfd\x41\xfd\x35\x3d\x07\xc2\xeb\xab\x0d\xfc\x1a\xa5\xef\xb8\x96\x14\xd5\x09\xeb\x57\x2f\x96\x65\xf8\x9a\x35\x1b\x93\x9d\x25\xb1\x36\x5e\x4e\xf8\xc4\xb3\xc8\x2c\xe3\x39\x07\x74\xad\x02\x67\x08\x9f\xf6\xb8\x42\x96\x3f\x99\xb1\x00\xe6\x73\xb0\xb3\xd6\xe1\x92\xdd\xb3\xfd\x89\x0a\x25\x4d\x34\x28\x19\xe6\x3f\x19\xc3\x88\xbb\x9f\x55\x84\x8c\xee\xa4\xcb\x51\x7b\x3c\xd9\x78\xbb\x2d\x7a\x11\x55\xda\x3c\xb8\x9f\x95\x33\x9b\x78\xa9\xee\xec\x6c\x25\x75\x60\x47\x64\x56\xf8\x17\xd4\x0a\xa6\xf0\xc3\xcb\xc7\x9f\xdc\x84\x48\x85\xfd\xc3\x01\xdc\x7f\x9c\xe7\x7e\x50\x82\xc3\xf1\x98\x6d\x38\x9e\x57\x57\x3d\x38\xfe\xc3\xe3\xbd\xff\xcd\x78\x74\x3f\x7e\x7a\xba\x77\x82\x83\x63\x80\xf2\x77\xca\x51\x99\x17\xdf\xfc\xfb\x3e\xa3\x15\x27\x70\xbc\x0d\xd7\x5e\xe8\xbd\xbd\xbd\x79\xc9\x2a\x59\x20\x0f\x57\x5e\x84\x8b\xed\xd2\xd3\xa8\xb4\x7b\x1a\x33\x0f\xce\xc0\x9a\x72\x02\x47\x31\xc4\xa4\x7f\x77\xfb\xec\x0c\x1c\x63\xf9\x27\xe9\x04\xce\xd8\x19\x38\x19\x60\x9c\x80\x6f\x19\x1b\x38\x1f\x94\x13\xdc\x99\x5b\x86\x03\xfb\x56\x05\x87\x13\x8c\x8e\x03\xe7\xee\xb7\xf0\x0b\xc3\x95\x80\x9f\x9d\x48\x70\xfc\xd9\x29\x39\xf7\xd8\xec\xdc\xb8\xe4\xdc\xb8\xcd\xb9\xfb\xdf\xc2\x39\x33\xd5\x2f\xa7\xec\x9b\x66\xaf\xfc\x92\x57\x7e\xb3\x57\xc7\x41\x5e\xd8\x17\x21\x35\x46\x27\x13\x16\xcb\xc6\x8e\x71\x3d\x43\x83\x3f\x1a\x8f\xc7\x4f\xff\x7d\x34\x8c\x4a\xa1\x8d\xfe\xb7\xd0\x70\xa5\x73\xff\x61\x34\x5c\xe5\xd5\x55\x68\x38\x3e\xdf\x9c\x09\xcf\x10\x07\x49\x12\x98\x02\xc7\x37\xf8\xe7\x16\xfb\x87\x12\xdb\x1a\x2e\xdb\x50\x8d\x52\x05\x30\xef\xcd\xe7\xbd\x01\xf4\x5e\x5f\x7b\xaf\x83\x92\x14\xb2\x00\x7a\x5f\x91\x24\xe9\x95\xc7\x23\xa2\x49\x00\x87\x1a\xdb\x67\xa7\xca\x00\xe6\x15\x43\xe6\xca\x79\x2c\x28\x3c\xd7\xe5\x72\x4a\x0f\xc0\xc6\xd8\x21\xf1\x23\xee\xdb\x84\xce\x67\xab\x66\x6f\xaa\x47\xaf\xba\xd4\xb1\xfc\x1a\x8a\x4d\xb2\xd5\x46\xb0\x1e\x77\xb6\xad\x07\x10\x6f\x79\x68\x7e\xda\xf4\x6f\xeb\x42\xe6\xa2\x71\xff\x77\x7a\x45\x95\x9b\x87\xd0\x22\x99\x9a\xd5\x5b\xc9\xcd\x91\xb5\x51\xe4\x78\xd3\x38\x9c\xef\x19\xe9\x71\xb7\x55\x88\x51\x65\x44\x2a\xfe\xb8\x67\xa0\x3d\x37\xdb\x8f\x85\xec\x1b\xf5\xb5\x39\xd0\x18\x1b\x1d\x11\x18\x39\x0a\x53\x2b\x36\x5f\xbf\xb6\x58\x3c\x49\xaa\x84\x51\xe3\x11\x75\x4f\xed\xe7\xda\xa1\x7e\xcf\xeb\xdd\x36\xc7\x71\x52\x8d\x39\x4c\x53\xfd\xb9\xfd\x7f\x3a\xd3\x0c\xc1\x6f\xc9\x80\x0d\xc5\x68\xc5\xdc\x95\x98\x30\x12\x62\xbf\x57\xea\x66\xd3\x13\xf6\xde\xb1\x36\x8d\xfb\x36\x7f\xed\x27\x79\x9e\x9e\xe3\x3b\x92\x04\x16\x5d\x5c\x53\xbe\xc5\xf6\x95\x5a\xaa\x0d\x67\xf8\xb9\xc9\x56\xad\xfa\xb4\xc5\xd9\x16\xf5\x4c\x55\x09\xa9\xd3\x40\xcc\xd3\x6d\x4b\x9d\x32\x3c\xa6\x3a\xf5\x65\x8e\xf5\x2e\xd3\xe9\xb9\xeb\x52\x5b\xd8\xe2\x6b\x22\x4d\xf1\x4d\x37\xb7\x63\x16\xb9\xf9\x11\x37\x6a\x16\x28\x21\xd3\x46\x93\x35\xe6\x15\x08\x2d\x8a\x77\x23\x95\xc6\xfd\xcc\xd7\x69\xea\x2d\xfc\xfa\x2b\x50\xf7\xc5\x8e\x4d\xd2\x38\x2e\x54\xfb\x14\x6b\xa6\xf5\x6f\x15\x9d\xc6\x7d\xea\x7e\xc7\x23\x98\x99\xa4\x5c\x58\x30\x4d\x9b\x95\xef\x5a\xec\xfa\xd1\x0c\x0a\x7d\xe4\xd1\x30\x8d\x18\x3c\xf0\x47\x0d\x85\x39\x76\x91\xea\x06\xf5\x4a\x44\xaa\x65\x2f\x39\x11\xfc\x19\x3e\x6b\xdc\xb7\x04\x5a\x21\xb1\x72\x41\xcd\x3e\x33\x5f\xe3\xbe\x85\x09\x2a\xba\xf6\xab\x07\xac\x71\xdf\x21\x7d\x6e\xf7\x0e\x8a\xad\xa3\xb1\x89\x64\x2f\x40\x33\x64\x5d\x0c\x6d\x81\xda\xa5\x7e\x62\xd4\x90\xfd\x1f\x53\x6a\x89\x4b\xa7\xd3\xcb\x64\x5a\x51\xb7\xbc\x18\xf3\x8e\x25\xaf\x45\x7e\x03\xc3\xe5\xdf\x63\x0a\x38\xb5\x5f\x66\xda\xa9\xce\xc6\x73\xaa\x6b\xf7\x37\xa0\x66\x9f\x4d\xef\x5b\x1b\x17\x76\x96\xe6\x05\x4c\x35\x43\x4c\x2d\x0c\xc0\x6f\xdb\x30\x90\x29\xfc\x52\xd3\x69\xaa\xdb\x1d\xbf\x2a\xa5\x66\x0b\x2a\x24\x93\x0c\x60\xd1\x7a\x9c\x82\x3e\x10\xf7\x83\x82\x09\x2c\xcc\xad\x35\x17\x19\x5f\xf9\xd7\xba\x55\xb6\x3e\xbb\xce\xfa\xf0\x8b\xcc\x67\x4a\x5f\x4a\x99\xa1\x44\x62\x8f\xa1\x5d\x9b\xaa\xe5\x1d\xdc\x1b\x7a\xfa\xb8\xf8\x8c\xa1\x76\xcd\x5b\xbf\xc2\x89\x0d\x45\x32\x62\xe9\x69\xa0\x6d\x52\xe2\x0e\xa5\xc2\xa6\x79\x1a\x1b\x86\x56\xf3\xd1\x6b\x17\x4b\x97\xbe\x1d\x5b\xe1\x4b\x19\x28\xaa\xfe\x98\x46\x65\x54\xcb\x6a\xb9\xca\xd1\x9c\x5f\x0a\x1f\x63\xfe\x15\x00\x00\xff\xff\xf2\x2c\xe7\xf0\x05\x20\x00\x00")

func templatesOverviewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesOverviewHtml,
		"templates/overview.html",
	)
}

func templatesOverviewHtml() (*asset, error) {
	bytes, err := templatesOverviewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/overview.html", size: 8197, mode: os.FileMode(511), modTime: time.Unix(1563498956, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/PhpBench.php":     assetsPhpbenchPhp,
	"templates/overview.html": templatesOverviewHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"PhpBench.php": &bintree{assetsPhpbenchPhp, map[string]*bintree{}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"overview.html": &bintree{templatesOverviewHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
