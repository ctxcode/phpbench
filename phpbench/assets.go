// Package main Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// assets/PhpBench.php
// templates/overview.html
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsPhpbenchPhp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdb\x72\xe3\xb8\xd1\xbe\xf7\x53\xf4\xea\x57\x99\xd4\x8e\x8e\x33\xff\x56\x12\xc9\x9a\x29\xaf\x56\x33\x76\xc5\xb1\x5d\xb6\x26\x53\x15\xdb\xab\x82\x28\xc8\x42\x99\x02\xb9\x00\xe8\xc3\x7a\xfc\x1e\xb9\xcb\x55\xde\x2f\x8f\x90\x6a\x00\x14\x01\x8a\x92\x27\x95\xec\x45\xaa\xe2\x1b\x92\x40\xa3\x0f\x5f\x77\xa3\x1b\x90\x0f\x3e\xa4\xcb\x74\x6f\x2f\x8a\x89\x94\x70\xbe\x4c\x7f\xa4\x3c\x5a\xc2\xf3\xde\x1e\x00\x80\x54\x44\xb1\x08\xea\x73\x1a\x09\x4a\x24\x9d\xb0\x15\x85\x21\xf0\x2c\x8e\x07\x1e\x81\xa4\xea\x54\x54\xce\x28\xb6\xa2\x42\xc2\x10\xae\x6e\x06\x7b\x9b\x33\xa3\x24\xe3\x0a\x86\xd0\xf5\x57\x45\x09\x97\xca\x99\xd3\x93\x69\x36\x8b\x59\x94\xd3\x2c\x32\x1e\x29\x96\x70\xfc\x16\x0a\x35\x13\xa1\xe1\xd9\x80\x67\x4d\x5f\x30\xec\xf7\xad\x1e\x57\x81\x0a\xa0\x6d\x65\xdf\xc0\x10\x56\x2c\x12\x09\x7e\x85\x4a\x64\xb4\x61\xb4\x78\xd9\x29\x0f\xa9\x47\xc9\x9c\x5a\x69\x4d\xa8\x2f\x58\x4c\x39\x59\xd1\x26\xd4\x63\xc6\xe9\x29\x8e\x45\xc9\x9c\xba\x8a\xd4\x29\x9f\x57\xc9\x2b\x08\xb4\x1d\x30\xdc\xad\xf2\xa0\xa0\xc7\x81\xcb\x94\x6a\x88\x34\xf7\x96\xe5\x51\xd0\x64\x5c\x52\x15\xee\x64\xe8\xa9\xb0\x42\x47\x89\x24\xe3\xf3\xd0\x61\xff\x3d\xf4\xba\xdd\xae\x7d\xb8\xf4\x6c\x01\xe1\x77\x6b\xee\x3a\x06\x5c\x93\x3d\xfc\xf3\x08\x59\xc4\x49\x22\xc2\x12\x0c\x39\x6f\x68\x43\x10\x14\xea\xbf\x6c\x13\xe5\xc6\xe3\x56\x89\xa5\xa0\x35\x82\x2d\xca\x1d\x2d\xaf\x9b\x0b\xee\xba\x32\x4b\x0e\x69\x0d\xab\x59\x0e\x7c\xd7\x6e\x27\x5b\xd3\x75\x3a\x40\xa3\x65\xa2\x61\x6e\x43\xb0\x92\x81\x8b\x7d\x26\x62\x18\x42\xb0\x54\x2a\xed\x77\x3a\xbd\xb7\xbf\x6b\x77\xdb\xdd\x76\xaf\xff\xae\xdb\xed\x75\xe6\x44\x11\x07\x98\x3a\x7e\x63\x4e\x79\x96\x07\x79\x1c\x06\x30\x7c\xef\x44\xa5\x4f\xa4\x1d\xa1\x29\x7c\xdf\x94\xc8\xee\xe8\x93\x61\x63\x82\xdc\x9f\x34\x51\x6e\xe6\x6d\xc4\xfb\x04\x18\xfd\x66\x1a\xdf\x4a\x93\x2b\x69\xa6\x56\xb2\xac\x1a\x02\xae\xe7\x3c\x67\xb9\xf1\xd7\x28\x2d\xa1\x7c\xae\x17\xd8\xa0\x45\x4f\x6c\x21\x77\x52\x27\x37\x3c\x4d\xa4\xfa\xc2\xd4\x32\xc9\xd4\x17\xc2\x54\x88\x3e\x68\x1a\x70\x1b\x05\xb5\xa0\x2a\x13\xdc\xf7\xe3\x27\xaa\x20\xfa\x7c\x71\x02\x82\xca\x24\x13\x11\x2d\x5c\x13\x19\x47\xe2\x63\xca\x38\x53\xa1\xc3\xaa\xd3\x81\x4b\xaa\x40\x26\x2b\x0a\x49\x8a\xbb\x89\x84\x16\x3c\x50\x20\x82\x42\x4a\xa4\x64\xfc\x16\x18\x07\x02\x99\xa4\x82\xdc\x62\xf6\xa9\x24\x81\x25\x15\x85\x04\xcd\x59\x52\x95\xa4\x6a\x4a\x84\x20\x4f\xa1\x96\xd9\x2c\x45\xc3\xe8\xf3\xc5\xc9\xd9\xf9\x64\x7a\x31\x9e\x7c\xbe\x38\x9d\x5c\x1c\x9e\x5e\x7e\x1c\x5f\x20\x56\xbd\x66\x25\x21\x9a\x83\x6e\x41\x5e\x95\x04\xe7\x67\x97\x93\x1d\xeb\x71\xfa\xe3\xf1\xf8\xe4\xa7\x4b\xcd\x06\x51\x74\xd0\x2f\xa3\xc0\xe7\xa0\x96\x14\x04\xfd\x25\xa3\x52\xc1\x3e\x48\x72\x8f\x9f\x32\x4d\xb8\xa4\xa0\x12\xa8\xe3\x47\x81\x2b\x7e\xe5\xb8\xd2\x47\x1a\x19\xab\x7d\xb6\xa3\x38\x91\x05\x4f\x95\x40\x14\x53\x22\x20\x4b\x0d\xe4\xb9\xb3\xa4\x8f\x65\x84\xab\xd6\xec\xbc\x0a\x20\xd8\x3d\x51\x74\xa3\x04\x6c\x09\x9c\x94\x08\xb2\x92\xee\x86\xb4\x48\x04\x25\xd1\x12\x42\x3b\x07\x44\x42\xfd\x8e\x3e\x21\x42\xfb\xf5\x7b\x12\x97\x77\x2f\xdc\xe7\x98\xcc\xfd\x8a\x04\x65\x0a\x0d\xc6\x3d\xc1\x18\x63\xab\x34\xc6\x42\x14\x34\x83\xa6\x1e\x73\xd0\x00\x7f\xff\xd4\xab\x50\xed\xa9\x51\xe4\x0a\x8b\x9f\xd6\xa4\x0d\xc1\x10\xeb\x41\x26\x62\xca\x23\x5d\xd7\x7c\x4e\xce\x8e\xa8\x19\x48\x25\x30\x4c\x1d\xf1\xfb\x28\xde\x61\xee\xd5\x94\x94\x08\x85\x65\x25\x25\x42\xd2\x69\x26\x62\x8d\x96\x47\xb2\x40\xc7\x2e\x64\x12\xdd\x25\x29\xe5\xa1\x59\x72\x15\x2c\x13\xa9\x82\x1b\x3f\xd8\x98\xc4\x8a\x96\x53\xa4\x89\x50\xc1\x4d\x03\x3e\x80\x3f\x02\x7d\xf8\x7d\xd7\x5f\x58\xa7\x42\xf0\xa4\xa9\x9f\x52\x89\x26\xbc\xf3\x4a\x59\x3d\xc9\xb0\x8e\xd6\x74\x8c\xd7\xb0\x3c\xe6\x0c\x89\x5a\x06\x37\xd0\x86\x1a\x1c\x4d\x26\xe7\x9d\x5e\xbb\x77\x2d\xae\x79\x6d\xe0\x2f\x6d\x0f\xa1\x76\x94\x48\xd5\xf7\x16\x1b\x0b\x70\xf1\xb6\x35\xa3\x84\x2b\xca\x55\x6b\xf2\x94\xd2\x3e\x90\x34\x8d\x59\x44\x30\xc6\x3a\x8f\xad\x87\x87\x87\xd6\x22\x11\xab\xd6\xda\x35\xf3\xd7\xd8\x9c\x50\x7e\xab\x96\x46\x09\xa9\x70\x59\xe8\x3a\xad\xf1\x8a\x2a\x9c\xea\xf8\xee\x9b\x44\x42\xc2\x12\xb1\x09\x4f\xe3\x02\x87\x6d\x39\x46\x73\x9e\x2e\x51\x65\x59\x5f\x3c\x08\xa6\x68\x58\x5f\xa4\x4d\xbd\xc8\x09\xbb\x85\x4d\xcb\x45\x5a\x74\x65\x2f\x7b\x7b\x45\x0e\x2e\xd3\x19\xf6\xaa\x53\x2a\x04\xd6\x0a\xea\x34\x5d\x9a\x5e\xd7\xda\xe0\x40\xaa\xa7\x98\xbe\x9f\x25\xf3\xa7\xe6\x52\xad\xe2\xe7\x94\xcc\xe7\x8c\xdf\xf6\xbb\x83\x15\x11\xb7\x8c\xf7\xbb\x83\x17\x48\x05\x05\x99\x12\x0e\xcf\x30\x67\x32\x8d\xc9\x53\x1f\x66\x71\x12\xdd\x0d\x40\x4f\xb6\x73\x69\x2d\x14\xa1\x49\xfb\x33\x8a\xd9\x0d\xcf\x10\x61\x9f\x4a\x45\x8b\xf1\x48\xd0\x15\xe5\xaa\x0f\x58\x14\x07\x10\x19\xaf\xf4\x73\x8a\x10\x87\x1b\x83\x42\x04\xe3\x38\xd2\xb2\x92\x56\x8c\xb7\x1e\xd8\x1c\xfd\xf7\xae\x9b\x3e\x0e\xc0\x28\xd8\x12\xec\x76\xa9\xfa\xf0\x03\x0e\xbd\x1c\x74\x8c\x41\xb6\x1b\xb0\x46\xce\xd9\x3d\xe8\xf1\x61\x2d\xb7\xaf\x87\xf4\xb5\x12\x9d\xb6\xb3\x44\xd7\x4d\x1f\x41\x13\x03\xe4\x88\x40\x17\xf4\x70\x77\x00\x33\x12\xdd\xdd\xea\xea\xda\x8a\x92\x38\x11\xfd\x59\x4c\x50\x59\xf3\x21\xe8\x7c\x50\x7b\x9f\x83\x03\x92\xd2\x95\xc4\x7d\x77\x89\x9b\x79\x2a\x92\x59\x8c\x03\x19\x9f\x53\x21\x15\xe1\x28\x10\x22\x2a\x14\x61\x1c\xe4\x13\x57\xe4\xb1\x09\xd8\x2b\x29\x0a\x84\x63\x72\x67\x14\x12\x0e\x49\x26\xe0\x96\xa9\x65\x36\x6b\x82\x4c\x84\x78\x82\x7f\xfc\xed\xaf\x7f\x3f\xe8\xa4\x42\x1b\xbe\xc5\x22\x57\xfb\x1f\x8c\xf6\xb9\x91\xda\x9c\x0a\x63\xfe\x8f\x52\x5a\x06\x69\x8c\xf1\xd4\x07\xdd\x23\xd3\xd6\xfb\x5b\xaa\xfe\x44\xa5\x24\xb7\x34\x34\xe9\x93\xe7\x83\xa1\xfe\xc8\x62\xea\x11\xe3\x40\x25\xe5\x09\xe3\x3e\x25\x0e\x54\x51\x96\x3e\x2d\xf5\x44\x90\x88\x1e\xca\x4b\x9d\x4c\x79\x53\x61\x41\x78\x05\x98\x0a\x57\xff\xcb\x9e\x7e\x58\x32\x85\x50\x4d\x96\x14\x6e\x29\xa7\x82\x28\x3a\x07\xcc\x86\xdf\xca\x2d\xeb\xbc\x12\x54\xd2\x3c\xa7\x6a\xa0\x4f\xaa\xc3\x9a\x97\x90\x6b\x0f\xea\x6e\x14\xab\x0d\x7d\x34\xb5\x09\xb1\x6c\x82\x12\x6c\x15\x9a\xdd\xc1\x02\x57\x14\x66\xb3\x02\xeb\xb2\xce\x4e\x78\xce\xf7\x8d\x94\xf0\xf7\xda\x5b\x38\x8e\x65\xf2\xa0\x63\xc6\x06\xa6\x22\xe6\xed\xbc\xc3\xbc\xd2\x29\xee\xd0\x9c\xdd\x17\x48\x3d\x32\x35\xa8\xde\xd2\x18\x8f\xe2\x0c\x2b\x31\x56\x9f\xf5\x86\x56\x5f\x70\x18\xc2\x8c\x48\xdd\xd6\xdb\x49\xc3\x1f\xf7\x65\x3d\x3d\x84\x80\x64\x2a\x89\x13\x32\xc7\x3d\x2b\x70\x77\x66\xd3\xc8\x82\x5e\xe7\x1d\x74\xf5\xe1\x0a\x8f\x0b\x53\xfa\xc8\xa4\x92\x96\xb5\xbb\x56\x2d\x45\xf2\x00\xd7\xe3\xc7\x88\xea\xbe\x35\x0c\x26\xe2\x09\xb3\x59\x25\x60\xb5\x05\xe4\x00\x6a\x49\x14\xcc\x13\x2a\xb9\x02\xc3\xcd\xc6\xbc\xa3\x6d\x2e\x96\x33\xec\x63\xc3\xc0\xee\x87\x66\x27\x97\x41\x13\x7a\xb9\x59\x65\x0a\x7d\x20\xc8\xd2\x4d\x4a\x3d\x30\x15\x14\xeb\x3f\xe6\xc7\x78\x7a\x78\x72\x92\x17\x78\xed\x1c\x6c\x41\xec\xf5\xc6\x27\xaa\xcc\x01\xde\xea\xe4\xb9\x53\x0f\x6a\x77\xcf\x44\xee\xbe\x4e\xc7\x43\x18\xdb\x7a\x0f\xdd\x4e\x07\xfc\xd8\x77\x16\xae\x27\xa4\xd2\x0a\xc6\x24\xa2\x61\xa0\xaf\x5d\x82\x26\x04\x07\x60\xdf\xdc\x08\xf2\xf9\x75\xb6\x30\x0c\x7e\x2d\x0d\xea\x80\xb2\x03\x16\xe3\x3a\xa7\x0f\xe7\x68\xd0\x10\x64\x36\x93\x4a\x18\xa3\x9b\xd0\x6d\x42\xeb\xff\xf5\x81\x7b\x5d\xdb\xb4\x49\x36\x3d\x30\x18\xd2\x4c\x4d\x6d\x09\x93\x61\xce\xa8\x50\x74\xcf\x8d\x29\x3b\x5b\x60\xa9\xc4\x53\x01\x0e\x36\xef\x59\x8c\x0d\x16\xbd\x27\x71\x58\x32\xf5\x05\x22\xa2\x30\x17\xcf\xb1\x45\xd4\xdb\x2f\x7c\x85\x09\x46\x1c\x99\xc5\x14\xea\xb4\x84\xf3\x46\xe9\x77\x78\x79\x5a\x19\xb1\x1b\x49\x56\x11\x04\xeb\x1c\xb3\xa1\xa2\x01\xb8\xa5\x2e\x00\x6e\xb0\xa0\xbd\x23\x43\x59\xab\xe5\x5b\x0f\x91\x9a\x23\x6e\xeb\xee\x38\x99\xcf\x2d\xe9\x82\xc4\x92\x3a\x1b\x95\xbe\x10\xe9\x39\xcb\x27\xc9\x1d\xe5\x5f\x88\x3c\xa5\x0f\x96\x8b\xbb\x64\xc1\x84\x54\xe7\xcb\x74\x42\xb0\xfb\x56\x22\xcb\x2f\x17\xea\x8b\x38\x93\xcb\x13\x5f\xfe\xda\xe0\xb0\x81\xa7\x49\x08\xf7\x73\xa5\x9b\xb0\xef\x29\xeb\x5d\x53\xe5\x86\x61\xf7\xe6\x12\x39\x0d\xe3\x16\x43\x5f\x72\x6d\x14\x5a\x81\x9b\xb0\x7e\xd1\x28\x92\xd8\x7a\xbd\x09\x93\xb3\x3f\x8e\x4f\xa7\xe7\x87\x17\x97\x63\xeb\xb6\x7a\x64\x2f\xfa\xf4\x33\xb4\xeb\xd7\x50\xcb\x3b\x96\x7e\xe6\x8a\xc5\x97\x51\x92\xfa\x96\xed\xd7\xd9\xda\x38\x57\x2b\xb4\xd0\x70\xc1\x37\xcd\x56\x1b\xad\x31\xf7\xcc\x9d\x09\x12\xdd\xc9\xe2\x02\x12\xff\x1e\x96\xb8\x91\x85\x75\x06\x07\x56\xb7\x8d\xfe\x56\x33\xc7\x13\x94\x91\x72\x55\x67\x37\x83\xbd\x8d\x83\x5c\x4e\x36\xd4\x25\xbd\xf2\x20\x67\x54\x7a\xf3\x66\xe7\xc1\xcd\xe7\x15\x84\x41\x25\x2b\x63\xca\x26\xab\x1d\x9c\x1a\xbb\x38\xb5\x5a\xaf\x72\xca\xd1\x1b\x0e\xa1\x0b\xfb\xfb\x1e\xef\xe7\x00\xbe\x7e\x05\x07\x82\x41\xad\xfa\x2c\xcb\xca\x82\xf0\x6f\x26\x28\xb9\xdb\x7d\x9a\xf5\xc2\xb0\x3d\x84\xe2\xd8\xac\x65\xea\x53\xa1\x7e\xbb\xea\xe1\x81\xd0\xbc\x97\xbc\x54\x67\x2e\x5e\x2f\x7e\x1c\x17\x81\x47\x57\xec\x7f\x71\x17\x84\x25\x8f\x06\xcf\xff\xc1\x40\x2c\xb1\x7e\xf9\xed\x22\xf3\xbf\x2e\x10\x17\x89\xd0\x51\x81\xc1\x02\x4e\x74\x0c\xf4\xaa\x75\xe9\x82\xd7\x03\x44\x43\xc3\xe0\x3d\xf4\x36\x22\xeb\xd5\xf2\xb3\xa6\x4c\x05\xbd\x9f\x6c\x88\x81\x16\xf4\x6e\x06\x3b\xee\xb2\xd6\xcb\xaa\xc1\x5f\x4f\x9f\x12\x7d\x5d\x6f\x6a\x87\x6d\x74\xf3\xb9\xab\xee\x4d\x63\xd3\x45\xda\xaa\xd2\xfa\x21\x04\x93\xe9\x97\xa3\xe3\xc9\xf8\xf2\xfc\x70\x34\xae\x8c\xa6\x7c\xad\x54\x22\x4d\xa4\x2b\xa6\x77\xd3\xb4\xa9\xf3\xdd\xd0\x82\xb0\x8d\xc1\x5a\xf9\xb7\x95\x98\xbc\xbd\xd9\xd4\xd7\xc3\x87\xbb\xf8\x18\x1e\x4d\xb8\x0a\x06\xd8\x1b\x3e\x07\x37\x4d\x5d\xe7\x2b\x21\xfb\x06\xf7\x99\x1e\x61\xdb\xa2\x97\xca\x99\xcd\xd1\x97\x2d\xc9\x56\xfa\x79\xa6\x1c\xf6\x1b\x21\xc6\x37\x3d\xab\x0a\xaf\x6e\xe6\x30\x2f\x3c\x79\x76\x3e\x3e\x9d\x4e\x0e\x3f\x05\x98\xcb\x6e\x23\x54\x05\x0c\x36\x9c\xe5\x9c\xb4\x0d\xf7\x26\x18\xa5\xae\xaa\x22\xe0\x2d\x4b\x6c\x04\x19\x2f\xe3\x59\xb1\x63\x16\x2e\x35\xbf\x09\x5e\x05\x93\xe9\xe8\xe4\xf0\xf2\x12\x5d\x3a\x99\x7e\x3c\xbb\x58\xbf\x8c\x0f\x47\x47\xe6\xe3\xcb\xd1\xf1\xc9\xd8\xbc\x1e\x7f\x34\xcf\xf1\xc9\xe5\xd8\x7d\xb7\xab\x3e\x9f\x8e\x26\xc7\x67\xa7\xe6\x6b\x72\x74\x71\xf6\xc5\xbc\x8e\x0e\x27\xa3\xa3\x9d\x01\x53\xea\xa4\xc2\x3a\xab\x48\xa6\x7f\xcb\xcc\x3f\x1f\x5e\x1c\x1f\xfe\x98\x1b\x72\x39\xb9\x38\x3e\xfd\x64\x0d\x18\x1d\x9d\xed\x54\x4e\x9f\x41\xd7\xbd\x32\x7a\xb9\x22\xa4\xb7\xa5\x81\xd3\x63\x6f\x0f\xf9\xcd\x2e\x39\xac\xb0\x1f\x36\x2a\x7f\x35\x4e\xdb\xb1\x82\x8a\x94\xd9\x5d\x30\xd6\xd5\xc1\x67\xb4\xc9\xde\x61\xb4\x85\x49\x79\xb3\xdf\xd9\x09\x54\x74\x01\x2f\xdb\xd6\x07\x83\x8d\x3d\x54\x13\x58\xe4\xbd\x2a\x94\xff\x5d\xe7\xff\x4f\x90\xff\xf6\xac\x7f\xd1\x2f\x37\x06\x50\x3a\x76\xd4\xae\x9d\x75\xce\x8f\xfb\x35\x68\x43\x58\xcd\x52\x5f\xa2\x35\x06\xde\x55\x75\x15\xeb\x12\x68\xf6\xa6\x6d\x73\x09\x95\x91\x73\xc0\x71\x0f\xee\xb5\xa0\xd6\x84\x5a\xad\xe9\xb3\xaa\x88\x8f\x12\x8f\x54\xd0\xdb\xe2\xf4\xdf\xb9\x16\x1f\xae\x79\x07\x53\x03\xf0\xe8\xef\xd0\xbe\xce\xca\xdc\x37\xbd\xb2\x64\x1b\x9e\xeb\x7f\x5e\x40\x34\xab\xc1\x44\x5c\x9a\x30\x9d\x7e\x3c\x3e\x19\x4f\xa7\x4d\xf3\x83\x86\x3d\xae\xea\xa9\x40\x8f\xb8\x4a\xb5\xa1\x16\x58\xf8\x2b\x5a\xcd\xea\xe3\xa2\x47\x53\x79\x46\x76\xff\xb6\x6d\x4b\xc5\xdb\x9e\xf3\xa8\x4e\xf5\xbd\x9d\xe1\x50\x5c\x5d\x8c\xf2\x0b\xe9\x39\x58\x8f\x81\xfe\x7f\x14\xc2\x95\xf4\x0f\xac\x6f\xde\xb8\x10\x16\xff\xb4\x62\x79\xcd\xe9\x02\x45\x07\xe7\x47\xe7\x3f\x8e\x4f\x47\x47\x39\xa6\xfa\x3e\xcc\x9e\x0e\xdc\x7b\xb1\x4d\xfa\x9f\x8e\x2f\x7c\xf2\x39\x13\xce\xe5\x5f\xc5\x75\x44\x29\xd0\xc2\xab\x9f\x49\xeb\xd7\xc3\xd6\x5f\xba\xad\x3f\x4c\x6f\x1a\xb9\x06\xa5\x61\x1d\x89\xf5\xde\x76\x3d\xa1\x0d\x41\xfd\x2d\x86\xaa\x95\x94\x1f\xdd\xbf\x5d\xb0\x36\xe5\x35\xb9\x25\x7b\xab\xc4\xbe\x26\xf7\x9a\xc3\xf7\xe1\x87\xbe\xbd\x02\x6a\x7c\x68\x84\xf6\x7e\xf2\xab\x7d\x4e\x13\x1e\xd1\xaf\x82\xfe\x92\x31\xb1\x7e\xea\xc1\x86\xaf\xde\xd5\xcf\x83\x6b\x7e\xf3\xa6\x31\xb0\x6a\xd6\xdf\x86\x9b\x37\xb4\xef\x1a\x8d\x41\x85\x82\xf9\x6d\x62\xf9\x36\xf0\x9b\x6e\x02\x7d\x8c\x0b\x56\xa5\x8b\x40\x73\xdf\xe7\x5d\x78\xd9\x95\x83\xbd\x97\xbd\x7f\x06\x00\x00\xff\xff\x4c\x1b\x4e\x28\xd9\x25\x00\x00")

func assetsPhpbenchPhpBytes() ([]byte, error) {
	return bindataRead(
		_assetsPhpbenchPhp,
		"assets/PhpBench.php",
	)
}

func assetsPhpbenchPhp() (*asset, error) {
	bytes, err := assetsPhpbenchPhpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/PhpBench.php", size: 9689, mode: os.FileMode(511), modTime: time.Unix(1563453348, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOverviewHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x6d\x6f\xe3\xb8\xf1\x7f\x9f\x4f\x31\x7f\x2d\xfe\xb5\x73\xb5\x25\x39\xc9\x06\x59\xc5\x76\x71\x68\xef\x80\xde\x76\x6f\x81\x66\xd1\x37\xbe\xbc\xa0\xa4\x91\xc5\x35\x4d\x0a\x24\x9d\xc4\xe7\xf3\x77\x2f\x48\xc9\xb6\x9e\xed\x2d\x0e\x7d\xd0\x62\x23\x89\x9c\x19\xce\xc3\x6f\x7e\xa4\x35\x65\x94\xaf\x20\x95\x98\xcc\x9c\x54\xeb\x4c\x05\x9e\x97\x08\xae\x95\xbb\x14\x62\xc9\x90\x64\x54\xb9\x91\x58\x7b\x91\x52\x7f\x4a\xc8\x9a\xb2\xed\xec\x73\x86\xfc\x8f\x4f\x84\xab\x3f\xc4\x54\x65\x8c\x6c\x67\xea\x95\x64\x0e\x48\x64\x33\x47\xe9\x2d\x43\x95\x22\x6a\x67\x7e\x75\x35\xb5\xaf\xf3\x2b\x00\x80\x50\xc4\x5b\xd8\xd9\x47\x73\x99\x55\xc6\xb9\xc5\x00\x06\xc6\x26\x18\x9b\x83\x47\x2b\xb1\xbf\xb2\x37\x57\xd1\x18\x43\x22\x4f\x6a\x99\x50\x54\x53\xc1\x03\x48\xe8\x1b\xc6\x8f\xc7\x89\x5f\xc7\x94\xc7\xf8\x16\xdc\x9e\x86\xb4\xc8\x02\xff\xf4\xca\x30\xd1\xe5\xf7\x50\x68\x2d\xd6\xe5\x91\x57\x1a\xeb\x34\xb8\xf5\xfd\xec\xad\x24\x46\xa2\xd5\x52\x8a\x0d\x8f\xc7\x91\x60\x42\x06\xef\x10\xb1\x6c\xe5\x6d\xac\x52\x12\x8b\xd7\x00\xfc\xec\xcd\xfe\x9f\xbc\xcf\xde\x40\x2e\x43\x32\xf4\x47\xf6\x9f\x3b\xb9\x6e\x8d\xcb\x4d\x28\x43\xb5\x6b\x04\x71\x53\xf3\xba\xe4\x52\xcd\x02\xb8\x29\x92\x18\x4b\x19\x6a\xf1\x37\xb9\xf7\xef\x4b\x61\x66\x24\x8e\x29\x5f\x06\x37\x07\x5f\x4f\x53\x85\x46\x92\x24\x8f\xd5\x4a\x29\xfa\x2b\x06\x93\xfb\xb2\xac\x1d\x7f\x45\xba\x4c\x75\x00\xa1\x60\xa5\x62\x78\xdf\x41\x28\x64\x8c\x72\x2c\xed\xf4\x24\x7b\x03\x25\x18\x8d\xe1\xdd\x03\x26\x93\x24\x79\x84\xef\xbc\xf6\x70\xa8\xc6\xf5\xae\xe1\xaa\xcd\x68\xd5\xd5\x62\x81\xa2\x8a\xa5\x15\xa2\x28\x2a\x05\xb4\x91\x4a\xc8\x00\x32\x41\xb9\x46\xd9\x53\x85\xfa\xd2\xaf\x42\xc6\xe3\x50\x22\x59\x05\x60\x6f\x63\xc2\x58\x47\x0d\x8c\xa6\x4b\x22\x4d\x5f\xb0\xaf\x10\x89\xbd\x2e\x08\xe1\xc1\x5e\x95\x7c\x96\x2a\xd3\x9b\x3b\x97\x2e\xb9\x90\x25\x37\x34\xbe\xe9\x71\x8c\x91\x90\x24\x6f\x1c\x46\x39\x8e\x75\x2a\xc5\x66\x99\x36\x2a\x4f\x08\xa9\xc6\x18\x09\xae\x91\xeb\xb6\x0e\x24\xa1\x12\x6c\xa3\xb1\xd9\x84\x93\xfe\x26\xbc\xaf\x76\x58\x8e\x11\xbf\xba\xae\x0e\xd9\xae\x96\xa8\x00\xb8\xe0\x58\x6f\xd7\x89\xef\xff\xff\x69\x6c\x4d\xe4\x92\xf2\x63\x4a\x9b\x7d\xa3\x43\x06\xda\xf4\x0c\xe8\xb4\x89\xb3\xbc\x25\xce\xf4\xff\xcd\x07\xf4\x49\xd8\x28\x63\x03\xea\x37\x61\x98\x7c\xb8\xeb\x6e\xae\x8a\x4b\x96\x1e\x75\xdc\x02\xfd\x66\x97\x76\x2d\x18\xc7\x71\x63\xb5\x23\x8e\xda\x56\x73\xa3\x1a\x4e\x08\xa3\x4b\x1e\x40\x84\xcd\x66\x29\xe9\xc9\x80\xeb\x74\x1c\xa5\x94\xc5\x43\x11\xc7\xd7\x3d\x98\x87\x13\x5b\x1e\x0d\x09\x4d\xd8\x38\x14\x6f\xe7\xd7\x86\x1e\xfa\xb1\x3a\x5a\x12\xae\x12\x21\xd7\x01\x6c\xb2\x0c\x65\x44\x14\x5e\xc4\x50\x67\xf7\x91\xf7\x75\xcc\xde\xbc\x6f\x62\xf6\xa6\x56\x16\x0b\x3a\xa8\x8e\x96\x29\xec\x5b\xb7\x8d\x9b\xeb\x1e\x1c\xc2\xbb\x36\x32\x91\x24\xa6\x1b\x15\x3c\x9c\x70\x3f\xf5\x8a\x5d\xf8\x6a\x1a\xd3\x17\xa0\xf1\xcc\x21\x59\xe6\xe4\xbb\xb2\x1d\x8a\x18\x51\x6a\xe6\x14\x3c\x52\xcc\xd4\x67\xf3\x7d\xc6\x99\x7f\x41\xa5\xd5\xd4\x8b\xe9\x4b\xbb\x9c\x21\x21\x07\x5e\xc6\x89\x90\x33\x67\x85\x5b\xa0\x1c\x14\xea\x8f\xb8\x55\x0e\x04\x85\xd0\x0e\x72\xb6\x0c\x0c\x41\x4b\xe4\xfa\xc9\x4a\xc0\x6c\x06\x46\x65\x6f\x0c\x08\x1e\x44\x8c\x46\xab\x99\xa3\xb0\x98\x1f\xae\x70\x7b\xed\xcc\x17\x0b\x2b\xf5\xfc\x5c\x72\xa3\x78\xec\x0a\x0a\x2c\xc7\x9f\x09\xed\x47\x23\x73\x41\x68\x27\xcf\x8c\x55\x4e\xd6\xa8\xfe\x6a\x59\x37\x86\x19\x2c\x9e\x1f\xdb\xe2\xac\x4b\xba\x0c\xf9\x52\xa7\x26\x62\x1f\xf6\xce\xfc\x7b\xc6\x72\x1f\x2f\x4d\xad\x11\x36\xb9\x3d\x1a\x2e\xaf\x9a\x6f\x02\x2d\xab\x5a\x70\x7f\x4e\x86\x66\xe2\x1a\xe6\x30\x9e\xd4\x93\x9d\xab\x9a\x54\xe4\x42\x36\xdd\x76\xb1\x8b\xf2\x5d\xec\x17\xe5\x4c\x6b\x12\x32\x3c\xcc\xeb\x90\x39\x10\x21\x63\x2a\x23\x11\xe5\xcb\x99\xe3\x97\x64\x73\x79\x53\x8f\xea\x58\x3e\x2e\x9b\x83\x85\xc2\xfc\xcf\x22\xc6\xa9\xa7\xd3\x6e\x89\xb5\xea\x9f\xff\x42\xd7\xa8\x20\x22\x8c\x61\xdc\x2f\xf9\xfd\x0b\x4a\xb2\x44\xe8\xb2\x38\xf5\xea\x9e\x1a\xb9\x46\x4c\x53\xcb\xa6\xf5\x31\x5c\x67\x8c\x68\x84\x97\x31\x4d\x66\xce\xa9\x3b\x9c\xd6\x84\x1c\xc0\x10\x99\x4d\xdd\xa0\x41\xa2\xda\x30\xad\x5a\xa4\x73\x8d\xd8\x54\xd3\x4a\xbb\x26\x65\xb6\xa6\xba\x25\xd9\x0d\xe9\x4f\xea\x2f\xf9\x69\x1f\x9e\x9f\x6d\xe0\x3d\x4a\xfe\x85\x36\x8b\x44\x5e\x62\xba\x35\xa7\x45\xae\x1a\xe3\xd5\xbc\x4e\x3d\x0b\xc0\x2a\x6c\x4f\xb8\x6d\x24\xfa\x88\xd4\xc3\x3e\x55\x4a\xe6\x17\x33\x16\xc0\x62\x01\x76\xd6\x3a\x5c\xb1\x7b\xb4\x3f\x55\x91\xa4\x99\x06\x25\xa3\xd3\x4f\xab\x28\xe6\xee\x57\x15\x23\xa3\x2f\xd2\xe5\xa8\x3d\x9e\xad\xbd\x97\x0d\x7a\x31\x55\xda\x3c\xb8\x5f\x95\x33\x9f\x7a\xb9\xee\xfc\x68\x25\x77\xe0\x85\xc8\xa2\xbe\x4f\xa8\x15\xcc\xe0\xa7\xa7\xcf\x3f\xbb\x19\x91\x0a\x87\xbb\x1d\xb8\x7f\x3f\xce\xfd\xa4\x04\x87\xfd\xbe\xd8\x3d\x3c\xaf\xa9\xba\x73\x26\xef\xef\x6f\x27\x1f\xee\xfc\xdb\xbb\x87\x87\x5b\x27\xd8\x39\x06\x0f\x7f\xa3\x1c\x95\x79\x99\x98\x3f\x3f\x16\xec\xe1\x04\x8e\xb7\xe6\xda\x8b\xbc\xd7\xd7\x57\x2f\x4b\xb3\x10\x79\x94\x7a\x31\x86\x9b\xa5\xa7\x51\x69\xf7\x30\x66\x1e\x9c\x91\x35\xe5\x04\x8e\x62\x88\xd9\xf0\xe6\xfa\xd1\x19\x39\xc6\xf2\xcf\xd2\x09\x9c\x3b\x67\xe4\xfc\xc0\xb5\xa4\x66\x21\xbe\x61\x6c\xe4\x7c\x52\x4e\x70\x63\x6e\x05\x0e\xec\x5b\x1d\x1c\x4e\xe0\xef\x47\xce\xcd\xef\xe1\x17\x46\xa9\x80\x5f\x9c\x58\x70\xfc\xc5\xa9\x38\x77\xdf\xee\xdc\x5d\xc5\xb9\xbb\x2e\xe7\x6e\x7f\x0f\xe7\xcc\xd4\xb0\x9a\xb2\x0f\xed\x5e\x4d\x2a\x5e\x4d\xda\xbd\xda\x8f\x4e\x85\x7d\x12\x52\x63\x7c\x30\x61\xb1\x6c\xec\x18\xd7\x0b\x34\x4c\xfc\xbb\xbb\xbb\x87\xff\x3c\x1a\xfc\x4a\x68\xfe\x7f\x17\x1a\x2e\x74\xee\xdf\x8c\x86\x8b\xbc\xba\x08\x0d\xfb\xc7\xab\x23\xe1\x19\xe2\x20\x59\x06\x33\xe0\xf8\x0a\xff\xd8\xe0\x70\x57\x61\x5b\xc3\x65\x6b\xaa\x51\xaa\x00\x16\x83\xc5\x62\x30\x82\xc1\xf3\xf3\xe0\x79\x54\x91\x42\x16\xc0\xe0\x1d\xc9\xb2\x41\x75\x3c\x26\x9a\x04\xb0\x6b\xb0\x7d\x71\x5e\x0c\x60\x51\x33\x64\xae\x13\x8f\x05\xa5\xe7\xa6\xdc\x89\xd2\x03\xb0\x31\xf6\x48\x7c\xc4\x6d\x97\xd0\xf1\x08\xd5\xee\x4d\xfd\x84\xd5\x94\xda\x57\x5f\x23\xb1\xce\x36\xda\x08\x36\xe3\x2e\x76\xef\x00\x92\x0d\x8f\xcc\xcf\x93\xe1\x75\x53\xc8\x5c\x34\x19\xfe\x9f\x4e\xa9\x72\x4f\x21\x74\x48\xe6\x66\xf5\x46\x72\x73\x32\x6d\x15\xd9\x5f\xb5\x0e\x9f\xf6\x8c\xfc\x54\xdb\x29\xc4\xa8\x32\x22\x35\x7f\xdc\x23\xd0\x1e\xdb\xed\x27\x42\x0e\x8d\xfa\xca\x9c\x5b\x8c\x8d\x9e\x08\x8c\x1c\x85\x99\x15\x5b\xac\x9e\x3b\x2c\x1e\x24\x55\xc6\xa8\xf1\x88\xba\x87\xf6\x73\xed\xd0\x70\xe0\x0d\xae\xdb\xe3\x38\xa8\x26\x1c\x66\xb9\xfe\xc2\xfe\x3d\x1c\xd3\xc7\x30\xe9\xc8\x80\x0d\xc5\x68\x25\xdc\x95\x98\x31\x12\xe1\x70\x50\xe9\x66\xd3\x13\xf6\xde\xb3\x36\x4d\x86\x36\x7f\xdd\x07\x76\x9e\x1f\xd7\x7b\x92\x04\x16\x5d\x5c\x53\xbe\xc1\xee\x95\x3a\xaa\x0d\x47\xf8\xb9\xd9\x46\xa5\x43\xda\xe1\x6c\x87\x7a\xa1\xaa\x84\xd4\x79\x20\xe6\xe9\xba\xa3\x4e\x05\x1e\x73\x9d\xe6\x32\xfb\x66\x97\xe9\xfc\xdc\x75\xae\x2d\x6c\xf1\x35\x91\xa6\xf8\xa6\x9b\xbb\x31\x8b\xdc\xfc\x56\xf3\xdb\x05\x2a\xc8\xb4\xd1\x14\x8d\x79\x01\x42\xcb\xe2\xfd\x48\xa5\xc9\xb0\xf0\x75\x96\x7b\x0b\xbf\xfd\x06\xd4\x7d\xb2\x63\xd3\x3c\x8e\x33\xd5\x3e\xc4\x5a\x68\xfd\x4b\x45\xa7\xc9\x90\xba\x3f\xf0\x18\xe6\x26\x29\x67\x16\xcc\xd3\x66\xe5\xfb\x16\xbb\x7c\xb4\x80\xc2\x10\x79\x3c\xce\x23\x06\x0f\x26\x7e\x4b\x61\xf6\x7d\xa4\xba\x46\x9d\x8a\x58\x75\xec\x25\x07\x82\x3f\xc2\x67\x85\xdb\x8e\x40\x6b\x24\x56\x2d\xa8\xd9\x67\x16\x2b\xdc\x76\x30\x41\x4d\xd7\x7e\xcf\x80\x15\x6e\x7b\xa4\x8f\xed\xde\x43\xb1\x4d\x34\xb6\x91\xec\x19\x68\x46\xac\x8f\xa1\x2d\x50\xfb\xd4\x0f\x8c\x1a\xb1\xff\x61\x4a\xad\x70\xe9\x6c\x76\x9e\x4c\x6b\xea\x96\x17\x13\xde\xb3\xe4\xa5\xc8\x6f\x61\xb8\xd3\x67\x97\x12\x4e\xed\x07\x98\x6e\xaa\xb3\xf1\x1c\xea\xda\xff\xa9\xa7\xdd\x67\xd3\xfb\xd6\xc6\x99\x9d\xa5\x7d\x01\x53\xcd\x08\x73\x0b\x23\x98\x74\x6d\x18\xc8\x14\x7e\xab\xe9\x3c\xd5\xdd\x8e\x5f\x94\x52\xb3\x05\x95\x92\x49\x46\x10\x76\x1e\xa7\x60\x08\xc4\xfd\xa4\x60\x0a\xa1\xb9\x75\xe6\xa2\xe0\xab\xc9\xa5\x6e\x55\xad\xcf\x2f\xb3\x3e\xfe\x26\xf3\x85\xd2\xb7\x52\x66\x24\x91\xd8\x63\x68\xdf\xa6\x6a\x79\x07\xb7\x86\x9e\x3e\x87\x5f\x31\xd2\xae\x79\x1b\xd6\x38\xb1\xa5\x48\x46\x2c\x3f\x0d\x74\x4d\x4a\x7c\x41\xa9\xb0\x6d\x9e\x26\x86\xa1\xd5\xc2\x7f\xee\x63\xe9\xca\x57\x61\x2b\x7c\x2e\x03\x65\xd5\x8f\x79\x54\x46\xb5\xaa\x76\x52\xd9\x9b\xf3\x4b\xe9\x63\xcc\x3f\x03\x00\x00\xff\xff\x60\x7d\x55\x48\x2d\x1f\x00\x00")

func templatesOverviewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesOverviewHtml,
		"templates/overview.html",
	)
}

func templatesOverviewHtml() (*asset, error) {
	bytes, err := templatesOverviewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/overview.html", size: 7981, mode: os.FileMode(511), modTime: time.Unix(1563453345, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/PhpBench.php":     assetsPhpbenchPhp,
	"templates/overview.html": templatesOverviewHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"PhpBench.php": &bintree{assetsPhpbenchPhp, map[string]*bintree{}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"overview.html": &bintree{templatesOverviewHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
