// Package main Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// assets/PhpBench.php
// templates/overview.html
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsPhpbenchPhp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xc1\x72\xe3\xb8\xd1\xbe\xeb\x29\x7a\xf5\xab\x86\xd4\x8e\x64\x49\xb3\xff\x56\x2a\xa2\x35\x2e\xaf\x56\x1e\xbb\xe2\xc8\x8e\x24\xef\x54\x45\xf6\xaa\x20\x12\x96\x10\x53\x20\x17\x00\xc7\xf6\xda\x7a\x8f\xdc\x72\xca\xfb\xe5\x11\x52\x00\x41\x0a\x20\x29\x79\x52\xc9\x1e\x52\x15\x5f\x48\x02\x8d\x06\xfa\xeb\xaf\x81\x46\xcb\xc7\x27\xf1\x3a\xae\xd5\xfc\x10\x71\x0e\xd7\xeb\xf8\x07\x4c\xfd\x35\xbc\xd4\x6a\x00\x00\x5c\x20\x41\x7c\x68\x04\xd8\x67\x18\x71\x3c\x23\x1b\x0c\x03\xa0\x49\x18\x7a\x96\x80\x20\x1b\xcc\x38\x0c\x60\x7e\xe7\xd5\xca\x3d\xc3\x28\xa1\x02\x06\xd0\xb5\x47\xf9\x11\xe5\xc2\xe8\x2b\x74\x6e\x62\x12\xe2\x21\xf2\xd7\x58\x2b\x36\xbb\x79\xe4\x3f\x60\x51\xb9\x18\x4c\x05\x23\xb8\x72\x35\x1c\xab\xb9\xee\x51\xc8\xb1\xee\x8a\x93\x65\x48\xfc\x4c\xe2\x3e\xa1\xbe\x20\x11\x95\xdf\x4c\x48\x7b\x99\x9b\xda\xd0\x84\x17\x25\xbf\x53\xd7\xef\x6b\xbb\xe7\x8e\x70\xe0\x48\xdb\x7a\x07\x03\xd8\x10\x9f\x45\xf2\xcb\x15\x2c\xc1\xcd\x74\x79\xdb\x83\xf3\x49\xe9\x61\x14\x60\x3d\x5b\x0b\x1a\xf7\x24\xc4\x14\x6d\x70\x0b\x1a\x21\xa1\x78\x2c\xdb\xfc\x28\xc0\xe6\x42\x1a\x98\x06\x55\xf3\xed\x04\x94\x1d\x30\x38\xbc\x64\x6f\x27\x2f\x1b\xa6\x71\x0a\x93\xd2\xde\xd6\x3a\x76\x32\x09\xe5\x58\xb8\x07\x15\x5a\x4b\xd8\x48\x57\xb0\x28\xa1\x81\x6b\xa8\xff\x16\x7a\xdd\x6e\x57\x3f\x4c\x79\x72\x0f\xee\x37\xb9\x76\x93\x7a\xa6\xe5\x96\x1b\x0a\xfc\xbc\x0f\xa3\x88\xb9\xda\xf4\x8e\x9a\xa0\xdb\xd4\x33\x75\x77\x76\x6c\x8b\x28\xb5\x07\xd5\x2a\x3d\x1b\xef\xfd\x62\xb9\x5c\xa7\x03\xd8\x5f\x47\xca\xf6\x23\x70\x36\xdc\x31\x3a\xf3\xc1\x9a\xa8\x73\x49\x99\xb9\x65\x99\x93\x39\xdf\x81\xc1\x47\x83\x0a\xb6\xd0\x03\x7e\x4e\xfb\x15\xe8\x72\x22\xa7\x20\x91\x12\x27\x15\x4a\xdf\xab\xa4\x24\xab\x52\x19\xf9\x56\x25\xb1\xe1\x69\x7f\x6a\x4e\xb1\x57\xa1\xa7\x04\x2c\xe4\x4d\x0f\x37\xab\xc6\x61\x1a\xa8\x51\x9a\x1b\x12\xdb\x43\x63\xb2\x60\x3e\x1c\x48\x1c\xd3\xc0\x6d\x66\x3b\x58\x46\xa8\x1c\x73\xb9\x03\x14\x79\xc4\xb0\x48\x18\x35\x89\x51\xf6\x95\xde\x39\x64\x7c\x59\xe1\x85\xc5\x98\xe5\x94\x2b\xc4\x61\x05\xb9\x1b\x01\x12\xa8\xec\x6e\xd9\xaa\xa0\xf8\x0b\x8f\xe8\x02\x53\xe9\x07\xd7\x96\x51\x72\x52\xb7\x92\x0b\x90\xc0\xae\x73\xde\x27\x7d\xee\x34\x5b\x65\xc1\x84\x85\x4a\x8e\x70\x19\xab\x8d\xc5\x74\x34\xf9\x69\x34\x99\x3b\x93\xd1\x9f\x6e\x46\xd3\xd9\xe2\x66\x72\xe1\xdc\x35\xe1\x04\xf6\x74\x41\xbf\xe4\x2e\xa5\x97\x6a\x32\xa5\x76\x97\x7d\xaa\xfd\xaa\x78\xad\x24\x8b\x64\xb7\xc5\xef\x9a\x65\xf7\x2a\x98\x12\x16\xc2\x00\x9c\xb5\x10\x71\xbf\xd3\xe9\x7d\xf8\xdd\x51\xf7\xa8\x7b\xd4\xeb\x7f\xd7\xed\xf6\x3a\x1c\x8b\x8e\x0c\x3b\x81\x1d\xcf\x0c\xb9\x4f\x58\x80\x7f\x33\xb9\x04\x86\x79\x94\x30\x1f\xef\xf4\xf9\xa9\x42\xf9\x58\x10\x4a\x84\xdb\xb4\x46\x4e\xb1\x00\x1e\x6d\x30\x44\xb1\x24\x11\x87\x36\x3c\x62\x40\x0c\x43\x8c\x38\x27\x74\x05\x84\x02\x82\x84\x63\x86\x56\x92\x09\x22\x8a\x60\x8d\xd9\x6e\x06\xa5\x99\x63\x11\xc5\x62\x81\x18\x43\xcf\xae\x9a\xb3\x55\xf0\xf4\xf0\x66\x72\x79\x75\x3d\x5b\x4c\x46\xb3\x9b\xc9\x78\x36\x39\x1d\x4f\xcf\x46\x13\x09\x54\xaf\x55\x29\x28\xcd\x91\x80\x4b\x5d\x95\x02\xd7\x57\xd3\xd9\x81\xf1\xb2\xfb\xec\x62\x74\xf9\xe3\x54\xa9\x91\x44\x33\x20\x2f\xa2\x40\x03\x10\x6b\x0c\x0c\xff\x92\x60\x2e\xe0\x1d\x70\xf4\x45\x7e\xf2\x38\xa2\x1c\x83\x88\xa0\x21\x3f\x76\xb8\xca\xaf\x0c\x57\xfc\x84\xfd\xd4\x6a\x5b\xed\x30\x8c\xf8\x4e\xa7\x88\xc0\x0f\x31\x62\x90\xc4\x29\xe4\x99\xb3\xb8\x8d\xa5\x2f\x47\x59\xea\xb6\xb5\xda\xb6\x56\xcb\x03\x3d\x5e\xc7\x4b\x99\xac\x2c\x30\x63\x72\xd3\xc1\xc6\xf9\xa8\xe4\xd5\x0e\xec\x1c\x73\xf1\x1c\xe2\x8f\xcb\x28\x78\x6e\xad\xc5\x26\x7c\x89\x51\x10\x10\xba\xea\x77\xbd\x0d\x62\x2b\x42\xfb\x5d\x6f\x0b\x31\xc3\xc0\x63\x44\xe1\x05\x02\xc2\xe3\x10\x3d\xf7\x61\x19\x46\xfe\x83\x07\xaa\xf3\x28\x9b\xad\xad\xb6\x48\x29\xda\x5f\xe2\xfb\x88\x61\x78\x01\x5f\xa6\x30\x98\xb5\x09\xf5\x19\xde\x60\x2a\xfa\x20\x37\x5b\x0f\xfc\x88\x0a\xf5\xa9\x25\x5c\xd9\xdc\xf4\x76\x53\x10\x2a\x5b\xda\x7a\xa6\x0d\xa1\xed\x47\x12\x88\x75\x1f\xbe\xeb\xc6\x4f\x1e\xa4\x0b\x6c\x33\xb2\x5a\x8b\x3e\x7c\x2f\x9b\xb6\xc7\x9d\xd4\x20\x4d\x7d\x6d\x64\x40\xbe\x80\x6a\x1f\xd4\x33\xfb\x7a\x52\xbe\x5e\x90\x53\x76\x16\xe4\xba\xf1\x13\x28\x61\x80\x0c\x11\xe8\x82\x6a\xee\x7a\xb0\x44\xfe\xc3\x4a\xed\xd0\x6d\x3f\x0a\x23\xd6\x5f\x86\x48\x2e\x36\xfd\x60\x38\xf0\xea\x1f\x33\x70\x80\x63\xbc\xe1\xd2\xc5\x6b\xc9\x9b\x98\x45\xcb\x50\x36\x24\x34\xc0\x8c\x0b\x44\xe5\x84\xe0\x63\x26\x10\xa1\xc0\x9f\xa9\x40\x4f\x2d\x48\x43\x19\x10\x95\xbb\x55\x82\x21\xa2\x10\x25\x0c\x56\x44\xac\x93\x65\x0b\x78\xc4\xd8\x33\xfc\xe3\x6f\x7f\xfd\xfb\x71\x27\x66\xca\xf0\x3d\x16\x99\xab\xff\x3e\x5d\x7d\x66\xa4\x32\xa7\xc2\x98\xff\xc3\x18\x17\x41\x1a\x49\x3e\xf5\x41\xa5\x33\xb8\xfd\x71\x85\xc5\x1f\x31\xe7\x68\x85\x5d\x79\x22\xd5\x6f\x69\xdd\x94\x3e\x23\x21\xb6\x84\x65\x43\xa5\xe4\x25\xa1\xb6\xa4\x6c\xa8\x92\x2c\x7c\x6a\xe9\x19\x43\x3e\x3e\xe5\x53\xc1\x08\x5d\x65\xfb\x97\x06\xe1\x0d\x60\x2a\x5c\xfd\x2f\x7b\xfa\x71\x4d\x84\x84\x6a\xb6\xc6\xb0\xc2\x14\x33\x24\x70\x00\x32\x1a\x7e\x2b\xb7\xe4\x71\xc5\x30\xc7\x59\x4c\xd5\x41\x5d\x55\x06\x75\x2b\x20\x73\x0f\xaa\x2c\x47\xe6\x9b\xf8\x29\x0e\xe5\x21\x2a\xb1\x6c\x81\x60\x64\xe3\xa6\xbb\x83\x06\x4e\x86\x2e\xf2\xd7\xe0\xea\x11\x88\xa7\x63\x9b\xf0\x92\xed\x1b\x31\xa2\x1f\x95\xb7\x64\xbb\x3c\xeb\x8e\x3b\x69\x9b\x97\x66\x8e\x59\x92\x67\x28\xaf\x74\x8a\xd9\x14\x90\x2f\x3b\xa4\x9e\x88\xf0\xaa\xb7\x34\x42\xfd\x30\x91\x97\x81\x18\x89\x75\xbe\xa1\xc9\x44\x26\x3d\xd0\x6f\xb3\x9b\x5a\xbf\x6f\x5d\x94\xe6\x6a\xc0\x5d\xd3\xcc\x70\xd2\xec\x06\xde\x18\x62\xdd\x51\x1a\xf7\x14\x06\xb0\x44\x5c\x65\x9d\x7a\x15\x5e\xbe\x06\xd5\x3d\x00\x07\x25\x22\x0a\x23\x14\xc8\xcd\xd1\xa9\x98\x52\x8d\xb3\x14\xab\xdc\x5e\x66\xb3\x0b\xfc\x44\xb8\xe0\x5a\xb5\x39\x56\xac\x59\xf4\x08\xb7\xa3\x27\x1f\xab\xb3\xd8\x75\x66\xec\x59\x6e\x1b\x22\x02\x0d\x0b\x48\x0d\x20\xd6\x48\x40\x10\x61\x4e\x05\xa4\xda\x74\x70\x19\xab\xcd\xa6\xa5\x44\x9e\xcd\xae\xa3\x37\xde\xf4\xc8\xe0\x4e\x0b\x7a\x99\x59\x45\x09\x95\xc2\x26\x71\x59\x52\x35\x2c\x18\x8e\x23\x26\x64\x20\x8e\x16\xa7\x97\x97\x59\x8a\x97\x26\xd0\x03\xe9\x48\x85\xf5\x27\x2c\xd2\x4b\x9d\x5e\x93\xc5\x1b\xd5\xa8\x78\xb5\x64\x19\x4f\x3a\x1d\x0b\x61\x99\xaa\x58\xe8\x76\x3a\x60\x07\x99\x31\x30\xef\xe0\x42\x2d\x30\x44\x3e\x76\x1d\x75\xc1\x77\x5a\xe0\x1c\x83\x7e\x33\xa9\x6a\xeb\xeb\xec\x51\xe8\xfc\x5a\x68\x54\xcc\xd5\x0d\x19\x67\x28\x7e\xbc\x96\x06\x0d\x80\x27\x4b\x2e\x58\x6a\x74\x0b\xba\x2d\x68\xff\xbf\xca\xe5\xf3\x43\x54\x99\xa4\xe3\x50\x92\x21\x4e\xc4\x42\x9f\x95\xdc\xcd\x14\xed\x16\xaa\x04\xdf\xe0\xaf\xbc\xae\xea\x81\x7a\x40\x46\x42\xbb\xb5\xd3\x01\xc1\x9e\x77\x68\xca\x0c\x26\x09\x65\x6a\x8f\xbf\xa0\xd0\x2d\x60\xb3\x05\x1f\x09\xb9\x4b\x5c\x23\xc6\xb1\x3a\x18\xe0\x15\x66\x92\xa2\x68\x19\x62\x68\xe0\x82\x63\x4a\x49\x89\xa1\xcb\x5a\x55\x3a\x6d\x29\xfc\x2b\x58\x93\x45\x7f\xc6\x2d\x85\xd8\x0a\x9b\x88\x99\xec\x92\xf6\x0e\x53\xc9\x7a\x3d\xdb\x14\x11\x57\x1a\xe5\x81\x63\xb6\xa3\x20\xd0\xa2\xba\x22\x92\x6f\xa1\xea\x52\xd3\x33\x86\xcf\xa2\x07\x4c\x3f\x23\x3e\xc6\x8f\x5a\x8b\x39\xe4\x9e\x30\x2e\xae\xd7\xf1\x0c\xad\xec\x4b\x52\xe3\x3e\x4c\xf8\xfa\xd2\x9e\x3f\x37\xd8\x6d\xca\x94\x1a\xdc\x77\xd9\xa2\x5b\xf0\xce\x5a\xac\x55\xeb\xc8\x0c\x3b\x1a\xd8\x16\x19\xd7\xf3\x3d\x86\x6e\xb3\xd5\x08\x69\x85\x3c\x1e\xd4\x8b\x42\x11\x85\xda\xeb\x2d\x98\x5d\xfd\x61\x34\x5e\x5c\x9f\x4e\xa6\x23\xed\xb6\x86\xaf\xab\x53\xea\xe9\xea\xf1\x39\xd4\xfc\x81\xc4\x37\x54\x90\x70\xea\x47\xb1\x6d\xd9\xbb\x06\xc9\x8d\x33\x57\x25\x2d\x4c\xb5\xc8\x37\xa5\x56\x19\xad\x30\xb7\xcc\x5d\x32\xe4\x3f\xf0\x5d\xd5\x4c\xfe\x3d\xae\xe5\xce\xe7\x36\x08\x1c\xeb\xb5\x15\xef\xb2\xa9\x72\x19\x0d\xe9\x2c\xf3\x06\x31\x2f\x56\xf9\x16\xae\xc5\x06\x2a\xd9\x28\x2a\x31\x68\xf0\xfe\xbd\x67\x75\x6d\x0f\xe9\x72\x5c\xa7\x52\x55\x6a\x4a\x59\xd5\x01\x4d\xcd\x43\x9a\xda\xed\x37\x35\x65\xe8\x0d\x06\xd0\x85\x77\xef\x2c\xdd\x2f\x0e\xbc\xbe\x82\x01\x81\x57\x6f\x56\xce\x46\x8a\x13\xc9\xbf\x25\xc3\xe8\xe1\x20\x28\x36\x0d\x8f\x06\x40\x78\x76\x27\x54\x73\xaa\x7b\xb7\x7a\x9b\xf7\xe4\x4d\x3b\x7d\x2f\x78\xa9\x41\x4c\xbc\xb6\x36\x8f\x77\xc4\xc3\x1b\xf2\x3f\xde\x39\x6e\xc1\xa3\xce\xcb\x7f\x90\x88\x05\xd5\xdb\xdf\x8e\x99\xff\x75\x44\xbc\x8f\x98\x62\x85\x24\x0b\x18\xec\xf0\xd4\x28\xab\x0a\xf7\x06\x41\x14\x34\x04\x3e\x42\xaf\xc4\xac\x37\x8f\x9f\x5c\x32\x66\xf8\xcb\xac\x34\x0d\xb4\xa1\x77\xe7\x95\x1c\xb1\xc3\x22\x1f\x56\x0d\x7e\xde\x3d\x46\xaa\xbc\x9c\x9e\x1d\x3a\x33\xce\xfa\xe6\x5d\xb3\x98\x62\x59\x55\x18\x3f\x00\x67\xb6\xf8\x7c\x7e\x31\x1b\x4d\xaf\x4f\x87\xa3\x4a\x36\x41\x5e\xb6\x64\x71\xc4\xcd\x69\x7a\x77\x2d\x1d\x3a\xdf\x0c\x34\x08\xfb\x14\xe4\x8b\xff\x50\x89\xc9\x87\xbb\xf2\x7a\x2d\x7c\xa8\x89\x4f\xaa\xa3\x05\x73\xc7\x93\xc9\xe4\x8b\x73\xd7\x52\xe7\x7c\x25\x64\x5f\xe1\xbe\x34\x47\xd8\x37\x68\x5b\xd9\x53\x6e\xdd\xee\x09\xb6\xad\x4d\xac\x22\xed\x4b\x14\xa3\x65\xcf\x8a\x9d\x57\xcb\x31\x4c\x77\x9e\xbc\xba\x1e\x8d\x17\xb3\xd3\x4f\x8e\x8c\x65\x33\x11\xaa\x02\x46\x26\x9c\xc5\x98\xd4\x19\x7a\x19\x8c\x42\x56\x55\x41\x78\xad\x52\x26\x82\x84\x16\xf1\xac\xd8\x31\x77\x2e\x4d\x7f\x58\x9a\x3b\xb3\xc5\xf0\xf2\x74\x3a\x95\x2e\x9d\x2d\xce\xae\x26\xf9\xcb\xe8\x74\x78\x9e\x7e\x7c\x3e\xbf\xb8\x1c\xa5\xaf\x17\x67\xe9\x73\x74\x39\x1d\x99\xef\x7a\xd4\xcd\x78\x38\xbb\xb8\x1a\xa7\x5f\xb3\xf3\xc9\xd5\xe7\xf4\x75\x78\x3a\x1b\x9e\x1f\x24\x4c\x21\x93\x72\x1b\xa4\x22\x98\xfe\x2d\x33\x7f\x3a\x9d\x5c\x9c\xfe\x90\x19\x32\x9d\x4d\x2e\xc6\x9f\xb4\x01\xc3\xf3\xab\x83\x8b\x53\x97\xd6\x3c\x57\x96\x5e\xae\xa0\xf4\xbe\x30\x30\x72\xec\xfd\x94\x2f\x67\xc9\x6e\x85\xfd\x50\x3a\xf9\xab\x71\xda\x8f\x15\x54\x84\xcc\xe1\x03\x23\x3f\x1d\x6c\x45\x65\xf5\x86\xa2\x3d\x4a\x8a\x9b\xfd\xc1\x4c\xa0\x22\x0b\xd8\xee\x1b\xef\x78\xa5\x3d\x54\x09\x68\xe4\xad\x53\x28\xfb\x33\x6f\x93\xbb\x9f\xa8\x8b\x89\x01\x14\xae\x1d\xf5\x5b\x63\x9c\xf1\x0b\x71\x1d\x8e\xc0\xad\x56\xa9\xca\x7b\x4d\x2f\xaf\xe8\xed\x53\x5d\x00\x4d\xd7\x00\xcb\x43\x30\xf7\x8d\x0b\x8e\x79\xd3\xaf\x3b\xf5\x16\xd4\xeb\x2d\x5b\x55\x05\x3f\x0a\x3a\x62\x86\x57\xbb\x72\x41\xe7\x96\x9d\xdc\xd2\x8e\x0c\x0d\x70\x5a\x96\xec\xdb\xaa\xd2\x4a\xd8\x1b\x43\xf6\xe1\x99\xff\x02\x2e\xd1\xac\x06\x53\xe2\xd2\x82\xc5\xe2\xec\xe2\x72\xb4\x58\xb4\xa0\x9e\x55\xe7\xd4\x6f\x51\xf5\x16\x38\xaa\xc5\x5c\xd4\x11\xd4\x1d\x0d\x7f\x45\xaa\x59\x7d\x5d\xb4\x64\x2a\xef\xc8\xe6\xdf\xbe\x6d\x69\xf7\x56\x03\xb3\xb4\x56\x15\xea\xb5\x83\x74\xd8\x95\x2e\x86\x59\xa9\x3c\x00\xed\x31\x50\xff\x44\x81\xa8\xe0\xf6\x85\xf5\xfd\x7b\xbb\x60\x92\xfd\xa7\x85\xd6\x15\xe0\x7b\x39\xb5\x73\x7d\x7e\xfd\xc3\x68\x3c\x3c\xcf\x30\x55\x05\x34\x7d\x3b\x30\x0b\x69\x65\xf9\x1f\x2f\x26\xb6\x78\x40\x98\x51\x2d\xac\x28\x47\x14\x88\xe6\xce\x7f\x46\xed\x5f\x4f\xdb\x7f\xee\xb6\x7f\xbf\xb8\x6b\x66\x2b\x28\x34\x2b\x26\x36\x7a\xfb\xd7\x09\x47\xe0\x34\x3e\x48\xaa\xea\x99\xb2\xab\xfb\xd7\x4f\xac\x4c\x79\x6b\xde\x82\xbd\x55\xd3\xbe\x35\xaf\x7b\xd2\xd7\xe5\x9f\xd7\x01\x9c\xbc\xde\x52\xf8\xb6\x79\xd2\x74\x4f\xbe\xb1\xa7\x76\x75\x99\xf3\x55\x3f\x17\x11\xf5\xf1\x2b\xc3\xbf\x24\x84\xe5\x4f\xd5\xd8\xb4\x17\x3d\xff\xd9\xbb\xa5\x77\xef\x9b\x9e\x5e\x7c\xe3\x83\x5b\xae\x28\x7f\xd7\x6c\x7a\x15\xcb\xce\x8a\x92\xc5\xa2\xe2\x57\x15\x14\x6d\xe4\x77\xaa\x0a\xf5\xc4\xb4\x6c\x68\x95\xc1\xf4\x48\xaf\xb6\xad\xfd\x33\x00\x00\xff\xff\x95\xb2\x7c\xdb\x8a\x24\x00\x00")

func assetsPhpbenchPhpBytes() ([]byte, error) {
	return bindataRead(
		_assetsPhpbenchPhp,
		"assets/PhpBench.php",
	)
}

func assetsPhpbenchPhp() (*asset, error) {
	bytes, err := assetsPhpbenchPhpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/PhpBench.php", size: 9354, mode: os.FileMode(511), modTime: time.Unix(1563661958, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOverviewHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x6d\x73\xe3\xb6\x11\xfe\xee\x5f\xb1\x61\xa6\x95\x9c\x4a\xa4\x68\xcb\xae\x8f\x96\xd4\xc9\xb4\xc9\x4c\x93\x5e\x6e\xa6\x77\xed\x17\x45\x1f\x20\x72\x29\xe1\x04\x01\x1c\x00\xb2\xad\x28\xfa\xef\x1d\x80\x94\xf8\x4e\xe9\x3a\x99\xbe\x70\xc6\x26\x09\xec\x2e\xf6\xe5\xc1\xb3\x10\x27\x8c\xf2\x0d\xac\x25\xc6\x53\x67\xad\x75\xa2\x02\xcf\x8b\x05\xd7\xca\x5d\x09\xb1\x62\x48\x12\xaa\xdc\x50\x6c\xbd\x50\xa9\x3f\xc5\x64\x4b\xd9\x7e\xfa\x21\x41\xfe\x87\x8f\x84\xab\xdf\x47\x54\x25\x8c\xec\xa7\xea\x95\x24\x0e\x48\x64\x53\x47\xe9\x3d\x43\xb5\x46\xd4\xce\xec\xe6\x66\x62\x5f\x67\x37\x00\x00\x4b\x11\xed\xe1\x60\x1f\xcd\x65\x56\x19\xa6\x16\x03\xe8\x19\x9b\x60\x6c\xf6\x9e\xad\xc4\xf1\xc6\xde\x5c\x45\x23\x5c\x12\x99\xab\x25\x42\x51\x4d\x05\x0f\x20\xa6\x6f\x18\x3d\x9f\x27\x7e\x19\x52\x1e\xe1\x5b\x70\x9f\x0f\x69\x91\x04\xa3\xfc\x95\x61\xac\x8b\xef\x4b\xa1\xb5\xd8\x16\x47\x5e\x69\xa4\xd7\xc1\xfd\x68\x94\xbc\x15\xc4\x48\xb8\x59\x49\xb1\xe3\xd1\x30\x14\x4c\xc8\xe0\x6b\x44\x2c\x5a\x79\x1b\xaa\x35\x89\xc4\x6b\x00\xa3\xe4\xcd\xfe\xf9\x0f\xc9\x1b\xc8\xd5\x92\xf4\x7d\xdf\x1f\x80\x7f\xf7\x34\x00\xff\xe1\x6e\x00\x23\xf7\xe1\x36\x57\x15\x2f\x28\x63\x26\x5e\x87\xfb\x00\xc8\x4e\x8b\xc6\xd0\xdd\x98\x32\x54\x87\x5a\x9c\x77\x95\xc0\x0a\x5e\x57\x2c\x80\xbb\x46\x12\x61\x21\x89\x6b\xa4\xab\xb5\x0e\xe0\x8f\x17\x02\xbd\x7b\xbc\x1f\x8d\xc7\xb9\x44\x42\xa2\x88\xf2\x55\x60\x62\xbc\x2b\xe9\x66\x0a\x71\x1c\x3f\x97\x2b\xac\xe8\x2f\x18\xf8\x8f\x45\x59\x3b\xfe\x9a\xb9\xb0\x14\xac\x50\xc4\x0c\x50\x41\xcc\xb0\xa0\x40\x18\x5d\xf1\x21\xd5\xb8\x55\x01\x84\xc8\x35\xca\x53\xa0\x4d\x71\x82\x4a\x08\x3f\xd4\x6c\x02\xe5\x8c\x72\x1c\x2e\x99\x08\x37\x2d\x89\x32\x6b\x1c\x6a\xe1\xda\x72\xe6\xff\xca\x91\x2f\x85\x8c\x50\x0e\x33\x30\xf9\xc9\x1b\x28\xc1\x68\x04\x5f\x87\x61\x58\xc8\xcf\x4e\x2a\x21\x03\x48\x04\x2d\xba\xdf\x50\xe9\xaa\x13\xaf\x42\x46\xc3\xa5\x44\xb2\x09\xc0\xde\x86\x84\xb1\x0e\xf7\x5d\x12\x6a\xfa\x82\x87\x8e\xb2\xc6\xf6\xba\x22\x84\x27\x7b\xe5\x82\xde\x37\xc5\x42\xc3\x37\x5e\x87\x1b\x74\xc5\x85\x2c\xb8\xa1\xf1\x4d\x0f\x23\x0c\x85\x24\xe9\xfe\xb5\xc5\xd0\x6b\x29\x76\xab\x75\x0d\x48\x84\x90\x8e\x18\xc1\xd5\x74\x9b\xd9\xae\x62\x20\x9d\xdf\x49\x76\xa8\xda\x7c\xf7\xee\x5d\x23\x38\xef\xab\xfb\x26\x14\x5c\x23\xd7\x4d\xa4\x43\x96\x4a\xb0\x9d\xc6\x3a\xef\xf8\xdd\xbc\xf3\x58\x26\x15\x69\xd1\x3f\x2a\xaf\xab\x97\x05\xa7\xd3\xa2\x04\xc0\x05\xc7\x2a\x43\xf9\xa3\xd1\xef\xf2\xb1\x2d\x91\x2b\xca\xcf\xe5\xab\xf3\x80\x5e\x32\xd0\x66\x6f\x80\x5e\x5f\x22\x81\xe2\x16\xf7\x2f\xd0\xc3\xfd\x78\xec\x3f\x90\x1a\x8e\xd2\xd8\x0a\x30\x1a\x93\xc7\xfb\xa7\x71\x3b\x59\x94\xfc\xb4\x6d\x42\x47\x0d\xbb\xf0\xc4\xac\x97\x17\x8c\xa2\xa8\xb6\xda\x19\xc8\x4d\xab\xb9\x61\x05\xa8\x96\x72\xaa\x64\x53\xd3\x93\x01\xd7\xeb\x61\xb8\xa6\x2c\xea\x8b\x28\xba\xed\xd8\x74\x90\x77\x8d\xb3\x21\xa1\x09\x1b\x2e\xc5\xdb\xe5\xb5\xa1\x83\x4e\xad\x8e\x96\x84\xab\x58\xc8\x6d\x00\xbb\x24\x41\x19\x12\x85\x57\x31\xee\xc5\x7e\xfa\x50\x05\xf2\xdd\x43\x1d\xc8\x77\x95\xb2\x58\x24\x42\x79\xb4\xc8\xa6\x17\xda\xe7\xe8\xaa\xf6\xd9\x90\xe3\x26\x5a\x93\x24\xa2\x3b\x15\x3c\xe5\xbb\x62\xe2\x65\xc7\x92\x9b\x49\x44\x5f\x80\x46\x53\x87\x24\x89\x93\x1e\x53\xec\x50\xc8\x88\x52\x53\x27\x23\x95\x6c\xa6\x3a\x9b\x76\x1b\x67\x36\x31\xfd\x66\xf6\x09\x95\x56\x13\xcf\x3e\x4f\xbc\x88\xbe\x34\x2b\x19\x7a\x72\xe0\x65\x18\x0b\x39\x75\x36\xb8\x07\xca\x41\xa1\xfe\x11\xf7\xca\x81\x20\x13\x3a\x40\x4a\xe2\x81\xe9\x1b\x12\xb9\xfe\x68\x25\x60\x3a\x05\xa3\x72\x34\x06\x04\x0f\x42\x46\xc3\xcd\xd4\x51\x98\xcd\xf7\x37\xb8\xbf\x2d\x38\x5b\x5d\xdb\x90\xa6\x33\x9b\xcf\x41\xa2\xda\x31\xa3\xa4\xe6\x1b\xdc\x2f\xdc\x4f\x74\x8b\xb0\x58\x54\xdc\xae\xaa\xef\x24\x33\x0b\xd3\x78\xea\x54\x0d\xfc\x43\x32\xf8\x6a\x0a\xbd\x5e\xa3\x79\x33\x5b\xb3\x5e\x78\xcd\x1e\xdb\xd2\x0f\xb6\x2f\x5e\x55\x84\xef\x8d\xe4\xf5\x45\xc8\x73\x68\x96\xe0\x64\x8b\xea\xaf\xb6\x6d\x45\x30\x85\xf9\xe2\xb9\xa9\x22\x55\x49\x97\x21\x5f\xe9\xb5\xa9\xcd\x08\x8e\xce\xec\x5b\xc6\x52\x87\xaf\x05\x81\x11\x36\x28\x38\x1b\x2e\xae\x9a\x76\xd1\x86\x55\xed\xe6\xfc\x10\xf7\xcd\xc4\x2d\xcc\x60\xe8\x57\x61\x91\xaa\x9a\x8c\xa4\x42\xb6\x34\x76\xb1\x52\x2d\xda\x92\x9f\x35\xc1\x62\xda\x35\x59\x32\x3c\x83\x69\xc9\x1c\x08\x91\x31\x95\x90\x90\xf2\xd5\xd4\x19\x55\xa1\x67\x7b\x4e\x79\x2c\x1d\x97\xf5\xc1\x4c\x61\xf6\x67\x11\xe1\xc4\xd3\xeb\x76\x89\xad\xea\x9e\x37\x60\x56\x10\x12\xc6\x30\xea\x96\xfc\xf6\x05\x25\x59\x21\xb4\x59\x9c\x78\x55\x4f\x8d\x5c\x2d\xa6\x89\xed\x06\xd5\x31\xdc\x26\x8c\x68\xcc\x36\x4c\xbe\x8f\x9d\xc6\x84\x9c\xc0\x10\x9a\x53\x91\x41\x43\xba\x87\x54\x83\x74\xaa\x11\x99\x6a\x5a\x69\xd7\xa4\xcc\xd6\x54\x37\x24\xbb\x26\xfd\x5e\xfd\x25\x3d\x10\xc3\x62\x61\x03\xbf\x46\xe9\x3b\xae\x25\x45\x75\xc2\xfa\xd5\x8b\x65\x19\xbe\x66\xcd\xc6\x64\x67\x49\xac\x8d\x97\x13\x3e\xf1\x2c\x32\xcb\x78\xce\x01\x5d\xab\xc0\x19\xc2\xa7\x06\x5c\xc8\xf2\x27\x33\x16\xc0\x7c\x0e\x76\xd6\x3a\x5c\xb2\x7b\xb6\x3f\x51\xa1\xa4\x89\x06\x25\xc3\xfc\xb7\x73\x18\x71\xf7\xb3\x8a\x90\xd1\x17\xe9\x72\xd4\x1e\x4f\xb6\xde\xcb\x0e\xbd\x88\x2a\x6d\x1e\xdc\xcf\xca\x99\x4d\xbc\x54\x77\x76\xb6\x92\x3a\xf0\x42\x64\x81\x3c\x61\x0a\x3f\x7c\xfc\xf0\x93\x9b\x10\xa9\xb0\x7f\x38\x80\xfb\xf7\xf3\xdc\x0f\x4a\x70\x38\x1e\xb3\x6e\xe8\x79\x75\xd5\x83\xe3\x3f\x3c\xde\xfb\xef\xc6\xa3\xfb\xf1\xd3\xd3\xbd\x13\x1c\x1c\x03\x94\xbf\x51\x8e\xca\xbc\xf8\xe6\xdf\xf7\x19\xad\x38\x81\xe3\x6d\xb9\xf6\x42\xef\xf5\xf5\xd5\x4b\xd6\xc9\x12\x79\xb8\xf6\x22\x5c\xee\x56\x9e\x46\xa5\xdd\xd3\x98\x79\x70\x06\xd6\x94\x13\x38\x8a\x21\x26\xfd\xbb\xdb\x67\x67\xe0\x18\xcb\x3f\x49\x27\x70\xc6\xce\xc0\xc9\x00\xe3\x04\x7c\xc7\xd8\xc0\x79\xaf\x9c\xe0\xce\xdc\x32\x1c\xd8\xb7\x2a\x38\x9c\x60\x74\x1c\x38\x77\xbf\x85\x5f\x18\xae\x05\xfc\xec\x44\x82\xe3\xcf\x4e\xc9\xb9\xc7\x66\xe7\xc6\x25\xe7\xc6\x6d\xce\xdd\xff\x16\xce\x99\xa9\x7e\x39\x65\xef\x9a\xbd\xf2\x4b\x5e\xf9\xcd\x5e\x1d\x07\x79\x61\x3f\x0a\xa9\x31\x3a\x99\xb0\x58\x36\x76\x8c\xeb\x19\x1a\xfc\xd1\x78\x3c\x7e\xfa\xef\xa3\x61\x54\x0a\x6d\xf4\xbf\x85\x86\x2b\x9d\xfb\x0f\xa3\xe1\x2a\xaf\xae\x42\xc3\xf1\xf9\xe6\x4c\x78\x86\x38\x48\x92\xc0\x14\x38\xbe\xc2\x3f\x77\xd8\x3f\x94\xd8\xd6\x70\xd9\x96\x6a\x94\x2a\x80\x79\x6f\x3e\xef\x0d\xa0\xb7\x58\xf4\x16\x83\x92\x14\xb2\x00\x7a\x5f\x93\x24\xe9\x95\xc7\x23\xa2\x49\x00\x87\x1a\xdb\x67\x47\xde\x00\xe6\x15\x43\xe6\xca\x79\x2c\x28\x3c\xd7\xe5\x72\x4a\x0f\xc0\xc6\xd8\x21\xf1\x23\xee\xdb\x84\xce\x67\xab\x66\x6f\xaa\x47\xaf\xba\xd4\xb1\xfc\x1a\x8a\x6d\xb2\xd3\x46\xb0\x1e\x77\xd6\xd6\x03\x88\x77\x3c\x34\xbf\xbb\xfa\xb7\x75\x21\x73\xd1\xb8\xff\x95\x5e\x53\xe5\xe6\x21\xb4\x48\xa6\x66\xf5\x4e\x72\x73\x64\x6d\x14\x39\xde\x34\x0e\xe7\x3d\x23\x3d\xee\xb6\x0a\x31\xaa\x8c\x48\xc5\x1f\xf7\x0c\xb4\xe7\x66\xfb\xb1\x90\x7d\xa3\xbe\x31\x07\x1a\x63\xa3\x23\x02\x23\x47\x61\x6a\xc5\xe6\x9b\x45\x8b\xc5\x93\xa4\x4a\x18\x35\x1e\x51\xf7\xb4\xfd\x5c\x3b\xd4\xef\x79\xbd\xdb\xe6\x38\x4e\xaa\x31\x87\x69\xaa\x3f\xb7\xff\x4f\x67\x9a\x21\xf8\x2d\x19\xb0\xa1\x18\xad\x98\xbb\x12\x13\x46\x42\xec\xf7\x4a\xbb\xd9\xec\x09\x7b\xef\x58\x9b\xc6\x7d\x9b\xbf\xf6\x93\x3c\x4f\xcf\xf1\x1d\x49\x02\x8b\x2e\xae\x29\xdf\x61\xfb\x4a\x2d\xd5\x86\x33\xfc\xdc\x64\xa7\xd6\x7d\xda\xe2\x6c\x8b\x7a\xa6\xaa\x84\xd4\x69\x20\xe6\xe9\xb6\xa5\x4e\x19\x1e\x53\x9d\xfa\x32\xc7\xfa\x2e\xd3\xe9\xb9\xeb\xd2\xb6\xb0\xc5\xd7\x44\x9a\xe2\x9b\xdd\xdc\x8e\x59\xe4\xe6\x47\xdc\xa8\x59\xa0\x84\x4c\x1b\x4d\xb6\x31\xaf\x40\x68\x51\xbc\x1b\xa9\x34\xee\x67\xbe\x4e\x53\x6f\xe1\xd7\x5f\x81\xba\x1f\xed\xd8\x24\x8d\xe3\x42\xb5\x4f\xb1\x66\x5a\xff\x56\xd1\x69\xdc\xa7\xee\x77\x3c\x82\x99\x49\xca\x85\x05\xd3\xb4\x59\xf9\xae\xc5\xae\x1f\xcd\xa0\xd0\x47\x1e\x0d\xd3\x88\xc1\x03\x7f\xd4\x50\x98\x63\x17\xa9\x6e\x51\xaf\x45\xa4\x5a\x7a\xc9\x89\xe0\xcf\xf0\xd9\xe0\xbe\x25\xd0\x0a\x89\x95\x0b\x7a\xfe\x66\xd1\x1c\x7b\x45\xd7\x7e\x92\x81\x0d\xee\x3b\xa4\xcf\xdb\xbd\x83\x62\xeb\x68\x6c\x22\xd9\x0b\xd0\x0c\x59\x17\x43\x5b\xa0\x76\xa9\x9f\x18\x35\x64\xff\xc7\x94\x5a\xe2\xd2\xe9\xf4\x32\x99\x56\xd4\x2d\x2f\xc6\xbc\x63\xc9\x6b\x91\xdf\xc0\x70\xf9\xf7\x98\x02\x4e\xed\x97\x99\x76\xaa\xb3\xf1\x9c\xea\xda\xfd\x0d\xa8\xd9\x67\xb3\xf7\xad\x8d\x0b\x9d\xa5\x79\x01\x53\xcd\x10\x53\x0b\x03\xf0\xdb\x1a\x06\x32\x85\x5f\x6a\x3a\x4d\x75\xbb\xe3\x57\xa5\xd4\xb4\xa0\x42\x32\xc9\x00\x96\xad\xc7\x29\xe8\x03\x71\xdf\x2b\x98\xc0\xd2\xdc\x5a\x73\x91\xf1\x95\x7f\xad\x5b\x65\xeb\xb3\xeb\xac\x0f\xbf\xc8\x7c\xa6\xf4\xa5\x94\x19\x4a\x24\xf6\x18\xda\xd5\x54\x2d\xef\xe0\xde\xd0\xd3\x87\xe5\x67\x0c\xb5\x6b\xde\xfa\x15\x4e\x6c\x28\x92\x11\x4b\x4f\x03\x6d\x93\x12\x5f\x50\x2a\x6c\x9a\xa7\xb1\x61\x68\x35\x1f\x2d\xba\x58\xba\xf4\x61\xdb\x0a\x5f\xca\x40\x51\xf5\xc7\x34\x2a\xa3\x5a\x56\xcb\x55\x8e\xe6\xfc\x52\xf8\x18\xf3\xaf\x00\x00\x00\xff\xff\x8b\x9a\xb0\x96\x0e\x21\x00\x00")

func templatesOverviewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesOverviewHtml,
		"templates/overview.html",
	)
}

func templatesOverviewHtml() (*asset, error) {
	bytes, err := templatesOverviewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/overview.html", size: 8462, mode: os.FileMode(511), modTime: time.Unix(1563662418, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/PhpBench.php":     assetsPhpbenchPhp,
	"templates/overview.html": templatesOverviewHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"PhpBench.php": &bintree{assetsPhpbenchPhp, map[string]*bintree{}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"overview.html": &bintree{templatesOverviewHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
