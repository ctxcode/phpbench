// Package main Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// assets/PhpBench.php
// templates/overview.html
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsPhpbenchPhp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x72\xe2\xc8\x15\xbe\xf7\x53\x9c\x21\x94\x25\x76\x84\xc1\xb3\xd9\x4a\x05\x0d\x76\xb1\x2c\xb3\x76\xc5\x83\x1d\xc0\xbb\x55\xc1\x2c\x25\xa4\xb6\xe9\x58\xb4\xb4\xdd\xcd\xd8\x5e\x0f\xef\x91\xbb\x5c\xe5\xfd\xf2\x08\xa9\xfe\x91\xe8\x96\x04\xcc\x56\x76\x2f\x52\x15\x6e\x90\xba\xcf\x4f\x9f\xef\xfc\x74\xf7\x81\xf7\xe7\xe9\x32\x3d\x3a\x0a\xe3\x80\x31\xb8\x59\xa6\xdf\x22\x12\x2e\xe1\xf5\xe8\x08\x00\x80\xf1\x80\xe3\x10\xea\x11\x0a\x29\x0a\x18\x9a\xe0\x15\x82\x2e\x90\x75\x1c\xfb\x16\x01\xc7\x2b\x44\x19\x74\x61\x3a\xf3\x8f\xca\x33\xfd\x64\x4d\x38\x74\xa1\x6d\x73\x85\x09\x61\xdc\x98\x2b\x4c\xae\x52\x1c\xa3\x7e\x10\x2e\x91\x16\x6c\x4e\xb3\x24\x7c\x44\xbc\x72\x31\x88\x70\x8a\x51\xe5\x6a\x18\x92\xba\xee\x83\x98\x21\x9b\x29\xf9\x84\xe8\x12\x05\xd1\x47\x66\xac\x25\x5d\x2f\x62\x1c\x66\x34\xf7\x6b\x12\x72\x9c\x10\xf1\x4e\xb9\xc0\x82\xba\xca\xbe\x06\xbc\x4a\xfa\xad\xc0\x4e\x47\x63\x32\x75\xb8\x03\x27\x1a\x87\x19\x74\x61\x85\x43\x9a\x88\x37\x97\xd3\x35\x6a\xa8\x55\x6c\xf6\xea\x13\xd4\xfd\x24\x42\x5a\x9b\x07\xf5\x7b\x1c\x23\x12\xac\x90\x07\xf5\x18\x13\x34\x14\x63\x61\x12\x21\x73\x21\x75\x44\xa2\x2a\x7d\x5b\x02\x69\x07\x74\xf7\x2f\xd9\xdf\xd2\x8b\x81\x71\xaa\x20\x94\xd2\x9b\x5a\xc6\x96\x66\x4d\x18\xe2\xee\x5e\x81\xd6\x12\x56\x02\x6e\x9a\xac\x49\xe4\x1a\xe2\xbf\x82\xd3\x76\xbb\xad\xbf\x4c\x7a\x7c\x0f\xee\x9b\x5c\xba\x19\x96\xa6\xe5\x96\x1b\x0a\xb1\x7b\x1f\x27\x09\x75\xb5\xe9\x2d\xa9\xa0\xdd\xd0\x9a\xda\x5b\x3b\x36\x45\x94\x9a\xdd\x6a\x91\xbe\x8d\xf7\x6e\xb2\x9c\xae\xd5\x02\x14\x2e\x13\x69\xfb\x09\x38\x2b\xe6\x18\x93\x39\xb3\x0e\xe2\xa9\x08\x99\xa9\x65\x99\x93\x39\xdf\x81\xee\x99\x11\x0a\x36\xd1\x23\x7a\x51\xf3\x12\x74\xa1\xc8\x29\x50\xa8\xc0\x51\x44\xea\xb9\x8a\x4a\x44\x95\xa2\x11\x4f\x55\x14\x2b\xa6\xe6\x95\x39\xc5\x59\x89\x9e\x24\xb0\x90\x37\x3d\xdc\xa8\xe2\x43\x24\x92\x5c\x3a\x36\x04\xb6\xfb\x78\xb2\x44\xdf\x9f\x48\x0c\x91\xc8\x6d\x64\xd5\x2d\x0b\xa8\x1c\x73\x51\x1d\x8a\x71\x44\x11\x5f\x53\x62\x06\x46\xd9\x57\xba\xaa\x88\xfc\x32\x63\x9b\x27\x3c\x88\xb3\x7a\x62\x44\x49\x56\x9d\x8a\xbe\xf6\xad\x55\x85\xa2\x2e\xba\xd9\x5c\x03\xce\xa0\x5d\x5c\x5b\xfd\x1e\x53\xa6\x93\x51\x45\x4b\xdb\x48\x57\x49\x11\x07\x36\x41\x51\x6a\x13\x4e\x8b\x2c\x9c\xa5\x01\x11\x3c\x82\x77\x2a\x1d\x31\x13\x99\x2e\x95\x4d\xb5\x43\xab\x99\x5a\x5d\xe1\x9b\x4a\xb0\xea\x0c\xf1\x21\xcd\x13\xb0\x50\x95\x2a\x52\xbd\x1e\x05\x3c\x28\x07\xbf\x18\x95\x81\xf1\x77\x96\x90\x39\x22\x22\x2a\x5d\x9b\x46\xd2\x09\xd9\x92\x2e\x0a\x38\x72\x9d\x8b\x0e\xee\x30\xa7\xe1\x95\x09\xd7\x34\x96\x74\x98\x89\xca\x55\x9f\x8f\x07\xa3\x1f\x06\xa3\xa9\x33\x1a\xfc\xf5\x76\x30\x9e\xcc\x6f\x47\x97\xce\xac\x01\xe7\xb0\x63\x0a\x3a\xa5\xe0\x95\x72\x89\x4e\x2d\x65\x77\x39\xc2\xd5\x2a\x55\x88\xe8\x4c\x95\x18\xaa\x92\x50\x41\xab\x7d\x26\x69\x8b\xa1\x63\x93\xcf\x1a\xe5\xc4\x90\x90\xae\x69\x0c\x5d\x70\x96\x9c\xa7\x9d\x56\xeb\xf4\xdd\x9f\x4e\xda\x27\xed\x93\xd3\xce\xd7\xed\xf6\x69\x8b\x21\xde\x12\x05\x8b\x23\xc7\x37\x8b\xd5\xf7\x88\x43\x78\x3b\xba\x02\x8a\x58\xb2\xa6\x21\xda\xca\x0b\x95\x40\xf1\x35\xc7\x04\x73\xb7\x61\x71\x8e\x11\x07\x96\xac\x10\x24\xa9\x48\x3f\x06\x4d\x78\x42\x10\x50\x04\x69\xc0\x18\x26\x0f\x80\x09\x04\xb0\x66\x88\x06\x0f\x22\x87\x78\x92\xc0\x12\xd1\xad\x06\x29\x99\x21\x9e\xa4\x7c\x1e\x50\x1a\xbc\xb8\x52\xa7\x57\x88\x8a\xfe\xed\xe8\xea\xfa\x66\x32\x1f\x0d\x26\xb7\xa3\xe1\x64\xd4\x1b\x8e\x3f\x0c\x46\x02\xa8\x53\xaf\x92\x50\x98\x23\x20\x17\xb2\x2a\x09\x6e\xae\xc7\x93\x3d\xfc\x62\xfa\xc3\xe5\xe0\xea\xbb\xb1\x14\x23\x82\xd2\x80\xbc\x88\x02\x89\x80\x2f\x11\x50\xf4\xf3\x1a\x31\x0e\xc7\xc0\x82\x4f\xe2\x95\xa5\x09\x61\x08\x78\x02\x75\xf1\xb2\xc5\x55\xbc\x65\xb8\xa2\x67\x14\x2a\xab\x6d\xb1\xfd\x38\x61\x5b\x99\x3c\x81\x30\x46\x01\x85\x75\xaa\x20\xcf\x9c\xc5\x6c\x2c\x43\xc1\x65\x89\xdb\x1c\x1d\x6d\x8e\x8e\xf2\x12\x99\x2e\xd3\x85\x38\x02\xce\x11\xa5\xa2\x5c\x23\xe3\x64\x21\xe9\xe5\xde\xe5\xbc\x67\xfc\x25\x46\x67\x8b\x24\x7a\xf1\x96\x7c\x15\xbf\xa6\x41\x14\x61\xf2\xd0\x69\xfb\xab\x80\x3e\x60\xd2\x69\xfb\x1b\x48\x29\x02\x19\xd4\xaf\x10\x61\x96\xc6\xc1\x4b\x07\x16\x71\x12\x3e\xfa\x20\x27\x4f\x32\x6d\x4d\xb9\xb9\x08\xd2\xce\x02\xdd\x27\x14\xc1\x2b\xc8\x52\x85\x68\x13\x93\x90\xa2\x15\x22\xbc\x03\x62\x9b\xf2\x21\x4c\x08\x97\xaf\x9a\xc2\x15\xc3\x0d\x7f\xab\x02\x13\x31\xd2\xd4\x9a\x56\x98\x34\x9f\x70\xc4\x97\x1d\xf8\xba\x9d\x3e\xfb\xa0\x16\xd8\xa4\xf8\x61\xc9\x3b\xf0\x8d\x18\xda\xbc\x6f\x29\x83\x74\xe8\x6b\x23\x23\xfc\x09\xe4\x78\xb7\x96\xd9\x77\x2a\xe8\x6b\x05\x3a\x69\x67\x81\xae\x9d\x3e\x83\x24\x06\xc8\x10\x81\x36\xc8\xe1\xb6\x0f\x8b\x20\x7c\x7c\x90\x7b\x5b\x33\x4c\xe2\x84\x76\x16\x71\x20\x16\xab\x5e\x28\x8a\xfc\xda\x59\x06\x0e\x30\x84\x56\x4c\xb8\x78\x29\xe2\x26\xa5\xc9\x22\x16\x03\x6b\x12\x21\xca\x78\x40\x84\x42\x08\x11\xe5\x01\x26\xc0\x5e\x08\x0f\x9e\x3d\x50\xa9\x0c\x01\x11\x95\x6d\x8d\x20\x21\x90\xac\x29\x3c\x60\xbe\x5c\x2f\x3c\x60\x09\xa5\x2f\xf0\xef\x7f\xfe\xe3\x5f\xef\x5b\x29\x95\x86\xef\xb0\xc8\x5c\xfd\x37\x6a\xf5\x99\x91\xd2\x9c\x0a\x63\xfe\x80\x10\x2a\x82\x34\x10\xf1\xd4\x01\x79\x10\x44\xcd\xb3\x07\xc4\x3f\x22\xc6\x82\x07\xe4\x8a\xbd\xbc\x76\x47\x6a\x26\xf5\x07\x1c\x23\x8b\x58\x0c\x54\x52\x5e\x61\x62\x53\x8a\x81\x2a\xca\xc2\xab\xa6\x9e\xd0\x20\x44\x3d\x36\xe6\x14\x93\x87\xac\x7e\x69\x10\x0e\x00\x53\xe1\xea\x5f\xed\xe9\xa7\x25\xe6\x02\xaa\xc9\x12\xc1\x03\x22\x88\x06\x1c\x45\x20\xb2\xe1\xf7\x72\x4b\x9e\x57\x14\x31\x94\xe5\x54\x0d\xe4\x05\xb0\x5b\xb3\x12\x32\xf7\xa0\x3c\x1f\x8a\x23\x0b\x7a\x4e\x63\xb1\xe1\x0a\x2c\x3d\xe0\x14\xaf\x5c\x55\x1d\x34\x70\x22\x75\x83\x70\x09\xae\xe6\x08\x98\xe2\x6d\xc0\x6b\x56\x37\xd2\x80\x9c\x49\x6f\x89\x71\xb1\xdb\xbd\x6f\xa9\x31\x5f\x9d\xb9\xb3\xe3\xb1\x21\xbc\xd2\x29\xe6\x50\x84\x3f\x6d\x91\x7a\xc6\xdc\xaf\x2e\x69\x98\x84\xf1\x5a\x5c\xa3\xd2\x80\x2f\xf3\x82\x26\x0e\x5b\x6a\xf3\xbf\xcb\xee\xbf\x9d\x8e\x75\xfd\x9c\x4a\x86\x59\xc3\x3c\x7f\xa9\x73\x21\x1c\x60\xb1\x6e\x77\xf5\x7b\x71\xac\x5a\x04\x4c\x9e\xd7\xf5\x2a\xfc\x7c\x0d\x72\xba\x0b\x4e\xb0\xe6\x49\x9c\x04\x91\x28\x8e\x4e\x85\x4a\xc9\x67\x09\x96\xb7\x22\x71\x0f\x98\xa3\x67\xcc\x38\xd3\xa2\xf7\xf3\x6a\xac\xf9\x92\x26\x4f\x70\x37\x78\x0e\x91\xdc\xa4\x5d\x67\x42\x5f\x44\x3d\xe1\x09\x68\xbc\x40\x88\x06\xbe\x0c\x38\x44\x09\x62\x84\x83\x52\xa3\xb3\xce\x30\x23\x33\x54\x9e\x11\xaf\x3f\x1d\x38\xed\xe9\x93\xbc\xf6\x1b\x26\x58\xec\xf4\xae\xa3\xcb\xb8\xda\x80\x98\xe3\xc1\x69\x06\x52\x91\x42\xaa\x59\xa7\x65\x4a\x39\x30\xa7\x28\x4d\x28\x17\x69\x3d\x98\xf7\xae\xae\x32\x45\x75\x82\x9e\x6e\x02\xbe\x14\x27\xf0\xf5\x82\x71\xaa\xe0\xf2\xa0\xed\x41\xf3\x8f\xf2\x62\x91\xef\x4b\xd2\x07\xfe\x16\x65\x0b\x64\x2d\xc7\xc2\xb9\xbe\x12\x66\xce\x13\x61\x3a\x8e\x91\x7c\xb3\x3c\x6d\x10\x2d\x6c\xa2\x4c\x5c\xe1\xba\x9b\x13\x9f\xe5\xc2\xab\xef\x28\xb9\x61\xc5\x5b\x6c\xe6\x15\xb9\xc7\x76\x45\x3a\xc8\x88\xfd\x1e\x71\xd5\x54\x48\x0d\xad\xf9\xe5\x54\x0c\xca\xec\x5c\xd0\x2c\xdb\x5a\x2d\x2b\x4e\xc5\x81\xcf\x8a\xd1\x56\x0b\xec\x52\x65\x30\xe6\x13\x8c\x4b\xc7\xc4\x41\x88\x5c\x47\x36\x9f\x1c\x0f\x9c\xf7\xa0\x9f\xcc\x84\xb7\xe5\xb5\x76\x08\x74\x7e\x29\x0c\xca\xfc\xd7\x03\xda\x74\xe9\xb6\x74\xcd\xe7\xfa\xe8\xb0\x75\xde\x56\xa3\x24\x3c\x90\xce\xe2\x56\x94\x83\xac\x40\x45\x24\x92\x81\xae\xee\xa9\x07\x02\xbd\xa8\xc2\x68\x3a\xbd\xed\x82\xab\x85\x35\xf3\x04\xca\x96\x55\x72\x70\xa1\xbc\x55\xf8\x33\xab\x6e\x99\xd7\x25\x04\x0f\xc8\x84\xc0\xf4\xbb\x10\xdd\x57\x94\xb5\x5a\x56\xf4\x03\x26\x25\x8a\x0d\xd5\x1c\x0f\xa2\x48\x93\x1a\x7d\xb4\xac\x85\xd0\x85\x53\x83\x7d\x92\x3c\x22\xf2\x63\xc0\x86\xe8\x49\x4b\x31\x59\x82\x28\x42\xd1\x8d\x08\x85\x65\x12\x47\x88\x6e\xa7\x75\xbd\x8c\xd7\x6c\x79\x65\xaf\x22\x37\xdb\x6d\x88\x8b\x03\xb8\xc7\xd9\xd2\x3d\x38\xb6\x96\x6c\xa5\x65\x66\xde\x49\xd7\xb6\xcb\x48\xca\x1d\xe6\x6e\xb2\xd5\x70\x61\x8b\xd8\x04\xe5\x83\xc4\x32\x88\x63\xb5\x45\x79\x30\xb9\xfe\xcb\x60\x38\xbf\xe9\x8d\xc6\x03\xed\xe8\x7a\xa8\x3b\x9b\xfa\xce\xad\xf8\x73\xc0\xd9\x23\x4e\x6f\x09\xc7\xf1\x38\x4c\x52\xdb\xb2\xe3\x3a\xce\x8d\x33\x57\x25\x2c\x54\x52\xc4\x93\x14\x2b\x8d\x96\xc8\x5b\xe6\x2e\x68\x10\x3e\x16\x3a\x0f\x4f\x4b\x51\xc6\xdd\x3a\x86\xf7\x7a\x6d\xa5\x7e\x82\x14\x2e\x82\x5c\x69\x99\xd6\xb1\x79\x7d\xcc\x2b\x92\x26\xeb\xca\x23\x55\x51\x88\x11\x0c\x6f\xdf\xda\x5d\x82\xcd\x3e\x59\x8e\xeb\x54\x8a\x52\xa6\x94\x45\xed\x91\xd4\xd8\x27\xa9\xd9\x3c\x28\x29\x43\xaf\xdb\x85\x36\x1c\x1f\x5b\xb2\x5f\x1d\xf8\xfc\x19\x0c\x08\xfc\x5a\xa3\x52\x1b\x2e\x2a\x12\x9f\x05\x45\xc1\xe3\x5e\x50\xec\x30\x3c\xe9\x02\x66\xd9\xcd\x57\xea\x94\x9d\x08\xf9\x34\x3d\x9d\x41\x47\x3f\x17\xbc\x54\xc7\x26\x5e\x1b\x3b\x8e\xb7\x81\x87\x56\xf8\xff\x71\xe7\xb8\x05\x8f\x3a\xaf\xbf\x61\x20\x16\x44\x6f\x7e\xbf\xc8\xfc\x9f\x0b\xc4\xfb\x84\xca\xa8\x10\xc1\x02\x46\x74\xf8\x92\xcb\xea\xd2\x1e\x08\x10\x09\x0d\x86\x33\x38\x2d\x45\xd6\xc1\x4d\x28\xa7\x4c\x29\xfa\x34\x29\xa9\xa9\x68\x90\xaa\xfb\x42\x86\x45\xce\x56\x0d\x7e\x3e\x3d\x0c\xe4\xcf\x0f\x6a\xef\xd0\xe7\xff\x6c\x6e\xda\x36\x5b\x46\x96\x55\x05\xfe\x2e\x38\x93\xf9\x8f\x17\x97\x93\xc1\xf8\xa6\xd7\x1f\x54\x46\x13\xe4\x6d\x6d\x9a\x26\xcc\x54\x73\x3a\xf3\x74\xea\xbc\xe9\x6a\x10\x76\x09\xc8\x17\xff\xae\x12\x93\x77\xb3\xf2\x7a\x2d\x7c\x88\x89\x8f\x92\xe1\xc1\xd4\xf1\xc5\x61\xef\xd5\x99\x79\xb2\x59\x5e\x09\xd9\x17\xb8\x4f\x35\xda\x77\x31\x6d\x2a\x67\xca\xa3\x9b\x1d\xc9\xb6\xb1\x03\xab\x18\xf6\xa5\x10\x23\x65\xcf\xf2\xad\x57\xcb\xa1\x93\x43\xa3\x7e\xc0\x9b\x3a\x93\xf9\xb0\xf7\x51\x3b\x74\x1f\x32\x76\xe5\x76\xeb\xb8\x22\x68\xc4\xe9\x0e\x93\x22\x3c\x15\x05\xf0\x4d\xf9\xf4\x75\x7c\x0c\x6f\xaa\x56\x77\x7d\x33\x18\xce\x27\xbd\xef\x85\xef\xcc\xb5\x7a\x85\x60\x94\xef\xfd\xeb\x8f\x1f\x07\xc3\xc9\x7e\x43\x2a\x0e\x7e\xd5\x3e\x2d\x15\x21\x67\x3a\xbd\xb9\xb8\xf9\x76\x30\xec\x5f\xcc\x6f\xae\x7a\xfd\xc1\xc5\xf5\xd5\x77\x83\xd1\x6c\x06\xce\x41\x93\xab\x6c\xeb\x5f\xf5\xc6\x63\xb5\xf2\x0f\xd7\xa3\xfc\x61\xd0\xeb\x5f\xe4\xf6\x5d\x69\xd3\x2e\x3f\xa8\xef\xc1\xd5\x78\x60\x3e\x6b\xae\xdb\x61\x7f\x72\x79\x3d\x54\x6f\x93\x8b\xd1\xf5\x8f\x1a\x91\xde\xa4\x7f\xf1\xa5\x8e\x15\x67\xc1\xff\xd2\xb3\x55\x66\xfe\xd0\x1b\x5d\xf6\xbe\xcd\x0c\x19\x4f\x46\x97\x43\xed\xce\x41\xff\xe2\x7a\xef\xe2\xf2\x60\x91\xe7\xe7\xe3\xe3\xca\xa4\xdc\x95\xc8\xc6\x5d\x61\x77\xd2\x96\xcf\xf9\x6e\x85\xfd\xf0\x85\x19\xb0\x1b\x2b\xa8\x48\xfa\xfd\x5b\x5e\xbe\xbf\x15\xf2\xb8\x2c\xdf\xfc\xa5\xab\x5a\x4a\x71\xbf\xda\x7b\x98\xa9\x38\xc8\x6c\x76\xf1\x3b\x7e\x69\x1b\x90\x04\x1a\x7a\x6b\x23\x35\x09\xcc\x8b\xa8\xf9\x2f\x8d\x6e\xf9\x87\xc6\xec\xb3\x8b\x45\xfe\x43\xa1\xca\x69\x9b\xb2\xea\x6a\x19\xc5\x63\x15\x14\x2e\x6d\xb5\x3b\x83\xcf\xf8\xff\x45\x0d\x4e\x76\x59\x22\x5b\xc0\x0d\x3f\xef\xfa\xee\x12\x5d\xf0\x97\xee\x13\x97\x59\x10\x0b\x8d\xeb\xa1\xd9\xc7\xa8\x39\x35\x0f\x6a\x35\xcf\x16\x55\x01\x47\x41\x46\x4a\xd1\xc3\xb6\x19\xd2\xba\xa3\xe7\x77\xa4\x25\xd2\x12\x1c\xcf\xa2\x3d\x2c\x4a\x75\x4b\x0f\xb0\xec\xc2\x33\xff\x7f\x89\x40\x73\x87\x8f\x4f\xa0\xe6\xc1\x7c\xfe\xe1\xf2\x6a\x30\x9f\x7b\x50\xcb\x3a\xb8\xf2\xb7\xcd\x9a\x07\x8e\x1c\x31\x17\x75\x02\x35\x47\xc3\x7f\xa0\xae\x6f\x2f\xdb\x16\x4d\x65\x9f\xc1\xfc\xec\x2a\x89\xdb\xa7\x23\x30\xdb\xaf\x55\x65\xe6\x68\x6f\x38\x6c\xbb\x62\xfd\xec\xe7\x94\x08\xb4\xc7\x40\xfe\x7d\x29\x20\x9c\xd9\xd7\xfd\xb7\x6f\xed\x2e\x52\xf6\x1f\x27\xdf\x6c\x8e\x16\x7b\x2d\x8f\xe8\x05\xba\xe0\xe4\x7b\x9b\x06\x5a\x36\x58\xd5\xa9\xb8\xc8\x2c\x9c\x88\xef\xdd\x37\x11\xba\xc7\x04\x45\xae\x23\x64\x38\x8d\x06\xa8\x01\xfd\xee\x81\x23\xfb\x3c\x8e\x91\x08\x65\x65\xdf\x5d\x8e\x7e\x1b\x5d\x22\x08\x22\x4c\x8d\xfe\x76\x29\x0c\x8c\x4e\x93\xd5\x0b\xdc\xb5\xb1\x8b\x54\xc8\x57\xe2\xe5\xec\x15\x8d\xab\x42\x3a\xb9\xd3\x9f\x82\xe6\x2f\xbd\xe6\xdf\xda\xcd\x3f\xcf\x67\x8d\x0c\xd2\xc2\xb0\xcc\xb7\xfa\xe9\x6e\xe0\xe1\x04\x9c\xfa\x3b\xc7\xd2\xfc\x2b\x15\x4b\x78\x0f\xe9\x2d\xf8\xa0\x4a\xed\x21\xbd\xee\x79\x47\x77\x0a\x3f\x77\xe1\xfc\xf3\x1d\x81\xaf\x1a\xe7\x0d\xf7\xfc\x8d\xad\xda\xd5\x7d\xfd\xcf\xfa\x7b\x9e\x90\x10\x7d\xa6\xe8\xe7\x35\xa6\xf9\xb7\x1c\x6c\xd8\x8b\x9e\xfe\xe4\xdf\x91\xd9\xdb\x86\xaf\x17\x5f\x7f\xe7\x96\x7f\x5b\xf9\xba\xd1\xf0\x2b\x96\x9d\x35\x96\x8b\x8d\xe1\x2f\x6a\x0a\xdb\xc8\x6f\x45\x15\x7a\xc2\xaa\xf5\x2b\xdf\x8c\x8e\xa9\xe0\xf4\x8f\x36\x47\xff\x09\x00\x00\xff\xff\xa7\x0c\xdb\x30\xea\x28\x00\x00")

func assetsPhpbenchPhpBytes() ([]byte, error) {
	return bindataRead(
		_assetsPhpbenchPhp,
		"assets/PhpBench.php",
	)
}

func assetsPhpbenchPhp() (*asset, error) {
	bytes, err := assetsPhpbenchPhpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/PhpBench.php", size: 10474, mode: os.FileMode(511), modTime: time.Unix(1563666636, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOverviewHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x5d\x93\xe2\x36\xd6\xbe\xef\x5f\x71\xe2\xd4\xfb\x42\x67\xc1\xc6\xdd\x74\x6f\x8f\x1b\xd8\x4a\xed\x26\x55\x9b\xec\x64\xaa\x76\xb2\x7b\x43\xb8\x10\xf6\x31\x68\x10\x92\x4b\x12\xdd\x4d\x18\xfe\xfb\x96\x64\x83\xbf\x0d\x93\x4a\xed\x07\x55\x33\x60\xe9\x7c\x9f\x47\xcf\x51\x7b\xc2\x28\xdf\xc0\x5a\x62\x3c\x75\xd6\x5a\x27\x2a\xf0\xbc\x58\x70\xad\xdc\x95\x10\x2b\x86\x24\xa1\xca\x0d\xc5\xd6\x0b\x95\xfa\x53\x4c\xb6\x94\xed\xa7\x1f\x12\xe4\x7f\xf8\x48\xb8\xfa\xff\x88\xaa\x84\x91\xfd\x54\xbd\x92\xc4\x01\x89\x6c\xea\x28\xbd\x67\xa8\xd6\x88\xda\x99\xdd\xdc\x4c\xec\xe3\xec\x06\x00\x60\x29\xa2\x3d\x1c\xec\x4f\xf3\x31\x5e\x86\xa9\xc5\x00\x7a\xc6\x26\x18\x9b\xbd\x67\x2b\x71\xbc\xb1\x5f\xae\xa2\x11\x2e\x89\xcc\xd5\x12\xa1\xa8\xa6\x82\x07\x10\xd3\x37\x8c\x9e\xcf\x1b\xbf\x0e\x29\x8f\xf0\x2d\xb8\xcf\x97\xb4\x48\x82\x51\xfe\xc8\x30\xd6\xc5\xe7\xa5\xd0\x5a\x6c\x8b\x2b\xaf\x34\xd2\xeb\xe0\x7e\x34\x4a\xde\x0a\x62\x24\xdc\xac\xa4\xd8\xf1\x68\x18\x0a\x26\x64\xf0\x35\x22\x16\xad\xbc\x0d\xd5\x9a\x44\xe2\x35\x80\x51\xf2\x66\xff\xf9\x0f\xc9\x1b\xc8\xd5\x92\xf4\x7d\xdf\x1f\x80\x7f\xf7\x34\x00\xff\xe1\x6e\x00\x23\xf7\xe1\x36\x57\x15\x2f\x28\x63\x26\x5e\x87\xfb\x00\xc8\x4e\x8b\xc6\xd4\xdd\x98\x32\x54\x87\x5a\x9e\x77\x95\xc4\x0a\x51\x57\x2c\x80\xbb\x46\x12\x61\xa1\x88\x6b\xa4\xab\xb5\x0e\xe0\x8f\x17\x12\xbd\x7b\xbc\x1f\x8d\xc7\xb9\x44\x42\xa2\x88\xf2\x55\x60\x72\xbc\x2b\xe9\x66\x0a\x71\x1c\x3f\x97\x3b\xac\xe8\xaf\x18\xf8\x8f\x45\x59\xbb\xfe\x9a\x85\xb0\x14\xac\xd0\xc4\x0c\x50\x41\xcc\xb0\xa0\x40\x18\x5d\xf1\x21\xd5\xb8\x55\x01\x84\xc8\x35\xca\x53\xa2\x4d\x79\x82\x4a\x08\x3f\xd4\x6c\x02\xe5\x8c\x72\x1c\x2e\x99\x08\x37\x2d\x85\x32\x3e\x0e\xb5\x74\x6d\x3b\xf3\xff\xca\x99\x2f\x85\x8c\x50\x0e\x33\x30\xf9\xc9\x1b\x28\xc1\x68\x04\x5f\x87\x61\x58\xa8\xcf\x4e\x2a\x21\x03\x48\x04\x2d\x86\xdf\xd0\xe9\x6a\x10\xaf\x42\x46\xc3\xa5\x44\xb2\x09\xc0\x7e\x0d\x09\x63\x1d\xe1\xbb\x24\xd4\xf4\x05\x0f\x1d\x6d\x8d\xed\xe7\x8a\x14\x9e\xec\x27\x17\xf4\xbe\x29\x36\x1a\xbe\xf1\x3a\xc2\xa0\x2b\x2e\x64\x21\x0c\x8d\x6f\x7a\x18\x61\x28\x24\x49\xcf\xaf\x6d\x86\x5e\x4b\xb1\x5b\xad\x6b\x40\x22\x84\x74\xe4\x08\xae\xa6\xdb\xcc\x76\x15\x03\xe9\xfe\x4e\xb2\x43\xd5\xe6\xbb\x77\xef\x1a\xc1\x79\x9f\x9f\x9b\x46\x57\x42\x13\xb6\x55\xbf\xc5\x5c\x6a\x2f\x14\x5c\x23\xd7\x4d\x1c\x46\x96\x4a\xb0\x9d\xc6\x3a\x8d\xf9\xdd\x34\xf6\x58\xe6\x28\x69\x0f\xd3\xa8\xec\x57\x2f\x0b\x35\x48\x7b\x1c\x00\x17\x1c\xab\x84\xe7\x8f\x46\xff\x97\xaf\x6d\x89\x5c\x51\x7e\x46\x43\x9d\x56\xf4\x92\x81\x36\x47\x0d\xf4\xfa\x12\xa7\x14\x19\xc3\xbf\xc0\x36\xf7\xe3\xb1\xff\x40\x6a\xb0\x4c\x73\x2b\xa0\x72\x4c\x1e\xef\x9f\xc6\xed\xdc\x53\x8a\xd3\x4e\x1d\x1d\x35\x1c\xea\x13\x51\x5f\x76\x18\x45\x51\xcd\xdb\xf9\x5c\x34\x79\x73\xc3\x0a\xee\x2d\x83\x55\xb9\xab\xa6\x27\x03\xae\xd7\xc3\x70\x4d\x59\xd4\x17\x51\x74\xdb\x71\x86\x21\x1f\x42\x67\x43\x06\xa7\xc3\xa5\x78\xbb\xec\x1b\x3a\xd8\xd9\xea\x68\x49\xb8\x8a\x85\xdc\x06\xb0\x4b\x12\x94\x21\x51\x78\x15\x81\x5f\x1c\xcf\x0f\x55\x20\xdf\x3d\xd4\x81\x7c\x57\x69\x8b\x45\x22\x94\x57\x8b\xe4\x7c\x61\x1a\x8f\xae\x9a\xc6\x0d\x35\x6e\x62\x49\x49\x22\xba\x53\xc1\x53\x7e\x2a\x26\x5e\x76\xcb\xb9\x99\x44\xf4\x05\x68\x34\x75\x48\x92\x38\xe9\xad\xc7\x2e\x85\x8c\x28\x35\x75\x32\x62\xc9\x76\xaa\xbb\xe9\xf0\x72\x66\x13\x33\xbe\x66\x3f\xa3\xd2\x6a\xe2\xd9\xdf\x13\x2f\xa2\x2f\xcd\x4a\x86\xa2\x1c\x78\x19\xc6\x42\x4e\x9d\x0d\xee\x81\x72\x50\xa8\x7f\xc4\xbd\x72\x20\xc8\x84\x0e\x90\xce\x84\xc0\x8c\x21\x89\x5c\x7f\xb4\x12\x30\x9d\x82\x51\x39\x1a\x03\x82\x07\x21\xa3\xe1\x66\xea\x28\xcc\xf6\xfb\x1b\xdc\xdf\x16\x82\xad\xfa\x36\x1c\xec\xcc\xe6\x73\x90\xa8\x76\xcc\x28\xa9\xf9\x06\xf7\x0b\xf7\x67\xba\x45\x58\x2c\xc0\x66\x72\x96\x4e\x69\xd4\x99\xc1\x67\x68\xd2\x31\xdb\xef\x15\x2c\x16\xcd\x49\x57\x9d\xef\x24\x33\x61\xd3\x78\xea\x54\x4d\xfd\x43\x32\xf8\x6a\x0a\xbd\x5e\x63\x70\x66\xd7\x38\x29\x97\x34\x7f\xcc\x7e\xb6\x35\x0f\xec\x90\xbe\xaa\x85\xdf\x1b\xc9\xeb\x5b\x98\x77\xc0\xb8\xe0\x64\x8b\xea\xaf\x76\x86\x46\x30\x85\xf9\xe2\xb9\xa9\x9f\x55\x49\x97\x21\x5f\xe9\xb5\xe9\xec\x08\x8e\xce\xec\x5b\xc6\xd2\x80\xaf\x85\x90\x11\x36\x18\x3a\x1b\x2e\x7a\x4d\x47\x7a\x83\x57\x7b\xb4\x3f\xc4\x7d\xb3\x71\x0b\x33\x18\xfa\x55\x50\xa5\xaa\xa6\x22\xa9\x90\x6d\x8d\x75\x56\xea\x45\x5b\xf1\xb3\x11\x5a\x2c\xbb\x26\x4b\x86\x67\x70\x2d\x99\x03\x21\x32\xa6\x12\x12\x52\xbe\x9a\x3a\xa3\x2a\x70\xed\xc4\x2a\xaf\xa5\xeb\xb2\xbe\x98\x29\xcc\xfe\x2c\x22\x9c\x78\x7a\xdd\x2e\xb1\x55\xdd\xfb\xe6\x28\x28\x08\x09\x63\x18\x75\x4b\x7e\xfb\x82\x92\xac\x10\xda\x2c\x4e\xbc\x6a\xa4\x46\xae\x96\xd3\xc4\xce\x92\xea\x1a\x6e\x13\x46\x34\x66\x07\x26\x67\x01\xa7\xb1\x20\x27\x30\x84\xe6\x8a\x66\xd0\x90\x9e\x21\xd5\x20\x9d\x6a\x44\xa6\x9b\x56\xda\x35\x25\xb3\x3d\xd5\x0d\xc5\xae\x49\xbf\x57\x7f\x49\x6f\xe7\xb0\x58\xd8\xc4\xaf\x51\xfa\x8e\x6b\x49\x51\x9d\xb0\x7e\xb5\xb3\xac\xc2\xd7\xf8\x6c\x2c\x76\x56\xc4\xda\x7a\xb9\xe0\x13\xcf\x22\xb3\x8c\xe7\x1c\xd0\xb5\x0e\x94\xf8\xd1\x8c\xef\x42\x95\x2d\x29\x06\x86\x2e\xed\xae\x0d\xb8\x64\xf7\x6c\x7f\xa2\x42\x49\x13\x0d\x4a\x86\xf9\x1f\xf2\x61\xc4\xdd\x4f\x2a\x42\x46\x5f\xa4\xcb\x51\x7b\x3c\xd9\x7a\x2f\x3b\xf4\x22\xaa\xb4\xf9\xe1\x7e\x52\xce\x6c\xe2\xa5\xba\xb3\xb3\x95\x34\x80\x17\x22\x0b\xe4\x09\x53\xf8\xe1\xe3\x87\x9f\xdc\x84\x48\x85\xfd\xc3\x01\xdc\xbf\x9f\xf7\x7e\x50\x82\xc3\xf1\x98\xcd\x52\xcf\xab\xab\x1e\x1c\xff\xe1\xf1\xde\x7f\x37\x1e\xdd\x8f\x9f\x9e\xee\x9d\xe0\xe0\x18\xa0\xfc\x8d\x72\x54\xe6\xc1\x37\xff\x7d\x9f\xd1\x8a\x13\x38\xde\x96\x6b\x2f\xf4\x5e\x5f\x5f\xbd\x64\x9d\x2c\x91\x87\x6b\x2f\xc2\xe5\x6e\xe5\x69\x54\xda\x3d\xad\x99\x1f\xce\xc0\x9a\x72\x02\x47\x31\xc4\xa4\x7f\x77\xfb\xec\x0c\x1c\x63\xf9\x27\xe9\x04\xce\xd8\x19\x38\x19\x60\x9c\x80\xef\x18\x1b\x38\xef\x95\x13\xdc\x99\xaf\x0c\x07\xf6\xa9\x0a\x0e\x27\x18\x1d\x07\xce\xdd\xef\x11\x17\x86\x6b\x01\xbf\x38\x91\xe0\xf8\x8b\x53\x0a\xee\xb1\x39\xb8\x71\x29\xb8\x71\x5b\x70\xf7\xbf\x47\x70\x66\xab\x5f\x2e\xd9\xbb\xe6\xa8\xfc\x52\x54\x7e\x73\x54\xc7\x41\xde\xd8\x8f\x42\x6a\x8c\x4e\x26\xb2\x01\x9f\x86\x9e\xa1\xc1\x1f\x8d\xc7\xe3\xa7\xff\x3c\x1a\x46\xa5\xd4\x46\xff\x5d\x68\xb8\x32\xb8\x7f\x33\x1a\xae\x8a\xea\x2a\x34\x1c\x9f\x6f\xce\x84\x67\x88\x83\x24\x09\x4c\x81\xe3\x2b\xfc\x73\x87\xfd\x43\x89\x6d\x0d\x97\x6d\xa9\x46\xa9\x02\x98\xf7\xe6\xf3\xde\x00\x7a\x8b\x45\x6f\x31\x28\x49\x21\x0b\xa0\xf7\x35\x49\x92\x5e\x79\x3d\x22\x9a\x04\x70\xa8\xb1\x7d\x76\x61\x0e\x60\x5e\x31\x64\x3e\x39\x8f\x05\x85\xdf\x75\xb9\x9c\xd2\x03\xb0\x39\x76\x48\xfc\x88\xfb\x36\xa1\xf3\xdd\xaa\x39\x9a\xea\xd5\xab\x2e\x75\x2c\x3f\x86\x62\x9b\xec\xb4\x11\xac\xe7\x9d\x8d\xf5\x00\xe2\x1d\x0f\xcd\x5f\x6d\xfd\xdb\xba\x90\xf9\xd0\xb8\xff\x95\x5e\x53\xe5\xe6\x29\xb4\x48\xa6\x66\xf5\x4e\x72\x73\x65\x6d\x14\x39\xde\x34\x2e\xe7\x33\x23\xbd\xee\xb6\x0a\x31\xaa\x8c\x48\x25\x1e\xf7\x0c\xb4\xe7\x66\xfb\xb1\x90\x7d\xa3\xbe\x31\x17\x1a\x63\xa3\x23\x03\x23\x47\x61\x6a\xc5\xe6\x9b\x45\x8b\xc5\x93\xa4\x4a\x18\x35\x11\x51\xf7\x74\xfc\x5c\xbb\xd4\xef\x79\xbd\xdb\xe6\x3c\x4e\xaa\x31\x87\x69\xaa\x3f\xb7\xff\x9f\xee\x34\x43\xf0\x5b\x2a\x60\x53\x31\x5a\x31\x77\x25\x26\x8c\x84\xd8\xef\x95\x4e\xb3\x39\x13\xf6\xbb\xc3\x37\x8d\xfb\xb6\x7e\xed\x37\x79\x9e\xde\xe3\x3b\x8a\x04\x16\x5d\x5c\x53\xbe\xc3\x76\x4f\x2d\xdd\x86\x33\xfc\xdc\x64\xa7\xd6\x7d\xda\x12\x6c\x8b\x7a\xa6\xaa\x84\xd4\x69\x22\xe6\xd7\x6d\x4b\x9f\x32\x3c\xa6\x3a\x75\x37\xc7\xfa\x29\xd3\xe9\xbd\xeb\xd2\xb1\xb0\xcd\xd7\x44\x9a\xe6\x9b\xd3\xdc\x8e\x59\xe4\xe6\x8f\xb8\x51\xb3\x40\x09\x99\x36\x9b\xec\x60\x5e\x81\xd0\xa2\x78\x37\x52\x69\xdc\xcf\x62\x9d\xa6\xd1\xc2\xe7\xcf\x40\xdd\x8f\x76\x6d\x92\xe6\x71\xa1\xdb\xa7\x5c\x33\xad\xdf\xd4\x74\x1a\xf7\xa9\xfb\x1d\x8f\x60\x66\x8a\x72\xc1\x61\x5a\x36\x2b\xdf\xe5\xec\xfa\xd5\x0c\x0a\x7d\xe4\xd1\x30\xcd\x18\x3c\xf0\x47\x0d\x8d\x39\x76\x91\xea\x16\xf5\x5a\x44\xaa\x65\x96\x9c\x08\xfe\x0c\x9f\x0d\xee\x5b\x12\xad\x90\x58\xb9\xa1\xe7\x77\x16\xcd\xb9\x57\x74\xed\x0b\x1d\xd8\xe0\xbe\x43\xfa\x7c\xdc\x3b\x28\xb6\x8e\xc6\x26\x92\xbd\x00\xcd\x90\x75\x31\xb4\x05\x6a\x97\xfa\x89\x51\x43\xf6\x3f\x4c\xa9\x25\x2e\x9d\x4e\x2f\x93\x69\x45\xdd\xf2\x62\xcc\x3b\x5c\x5e\x8b\xfc\x06\x86\xcb\xdf\xc7\x14\x70\x6a\xdf\xcc\xb4\x53\x9d\xcd\xe7\xd4\xd7\xee\x77\x40\xcd\x31\x9b\xb3\x6f\x6d\x5c\x98\x2c\xcd\x0e\x4c\x37\x43\x4c\x2d\x0c\xc0\x6f\x1b\x18\xc8\x14\x7e\xa9\xe9\xb4\xd4\xed\x81\x5f\x55\x52\x33\x82\x0a\xc5\x24\x03\x58\xb6\x5e\xa7\xa0\x0f\xc4\x7d\xaf\x60\x02\x4b\xf3\xd5\x5a\x8b\x8c\xaf\xfc\x6b\xc3\x2a\x5b\x9f\x5d\x67\x7d\xf8\x45\xe6\x33\xa5\x2f\xa5\xcc\x50\x22\xb1\xd7\xd0\xae\xa1\x6a\x79\x07\xf7\x86\x9e\x3e\x2c\x3f\x61\xa8\x5d\xf3\xd4\xaf\x70\x62\x43\x93\x8c\x58\x7a\x1b\x68\xdb\x94\xf8\x82\x52\x61\xd3\x3e\x8d\x0d\x43\xab\xf9\x68\xd1\xc5\xd2\xa5\xd7\xe2\x56\xf8\x52\x05\x8a\xaa\x3f\xa6\x59\x19\xd5\xb2\x5a\xae\x72\x34\xf7\x97\xc2\xcb\x98\x7f\x05\x00\x00\xff\xff\x65\x7b\x52\xa8\x9b\x21\x00\x00")

func templatesOverviewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesOverviewHtml,
		"templates/overview.html",
	)
}

func templatesOverviewHtml() (*asset, error) {
	bytes, err := templatesOverviewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/overview.html", size: 8603, mode: os.FileMode(511), modTime: time.Unix(1563663662, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/PhpBench.php":     assetsPhpbenchPhp,
	"templates/overview.html": templatesOverviewHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"PhpBench.php": &bintree{assetsPhpbenchPhp, map[string]*bintree{}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"overview.html": &bintree{templatesOverviewHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
