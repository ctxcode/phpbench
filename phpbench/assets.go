// Code generated for package main by go-bindata DO NOT EDIT. (@generated)
// sources:
// assets/PhpBench.php
// templates/overview.html
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsPhpbenchPhp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x72\xe2\xc8\x15\xbe\xf7\x53\x9c\x21\x94\x25\x76\xc0\xe0\xd9\x6c\xa5\x82\x06\xbb\x58\x96\x59\xbb\xe2\xc1\x0e\xe0\xdd\xaa\x60\x96\x12\x52\xdb\xea\x58\xb4\xb4\xdd\xcd\xd8\x5e\x0f\xef\x91\xbb\x5c\xe5\xfd\xf2\x08\xa9\xfe\x91\xe8\x96\x04\xcc\x56\x76\x2f\x52\x15\x6e\x90\xba\xcf\xef\x77\xce\xe9\x9f\x03\xef\xcf\xd3\x28\x3d\x3a\x0a\x62\x9f\x31\xb8\x89\xd2\x6f\x11\x09\x22\x78\x3d\x3a\x02\x00\x60\xdc\xe7\x38\x80\x7a\x88\x02\x8a\x7c\x86\xa6\x78\x85\xa0\x07\x64\x1d\xc7\x9e\x4d\xc1\xf1\x0a\xd1\x41\xb2\x26\x1c\x7a\xd0\xf1\xac\xb9\x20\x21\x8c\x1b\x73\x85\xc9\x55\x8a\x63\x34\xf0\x83\x48\x88\x9e\xcd\x6d\x5e\x96\x04\x8f\x88\xe7\x3a\xcd\x29\x44\x38\xc5\x88\x69\x26\x9b\x0b\x49\x5d\xf7\x7e\xcc\x90\xcd\x94\x7c\x42\x34\x42\x7e\xf8\x91\x19\xb6\xa4\xeb\x65\x2c\x26\x71\x68\x29\xca\x86\x19\xf7\x29\x2f\xbb\xae\xa7\xb5\xe4\xfb\x35\x09\x38\x4e\x08\x08\xa4\xb8\x44\x8a\xba\x75\x1c\x36\xe0\x55\x52\x8b\x8f\x42\x49\x48\x41\x4f\x9a\xcf\x6d\x78\x85\xe9\xd6\x99\x34\xa3\x8e\xc3\xf2\x8c\x69\xc9\x0a\x07\x34\x11\xe3\x2e\xa7\x6b\x64\x88\xa1\x88\xaf\x29\xd1\x3c\x6a\x78\x63\x59\x9c\x9b\x2a\x28\x06\x49\x88\xdc\xfa\x3d\x8e\x11\xf1\x57\xa8\x09\xf5\x18\x13\x34\xa2\x4d\x11\x99\x10\x59\xd6\x23\x12\x56\xe9\xdd\x12\x48\xf3\x84\xed\x3c\xc2\xcc\xb0\xb6\xe0\xc8\x24\x55\xe1\x91\x02\x5b\x9a\xcd\x94\xb3\x12\xc1\xa1\xc9\x9a\x84\xae\xc1\xf0\x15\x9c\x76\x3a\x1d\xfd\x65\xea\xc5\xf7\xe0\xbe\x51\x70\x76\xbb\x56\xae\x9a\xe6\x6f\xb3\xa0\x40\x24\x12\x25\x4e\x12\xea\x6a\xfb\xdb\x52\x41\xa7\xa1\x35\x75\xb6\xd6\x6f\x8a\xae\xb6\x7a\xd5\x22\x3d\x1b\xb4\xdd\x64\x39\x5d\xbb\x0d\x28\x88\x12\xe9\xfb\x09\x38\x2b\xe6\x18\x93\x39\xb3\x4e\xf9\xd9\x5c\x24\xbd\xe5\x99\x93\x45\xd0\x81\xde\x19\x6c\xe3\x69\x13\x3d\xa2\x17\x35\xaf\x02\x84\x43\xa1\xcb\x29\x10\xa9\x04\x50\x74\xea\xb9\x8a\x4a\x64\x87\xa2\x11\x4f\x55\x14\x2b\xa6\xe6\x95\x47\xc5\x59\x09\xa0\x24\xb0\xc0\x37\x83\xdc\xa8\xe2\x43\x24\x94\x5c\x3a\x3d\x04\xbc\xfb\x78\xb2\x95\x61\xb3\xb7\x66\x19\x22\xa1\xdb\xc8\x56\xbd\x2c\xa7\x72\xd8\xc5\x72\x52\x4c\x25\x55\x65\x66\x6e\x94\xc3\xa5\x97\x21\x51\x27\x66\x7a\xf3\x84\xfb\x71\xb6\x00\x19\x89\x92\x2d\x67\xc5\x70\x7b\x96\x55\x81\x58\x48\xdd\x6c\xae\x01\x67\xd0\x29\xda\x56\xbf\xc7\x94\xe9\x0a\x53\x09\xd3\x99\x7b\x36\x45\xec\xdb\x04\x45\xa9\x2d\x38\x2d\xb2\x70\x96\xfa\x44\xf0\x08\xde\x99\x0c\xc4\x5c\x94\xaf\x54\x36\xd3\x01\xad\x66\x6a\xf7\x44\x6c\x2a\xc1\xaa\x33\xc4\x47\x34\xaf\xc1\xc2\xea\x52\x51\xed\xf5\xd0\xe7\x7e\x39\xff\xc5\xa8\x4c\x8c\xbf\xb3\x84\x2c\x10\x11\x59\xe9\xda\x34\x92\x4e\xc8\x96\x74\xa1\xcf\x91\xeb\x5c\x74\x71\x97\x39\x8d\x66\x99\x70\x4d\x63\x49\x87\x19\x43\xdc\xad\x2f\x26\xc3\xf1\x0f\xc3\xf1\xcc\x19\x0f\xff\x7a\x3b\x9c\x4c\x17\xb7\xe3\x4b\x67\xde\x80\x73\xd8\x31\x05\xdd\x52\xf2\x4a\xb9\x44\x97\x96\xf2\xbb\x9c\xe1\xca\x4a\x95\x22\xba\x58\x25\x86\x6a\x55\xa8\xa0\xd5\x31\x93\xb4\xc5\xd4\xb1\xc9\xe7\x8d\x72\x61\x48\x48\xd7\x34\x86\x1e\x38\x11\xe7\x69\xb7\xdd\x3e\x7d\xf7\xa7\x93\xce\x49\xe7\xe4\xb4\xfb\x75\xa7\x73\xda\x66\x88\xb7\xd5\xa6\xe6\x78\xe6\x7a\xf5\x3d\xe2\x10\xdc\x8e\xaf\x80\x22\x96\xac\x69\x80\xb6\xf2\x02\x25\x50\x7c\x2d\x30\xc1\xdc\xdc\xe5\xda\x6d\x98\x20\x0e\x2c\x59\x21\x48\x52\x51\x7e\x0c\x5a\xf0\x84\xc0\xa7\x08\x52\x9f\x31\x4c\x1e\x00\x13\xf0\x61\xcd\x10\xf5\x1f\x44\x0d\xf1\x24\x81\x08\xd1\xad\x06\x29\x99\x21\x9e\xa4\x7c\xe1\x53\xea\xbf\xb8\x52\x67\xb3\x90\x15\x83\xdb\xf1\xd5\xf5\xcd\x74\x31\x1e\x4e\x6f\xc7\xa3\xe9\xb8\x3f\x9a\x7c\x18\x8e\x05\x50\xa7\xcd\x4a\x42\xe1\x8e\x80\x5c\xc8\xaa\x24\xb8\xb9\x9e\x4c\xf7\xf0\x8b\xe9\x0f\x97\xc3\xab\xef\x26\x52\x8c\x48\x4a\x03\xf2\x22\x0a\x24\x04\x1e\x21\xa0\xe8\xe7\x35\x62\x1c\x8e\x81\xf9\x9f\xc4\x2b\x4b\x13\xc2\x10\xf0\x04\xea\xe2\x65\x8b\xab\x78\xcb\x70\x45\xcf\x28\x50\x5e\xdb\x62\x07\x71\xc2\xb6\x32\x79\x02\x41\x8c\x7c\x0a\xeb\x54\x41\x9e\x05\x8b\xd9\x58\x06\x82\xcb\x12\xb7\x39\x3a\xda\x1c\x1d\xe5\x4b\x64\x1a\xa5\x4b\x71\x34\x5c\x20\x4a\xc5\x72\x8d\x8c\x13\x82\xa4\x97\xdb\x97\xf3\x9e\xf1\x97\x18\x9d\x2d\x93\xf0\xa5\x19\xf1\x55\xfc\x9a\xfa\x61\x88\xc9\x43\xb7\xe3\xad\x7c\xfa\x80\x49\xb7\xe3\x6d\x20\xa5\x08\x64\x52\xbf\x42\x88\x59\x1a\xfb\x2f\x5d\x58\xc6\x49\xf0\xe8\x81\x9c\x3c\xc9\xb4\xb5\xe4\xe6\x22\x48\xbb\x4b\x74\x9f\x50\x04\xaf\x20\x97\x2a\x44\x5b\x98\x04\x14\xad\x10\xe1\x5d\x10\xdb\x94\x07\x41\x42\xb8\x7c\xd5\x14\xae\x18\x6e\x78\x5b\x15\x98\x88\x91\x96\xd6\xb4\xc2\xa4\xf5\x84\x43\x1e\x75\xe1\xeb\x4e\xfa\xec\x81\x32\xb0\x45\xf1\x43\xc4\xbb\xf0\x8d\x18\xda\xbc\x6f\x2b\x87\x74\xea\x6b\x27\x43\xfc\x09\xe4\x78\xaf\x96\xf9\x77\x2a\xe8\x6b\x05\x3a\xe9\x67\x81\xae\x93\x3e\x83\x24\x06\xc8\x10\x81\x0e\xc8\xe1\x8e\x07\x4b\x3f\x78\x7c\x90\x7b\x5b\x2b\x48\xe2\x84\x76\x97\xb1\x2f\x8c\x55\x2f\x14\x85\x5e\xed\x2c\x03\x07\x18\x42\x2b\x26\x42\x1c\x89\xbc\x49\x69\xb2\x8c\xc5\xc0\x9a\x84\x88\x32\xee\x13\xa1\x10\x02\x44\xb9\x8f\x09\xb0\x17\xc2\xfd\xe7\xa6\x3e\x9f\x82\x4f\xc4\xca\xb6\x46\x90\x10\x48\xd6\x14\x1e\x30\x8f\xd6\xcb\x26\xb0\x84\xd2\x17\xf8\xf7\x3f\xff\xf1\xaf\xf7\xed\x94\x4a\xc7\x77\x78\x64\x5a\xff\x8d\xb2\x3e\x73\x52\xba\x53\xe1\xcc\x1f\x10\x42\x45\x90\x86\x22\x9f\xba\xe0\xc0\x09\xd4\x51\xeb\xec\x01\xf1\x8f\x88\x31\xff\x01\xb9\x62\x2f\xaf\xdd\x91\x9a\x49\xfd\x01\xc7\xc8\x22\x16\x03\x95\x94\x57\x98\xd8\x94\x62\xa0\x8a\xb2\xf0\xaa\xa9\xa7\xd4\x0f\x50\x9f\x4d\x38\xc5\xe4\x21\x5b\xbf\x34\x08\x07\x80\xa9\x08\xf5\xaf\x8e\xf4\x53\x84\xb9\x80\x6a\x1a\x21\x78\x40\x04\x51\x9f\xa3\x10\x44\x35\xfc\x5e\x61\xc9\xeb\x8a\x22\x86\xb2\x9a\xaa\x81\xbc\x18\xf6\x6a\x56\x41\xe6\x11\x94\xe7\x43\x71\x64\x41\xcf\x69\x2c\x36\x5c\x81\x65\x13\x38\xc5\x2b\x57\xad\x0e\x1a\x38\x51\xba\x7e\x10\x81\xab\x39\x7c\xa6\x78\x1b\xf0\x9a\xad\x1b\xa9\x4f\xce\x64\xb4\xc4\xb8\xd8\xed\xde\xb7\xd5\x98\xa7\x8e\xdd\xd9\x09\xd9\x10\x5e\x19\x14\x73\x28\xc4\x9f\xb6\x48\x3d\x63\xee\x55\x2f\x69\x98\x04\xf1\x5a\x5c\x83\x52\x9f\x47\xf9\x82\x26\x0e\x5b\x6a\xf3\xbf\xcb\xee\xc5\xdd\xae\x75\x5f\x9d\x49\x86\x79\xc3\x3c\x7f\xe9\xdb\xd7\x01\x16\xeb\x5a\x56\xbf\x17\xc7\xaa\xa5\xcf\xe4\x91\x5d\x5b\xe1\xe5\x36\xc8\xe9\x1e\x38\xfe\x9a\x27\x71\xe2\x87\x62\x71\x74\x2a\x54\x4a\x3e\x4b\xb0\xbc\x18\x89\xab\xc0\x02\x3d\x63\xc6\x99\x16\xbd\x9f\x57\x63\xcd\x23\x9a\x3c\xc1\xdd\xf0\x39\x40\x72\x93\x76\x9d\x29\x7d\x11\xeb\x09\x4f\x40\xe3\x05\x42\x34\xf0\xc8\xe7\x10\x26\x88\x11\x0e\x4a\x8d\xae\x3a\xc3\x8d\xcc\x51\x79\x46\xbc\xfe\x74\xe0\xb4\xa7\x4f\xf2\x3a\x6e\x98\x60\xb1\xd3\xbb\x8e\x5e\xc6\xd5\x06\xc4\x9c\x26\x9c\x66\x20\x15\x29\xa4\x9a\x75\x5a\xa6\x94\x03\x0b\x8a\xd2\x84\x72\x51\xd6\xc3\x45\xff\xea\x2a\x53\x54\x27\xe8\xe9\xc6\xe7\x91\x38\x81\xaf\x97\x8c\x53\x05\x57\x13\x3a\x4d\x68\xfd\x51\x5e\x2c\xf2\x7d\x49\xc6\xc0\xdb\xa2\x6c\x81\xac\xe5\x58\x38\xd7\x57\xc2\xcd\x45\x22\x5c\xc7\x31\x92\x6f\x56\xa4\x0d\xa2\xa5\x4d\x94\x89\x2b\xdc\x78\x73\xe2\xb3\x5c\x78\xf5\x1d\x25\x77\xac\x78\x91\xcd\xa2\x22\xf7\xd8\x9e\x28\x07\x99\xb1\xdf\x23\xae\x9a\x02\xa9\xa1\x35\xbf\x9f\x8a\x41\x59\x9d\x4b\x9a\x55\x5b\xbb\x6d\xe5\xa9\x38\xf0\x59\x39\xda\x6e\x83\xbd\x54\x19\x8c\xf9\x04\xe3\x32\x30\xb1\x1f\x20\xd7\x91\x4d\x29\xa7\x09\xce\x7b\xd0\x4f\x66\xc1\xdb\xf2\xda\x3b\x04\x3a\xbf\x14\x06\x65\xfd\xeb\x01\xed\xba\x0c\x5b\xba\xe6\x0b\x7d\x74\xd8\x06\x6f\xab\x51\x12\x1e\x28\x67\x71\x2b\xca\x41\x56\xa0\x22\x12\xca\x44\x57\xf7\xd4\x03\x89\x5e\x54\x61\x74\xa9\xde\xf6\xc0\xd5\xc2\x5a\x79\x01\x65\x66\x95\x02\x5c\x58\xde\x2a\xe2\x99\xad\x6e\x59\xd4\x25\x04\x0f\xc8\x84\xc0\x8c\xbb\x10\x3d\x50\x94\xb5\x5a\xb6\xe8\xfb\x4c\x4a\x14\x1b\xaa\x39\xee\x87\xa1\x26\x35\x1a\x6f\x59\x0b\xa1\x07\xa7\x06\xfb\x34\x79\x44\xe4\x47\x9f\x8d\xd0\x93\x96\x62\xb2\xf8\x61\x88\xc2\x1b\x91\x0a\x51\x12\x87\xb2\x63\xa6\xa7\xf5\x7a\x19\xaf\x59\x74\x65\x5b\x91\xbb\xed\x36\xc4\xc5\x01\xdc\xe3\xcc\xf4\x26\x1c\x5b\x26\x5b\x65\x99\xb9\x77\xd2\xb3\xfd\x32\x8a\x72\x87\xbb\x9b\xcc\x1a\x2e\x7c\x11\x9b\xa0\x7c\x90\x58\xfa\x71\xac\xb6\xa8\x26\x4c\xaf\xff\x32\x1c\x2d\x6e\xfa\xe3\xc9\x50\x07\xba\x1e\xe8\x56\xa8\xbe\x73\x2b\xfe\x1c\x70\xf6\x88\xd3\x5b\xc2\x71\x3c\x09\x92\xd4\xf6\xec\xb8\x8e\x73\xe7\x4c\xab\x84\x87\x4a\x8a\x78\x92\x62\xa5\xd3\x12\x79\xcb\xdd\x25\xf5\x83\xc7\x42\xe7\xe1\x29\x12\xcb\xb8\x5b\xc7\xf0\x5e\xdb\x56\xea\x27\x48\xe1\xb2\xb1\x27\xb5\xcc\xea\xd8\xbc\x3e\xe6\x2b\x92\x26\xeb\xc9\x23\x55\x51\x88\x91\x0c\x6f\xdf\xda\x5d\x82\xcd\x3e\x59\x8e\xeb\x54\x8a\x52\xae\x94\x45\xed\x91\xd4\xd8\x27\xa9\xd5\x3a\x28\x29\x43\xaf\xd7\x83\x0e\x1c\x1f\x5b\xb2\x5f\x1d\xf8\xfc\x19\x0c\x08\xbc\x5a\xa3\x52\x1b\x2e\x2a\x12\x9f\x25\x45\xfe\xe3\x5e\x50\xec\x34\x3c\xe9\x01\x66\xd9\xcd\x57\xea\x94\x9d\x08\xf9\x34\x3b\x9d\x43\x57\x3f\x17\xa2\x54\xc7\x26\x5e\x1b\x3b\x8f\xb7\x89\x87\x56\xf8\xff\x79\xe7\xb8\x85\x88\x3a\xaf\xbf\x61\x22\x16\x44\x6f\x7e\xbf\xcc\xfc\x9f\x4b\xc4\xfb\x84\xca\xac\x10\xc9\x02\x46\x76\x78\x92\xcb\xea\xd2\x1e\x48\x10\x09\x0d\x86\x33\x38\x2d\x65\xd6\xc1\x4d\x28\xa7\x4c\x29\xfa\x34\x2d\xa9\xa9\x68\x90\xaa\xfb\x42\x86\x45\xce\x56\x0d\x7e\x3e\x3d\xf2\xe5\x2f\x10\x6a\xef\xd0\xe7\xff\x6c\x6e\xd6\x31\x5b\x46\x96\x57\x05\xfe\x1e\x38\xd3\xc5\x8f\x17\x97\xd3\xe1\xe4\xa6\x3f\x18\x56\x66\x13\xe4\x6d\x6d\x9a\x26\xcc\x54\x73\x3a\x6f\xea\xd2\x79\xd3\xd3\x20\xec\x12\x90\x1b\xff\xae\x12\x93\x77\xf3\xb2\xbd\x16\x3e\xc4\xc4\x47\xc9\x68\xc2\xcc\xf1\xc4\x61\xef\xd5\x99\x37\x65\xb3\xbc\x12\xb2\x2f\x08\x9f\x6a\xb4\xef\x62\xda\x54\xce\x94\x47\x37\x3b\x8a\x6d\x63\x27\x56\x31\xed\x4b\x29\x46\xca\x91\xe5\xdb\xa8\x96\x53\x27\x87\x46\xfd\x10\x37\x73\xa6\x8b\x51\xff\xa3\x0e\xe8\x3e\x64\xec\x95\xdb\xad\xe3\x8a\xa4\x11\xa7\x3b\x4c\x8a\xf0\x54\x2c\x80\x6f\xca\xa7\xaf\xe3\x63\x78\x53\x65\xdd\xf5\xcd\x70\xb4\x98\xf6\xbf\x17\xb1\x33\x6d\x6d\x16\x92\x51\xbe\x0f\xae\x3f\x7e\x1c\x8e\xa6\xfb\x1d\xa9\x38\xf8\x55\xc7\xb4\xb4\x08\x39\xb3\xd9\xcd\xc5\xcd\xb7\xc3\xd1\xe0\x62\x71\x73\xd5\x1f\x0c\x2f\xae\xaf\xbe\x1b\x8e\xe7\x73\x70\x0e\xba\x5c\xe5\xdb\xe0\xaa\x3f\x99\x28\xcb\x3f\x5c\x8f\xf3\x87\x61\x7f\x70\x91\xfb\x77\xa5\x5d\xbb\xfc\xa0\xbe\x87\x57\x93\xa1\xf9\xac\xb9\x6e\x47\x83\xe9\xe5\xf5\x48\xbd\x4d\x2f\xc6\xd7\x3f\x6a\x44\xfa\xd3\xc1\xc5\x97\x06\x56\x9c\x05\xff\xcb\xc8\x56\xb9\xf9\x43\x7f\x7c\xd9\xff\x36\x73\x64\x32\x1d\x5f\x8e\x74\x38\x87\x83\x8b\xeb\xbd\xc6\xe5\xc9\x22\xcf\xcf\xc7\xc7\x95\x45\xb9\xab\x90\x8d\xbb\xc2\xee\xa2\x2d\x9f\xf3\xdd\x0a\xff\xe1\x0b\x2b\x60\x37\x56\x50\x51\xf4\xfb\xb7\xbc\x7c\x7f\x2b\xd4\x71\x59\xbe\xf9\x4b\x57\xb5\x94\xe2\x7e\xb5\xf7\x30\x53\x71\x90\xd9\xec\xe2\x77\xbc\xd2\x36\x20\x09\x34\xf4\xd6\x46\x6a\x12\x98\x17\x51\xf3\x6f\x1d\xbd\xf2\x0f\x8d\xd9\x67\x17\x8b\xfc\x87\x41\x55\xd0\x36\x65\xd5\xd5\x32\x8a\xc7\x2a\x28\x5c\xda\x6a\x77\xf5\x45\x1a\xa5\xcb\x45\xf6\xd7\x8a\x3b\x43\x8e\xf9\x57\x8c\x1a\x9c\xec\x72\x4d\xf6\x84\x1b\x5e\xde\x06\xde\xa5\xab\x10\x40\xdd\x38\x2e\xb3\x20\x16\x18\xf7\x45\xb3\xb1\x51\x73\x6a\x4d\xa8\xd5\x9a\xb6\xa8\x0a\x7c\x0a\x32\x52\x8a\x1e\xb6\xdd\x91\xf6\x1d\x3d\xbf\x23\x6d\x51\xa7\xe0\x34\x2d\xda\xc3\xa2\x54\xfb\xf4\x00\xcb\x4e\x80\x5b\x67\xf9\x7f\x46\x16\x8b\x0f\x97\x57\xc3\xc5\xa2\x09\xb5\xac\x6b\x2b\x7f\xcf\xac\x35\xc1\x91\x23\xa6\xde\x13\xa8\x39\x1a\xe1\x03\x6b\xf9\xf6\x82\x6d\xd1\x54\xf6\x16\xcc\xcf\xae\x65\x70\xfb\x74\x04\x66\xcb\xb5\x6a\x69\x39\xda\x1b\xf1\x6d\x27\x6c\x90\xfd\x84\x12\x82\x0e\x0a\xc8\xff\x38\xf9\x84\x33\xfb\x8a\xff\xf6\xad\xdd\x39\xca\xfe\x08\xe5\x99\x0d\xd1\x62\x7f\xe5\x11\xbd\x40\x0f\x9c\x7c\x3f\xd3\x40\xcb\xa6\xaa\x3a\x09\x17\x99\x45\x9c\xf0\xbd\xfb\x26\x44\xf7\x98\xa0\xd0\x75\x84\x0c\xa7\xd1\x00\x35\xa0\xdf\x9b\xe0\xc8\xde\x8e\x63\xe4\x7a\x59\xd9\x77\x97\xe3\xdf\x46\x97\x48\x82\x10\x53\xa3\xa7\x5d\x4a\x03\xa3\xbb\x64\xf5\xff\x76\x6d\xe6\x22\xdb\x73\x4b\x9a\x39\x7b\x45\xb3\xaa\x50\x31\xee\xec\x27\xbf\xf5\x4b\xbf\xf5\xb7\x4e\xeb\xcf\x8b\x79\x23\x83\xb4\x30\x2c\x4b\xaa\x7e\xba\x1b\x78\x38\x01\xa7\xfe\xce\xb1\x34\xff\x4a\xc5\x12\xde\x43\x7a\x0b\x31\xa8\x52\x7b\x48\xaf\x7b\xde\xd5\xdd\xc1\xcf\x3d\x38\xff\x7c\x47\xe0\xab\xc6\x79\xc3\x3d\x7f\x63\xab\x76\x75\x2f\xff\xb3\xfe\x5e\x24\x24\x40\x9f\x29\xfa\x79\x8d\x69\xfe\x2d\x07\x1b\xb6\xd1\xb3\x9f\xbc\x3b\x32\x7f\xdb\xf0\xb4\xf1\xf5\x77\x6e\xf9\xf7\x94\xaf\x1b\x0d\xaf\xc2\xec\xac\x99\x5c\x6c\x06\x7f\x51\x23\xd8\x46\x7e\x2b\xaa\xd0\x07\x56\xed\x5e\xf9\x66\x74\x49\x05\xa7\x77\xb4\x39\xfa\x4f\x00\x00\x00\xff\xff\xd0\xbc\x2c\xf0\xf6\x28\x00\x00")

func assetsPhpbenchPhpBytes() ([]byte, error) {
	return bindataRead(
		_assetsPhpbenchPhp,
		"assets/PhpBench.php",
	)
}

func assetsPhpbenchPhp() (*asset, error) {
	bytes, err := assetsPhpbenchPhpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/PhpBench.php", size: 10486, mode: os.FileMode(436), modTime: time.Unix(1627642153, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOverviewHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x5d\x93\xe2\x36\xd6\xbe\xef\x5f\x71\xe2\xd4\xfb\x42\x67\xc1\xc6\xdd\x74\x6f\x8f\x1b\xd8\x4a\xed\x26\x55\x9b\xec\x64\xaa\x76\xb2\x7b\x43\xb8\x10\xf6\x31\x68\x10\x92\x4b\x12\xdd\x4d\x18\xfe\xfb\x96\x64\x83\xbf\x0d\x93\x4a\xed\x07\x55\x33\x60\xe9\x7c\x9f\x47\xcf\x51\x7b\xc2\x28\xdf\xc0\x5a\x62\x3c\x75\xd6\x5a\x27\x2a\xf0\xbc\x58\x70\xad\xdc\x95\x10\x2b\x86\x24\xa1\xca\x0d\xc5\xd6\x0b\x95\xfa\x53\x4c\xb6\x94\xed\xa7\x1f\x12\xe4\x7f\xf8\x48\xb8\xfa\xff\x88\xaa\x84\x91\xfd\x54\xbd\x92\xc4\x01\x89\x6c\xea\x28\xbd\x67\xa8\xd6\x88\xda\x99\xdd\xdc\x4c\xec\xe3\xec\x06\x00\x60\x29\xa2\x3d\x1c\xec\x4f\xf3\x31\x5e\x86\xa9\xc5\x00\x7a\xc6\x26\x18\x9b\xbd\x67\x2b\x71\xbc\xb1\x5f\xae\xa2\x11\x2e\x89\xcc\xd5\x12\xa1\xa8\xa6\x82\x07\x10\xd3\x37\x8c\x9e\xcf\x1b\xbf\x0e\x29\x8f\xf0\x2d\xb8\xcf\x97\xb4\x48\x82\x51\xfe\xc8\x30\xd6\xc5\xe7\xa5\xd0\x5a\x6c\x8b\x2b\xaf\x34\xd2\xeb\xe0\x7e\x34\x4a\xde\x0a\x62\x24\xdc\xac\xa4\xd8\xf1\x68\x18\x0a\x26\x64\xf0\x35\x22\x16\xad\xbc\x0d\xd5\x9a\x44\xe2\x35\x80\x51\xf2\x66\xff\xf9\x0f\xc9\x1b\xc8\xd5\x92\xf4\x7d\xdf\x1f\x80\x7f\xf7\x34\x00\xff\xe1\x6e\x00\x23\xf7\xe1\x36\x57\x15\x2f\x28\x63\x26\x5e\x87\xfb\x00\xc8\x4e\x8b\xc6\xd4\xdd\x98\x32\x54\x87\x5a\x9e\x77\x95\xc4\x0a\x51\x57\x2c\x80\xbb\x46\x12\x61\xa1\x88\x6b\xa4\xab\xb5\x0e\xe0\x8f\x17\x12\xbd\x7b\xbc\x1f\x8d\xc7\xb9\x44\x42\xa2\x88\xf2\x55\x60\x72\xbc\x2b\xe9\x66\x0a\x71\x1c\x3f\x97\x3b\xac\xe8\xaf\x18\xf8\x8f\x45\x59\xbb\xfe\x9a\x85\xb0\x14\xac\xd0\xc4\x0c\x50\x41\xcc\xb0\xa0\x40\x18\x5d\xf1\x21\xd5\xb8\x55\x01\x84\xc8\x35\xca\x53\xa2\x4d\x79\x82\x4a\x08\x3f\xd4\x6c\x02\xe5\x8c\x72\x1c\x2e\x99\x08\x37\x2d\x85\x32\x3e\x0e\xb5\x74\x6d\x3b\xf3\xff\xca\x99\x2f\x85\x8c\x50\x0e\x33\x30\xf9\xc9\x1b\x28\xc1\x68\x04\x5f\x87\x61\x58\xa8\xcf\x4e\x2a\x21\x03\x48\x04\x2d\x86\xdf\xd0\xe9\x6a\x10\xaf\x42\x46\xc3\xa5\x44\xb2\x09\xc0\x7e\x0d\x09\x63\x1d\xe1\xbb\x24\xd4\xf4\x05\x0f\x1d\x6d\x8d\xed\xe7\x8a\x14\x9e\xec\x27\x17\xf4\xbe\x29\x36\x1a\xbe\xf1\x3a\xc2\xa0\x2b\x2e\x64\x21\x0c\x8d\x6f\x7a\x18\x61\x28\x24\x49\xcf\xaf\x6d\x86\x5e\x4b\xb1\x5b\xad\x6b\x40\x22\x84\x74\xe4\x08\xae\xa6\xdb\xcc\x76\x15\x03\xe9\xfe\x4e\xb2\x43\xd5\xe6\xbb\x77\xef\x1a\xc1\x79\x9f\x9f\x9b\x46\x57\x42\x13\xb6\x55\xbf\xc5\x5c\x6a\x2f\x14\x5c\x23\xd7\x4d\x1c\x46\x96\x4a\xb0\x9d\xc6\x3a\x8d\xf9\xdd\x34\xf6\x58\xe6\x28\x69\x0f\xd3\xa8\xec\x57\x2f\x0b\x35\x48\x7b\x1c\x00\x17\x1c\xab\x84\xe7\x8f\x46\xff\x97\xaf\x6d\x89\x5c\x51\x7e\x46\x43\x9d\x56\xf4\x92\x81\x36\x47\x0d\xf4\xfa\x12\xa7\x14\x19\xc3\xbf\xc0\x36\xf7\xe3\xb1\xff\x40\x6a\xb0\x4c\x73\x2b\xa0\x72\x4c\x1e\xef\x9f\xc6\xed\xdc\x53\x8a\xd3\x4e\x1d\x1d\x35\x1c\xea\x13\x51\x5f\x76\x18\x45\x51\xcd\xdb\xf9\x5c\x34\x79\x73\xc3\x0a\xee\x2d\x83\x55\xb9\xab\xa6\x27\x03\xae\xd7\xc3\x70\x4d\x59\xd4\x17\x51\x74\xdb\x71\x86\x21\x1f\x42\x67\x43\x06\xa7\xc3\xa5\x78\xbb\xec\x1b\x3a\xd8\xd9\xea\x68\x49\xb8\x8a\x85\xdc\x06\xb0\x4b\x12\x94\x21\x51\x78\x15\x81\x5f\x1c\xcf\x0f\x55\x20\xdf\x3d\xd4\x81\x7c\x57\x69\x8b\x45\x22\x94\x57\x8b\xe4\x7c\x61\x1a\x8f\xae\x9a\xc6\x0d\x35\x6e\x62\x49\x49\x22\xba\x53\xc1\x53\x7e\x2a\x26\x5e\x76\xcb\xb9\x99\x44\xf4\x05\x68\x34\x75\x48\x92\x38\xe9\xad\xc7\x2e\x85\x8c\x28\x35\x75\x32\x62\xc9\x76\xaa\xbb\xe9\xf0\x72\x66\x13\x33\xbe\x66\x3f\xa3\xd2\x6a\xe2\xd9\xdf\x13\x2f\xa2\x2f\xcd\x4a\x86\xa2\x1c\x78\x19\xc6\x42\x4e\x9d\x0d\xee\x81\x72\x50\xa8\x7f\xc4\xbd\x72\x20\xc8\x84\x0e\x90\xce\x84\xc0\x8c\x21\x89\x5c\x7f\xb4\x12\x30\x9d\x82\x51\x39\x1a\x03\x82\x07\x21\xa3\xe1\x66\xea\x28\xcc\xf6\xfb\x1b\xdc\xdf\x16\x82\xad\xfa\x36\x1c\xec\xcc\xe6\x73\x90\xa8\x76\xcc\x28\xa9\xf9\x06\xf7\x0b\xf7\x67\xba\x45\x58\x2c\xc0\x66\x72\x96\x4e\x69\xd4\x99\xc1\x67\x68\xd2\x31\xdb\xef\x15\x2c\x16\xcd\x49\x57\x9d\xef\x24\x33\x61\xd3\x78\xea\x54\x4d\xfd\x43\x32\xf8\x6a\x0a\xbd\x5e\x63\x70\x66\xd7\x38\x29\x97\x34\x7f\xcc\x7e\xb6\x35\x0f\xec\x90\xbe\xaa\x85\xdf\x1b\xc9\xeb\x5b\x98\x77\xc0\xb8\xe0\x64\x8b\xea\xaf\x76\x86\x46\x30\x85\xf9\xe2\xb9\xa9\x9f\x55\x49\x97\x21\x5f\xe9\xb5\xe9\xec\x08\x8e\xce\xec\x5b\xc6\xd2\x80\xaf\x85\x90\x11\x36\x18\x3a\x1b\x2e\x7a\x4d\x47\x7a\x83\x57\x7b\xb4\x3f\xc4\x7d\xb3\x71\x0b\x33\x18\xfa\x55\x50\xa5\xaa\xa6\x22\xa9\x90\x6d\x8d\x75\x56\xea\x45\x5b\xf1\xb3\x11\x5a\x2c\xbb\x26\x4b\x86\x67\x70\x2d\x99\x03\x21\x32\xa6\x12\x12\x52\xbe\x9a\x3a\xa3\x2a\x70\xed\xc4\x2a\xaf\xa5\xeb\xb2\xbe\x98\x29\xcc\xfe\x2c\x22\x9c\x78\x7a\xdd\x2e\xb1\x55\xdd\xfb\xe6\x28\x28\x08\x09\x63\x18\x75\x4b\x7e\xfb\x82\x92\xac\x10\xda\x2c\x4e\xbc\x6a\xa4\x46\xae\x96\xd3\xc4\xce\x92\xea\x1a\x6e\x13\x46\x34\x66\x07\x26\x67\x01\xa7\xb1\x20\x27\x30\x84\xe6\x8a\x66\xd0\x90\x9e\x21\xd5\x20\x9d\x6a\x44\xa6\x9b\x56\xda\x35\x25\xb3\x3d\xd5\x0d\xc5\xae\x49\xbf\x57\x7f\x49\x6f\xe7\xb0\x58\xd8\xc4\xaf\x51\xfa\x8e\x6b\x49\x51\x9d\xb0\x7e\xb5\xb3\xac\xc2\xd7\xf8\x6c\x2c\x76\x56\xc4\xda\x7a\xb9\xe0\x13\xcf\x22\xb3\x8c\xe7\x1c\xd0\xb5\x0e\x94\xf8\xd1\x8c\xef\x42\x95\x2d\x29\x06\x86\x2e\xed\xae\x0d\xb8\x64\xf7\x6c\x7f\xa2\x42\x49\x13\x0d\x4a\x86\xf9\x1f\xf2\x61\xc4\xdd\x4f\x2a\x42\x46\x5f\xa4\xcb\x51\x7b\x3c\xd9\x7a\x2f\x3b\xf4\x22\xaa\xb4\xf9\xe1\x7e\x52\xce\x6c\xe2\xa5\xba\xb3\xb3\x95\x34\x80\x17\x22\x0b\xe4\x09\x53\xf8\xe1\xe3\x87\x9f\xdc\x84\x48\x85\xfd\xc3\x01\xdc\xbf\x9f\xf7\x7e\x50\x82\xc3\xf1\x98\xcd\x52\xcf\xab\xab\x1e\x1c\xff\xe1\xf1\xde\x7f\x37\x1e\xdd\x8f\x9f\x9e\xee\x9d\xe0\xe0\x18\xa0\xfc\x8d\x72\x54\xe6\xc1\x37\xff\x7d\x9f\xd1\x8a\x13\x38\xde\x96\x6b\x2f\xf4\x5e\x5f\x5f\xbd\x64\x9d\x2c\x91\x87\x6b\x2f\xc2\xe5\x6e\xe5\x69\x54\xda\x3d\xad\x99\x1f\xce\xc0\x9a\x72\x02\x47\x31\xc4\xa4\x7f\x77\xfb\xec\x0c\x1c\x63\xf9\x27\xe9\x04\xce\xd8\x19\x38\x19\x60\x9c\x80\xef\x18\x1b\x38\xef\x95\x13\xdc\x99\xaf\x0c\x07\xf6\xa9\x0a\x0e\x27\x18\x1d\x07\xce\xdd\xef\x11\x17\x86\x6b\x01\xbf\x38\x91\xe0\xf8\x8b\x53\x0a\xee\xb1\x39\xb8\x71\x29\xb8\x71\x5b\x70\xf7\xbf\x47\x70\x66\xab\x5f\x2e\xd9\xbb\xe6\xa8\xfc\x52\x54\x7e\x73\x54\xc7\x41\xde\xd8\x8f\x42\x6a\x8c\x4e\x26\xb2\x01\x9f\x86\x9e\xa1\xc1\x1f\x8d\xc7\xe3\xa7\xff\x3c\x1a\x46\xa5\xd4\x46\xff\x5d\x68\xb8\x32\xb8\x7f\x33\x1a\xae\x8a\xea\x2a\x34\x1c\x9f\x6f\xce\x84\x67\x88\x83\x24\x09\x4c\x81\xe3\x2b\xfc\x73\x87\xfd\x43\x89\x6d\x0d\x97\x6d\xa9\x46\xa9\x02\x98\xf7\xe6\xf3\xde\x00\x7a\x8b\x45\x6f\x31\x28\x49\x21\x0b\xa0\xf7\x35\x49\x92\x5e\x79\x3d\x22\x9a\x04\x70\xa8\xb1\x7d\x76\x61\x0e\x60\x5e\x31\x64\x3e\x39\x8f\x05\x85\xdf\x75\xb9\x9c\xd2\x03\xb0\x39\x76\x48\xfc\x88\xfb\x36\xa1\xf3\xdd\xaa\x39\x9a\xea\xd5\xab\x2e\x75\x2c\x3f\x86\x62\x9b\xec\xb4\x11\xac\xe7\x9d\x8d\xf5\x00\xe2\x1d\x0f\xcd\x5f\x6d\xfd\xdb\xba\x90\xf9\xd0\xb8\xff\x95\x5e\x53\xe5\xe6\x29\xb4\x48\xa6\x66\xf5\x4e\x72\x73\x65\x6d\x14\x39\xde\x34\x2e\xe7\x33\x23\xbd\xee\xb6\x0a\x31\xaa\x8c\x48\x25\x1e\xf7\x0c\xb4\xe7\x66\xfb\xb1\x90\x7d\xa3\xbe\x31\x17\x1a\x63\xa3\x23\x03\x23\x47\x61\x6a\xc5\xe6\x9b\x45\x8b\xc5\x93\xa4\x4a\x18\x35\x11\x51\xf7\x74\xfc\x5c\xbb\xd4\xef\x79\xbd\xdb\xe6\x3c\x4e\xaa\x31\x87\x69\xaa\x3f\xb7\xff\x9f\xee\x34\x43\xf0\x5b\x2a\x60\x53\x31\x5a\x31\x77\x25\x26\x8c\x84\xd8\xef\x95\x4e\xb3\x39\x13\xf6\xbb\xc3\x37\x8d\xfb\xb6\x7e\xed\x37\x79\x9e\xde\xe3\x3b\x8a\x04\x16\x5d\x5c\x53\xbe\xc3\x76\x4f\x2d\xdd\x86\x33\xfc\xdc\x64\xa7\xd6\x7d\xda\x12\x6c\x8b\x7a\xa6\xaa\x84\xd4\x69\x22\xe6\xd7\x6d\x4b\x9f\x32\x3c\xa6\x3a\x75\x37\xc7\xfa\x29\xd3\xe9\xbd\xeb\xd2\xb1\xb0\xcd\xd7\x44\x9a\xe6\x9b\xd3\xdc\x8e\x59\xe4\xe6\x8f\xb8\x51\xb3\x40\x09\x99\x36\x9b\xec\x60\x5e\x81\xd0\xa2\x78\x37\x52\x69\xdc\xcf\x62\x9d\xa6\xd1\xc2\xe7\xcf\x40\xdd\x8f\x76\x6d\x92\xe6\x71\xa1\xdb\xa7\x5c\x33\xad\xdf\xd4\x74\x1a\xf7\xa9\xfb\x1d\x8f\x60\x66\x8a\x72\xc1\x61\x5a\x36\x2b\xdf\xe5\xec\xfa\xd5\x0c\x0a\x7d\xe4\xd1\x30\xcd\x18\x3c\xf0\x47\x0d\x8d\x39\x76\x91\xea\x16\xf5\x5a\x44\xaa\x65\x96\x9c\x08\xfe\x0c\x9f\x0d\xee\x5b\x12\xad\x90\x58\xb9\xa1\xe7\x77\x16\xcd\xb9\x57\x74\xed\x0b\x1d\xd8\xe0\xbe\x43\xfa\x7c\xdc\x3b\x28\xb6\x8e\xc6\x26\x92\xbd\x00\xcd\x90\x75\x31\xb4\x05\x6a\x97\xfa\x89\x51\x43\xf6\x3f\x4c\xa9\x25\x2e\x9d\x4e\x2f\x93\x69\x45\xdd\xf2\x62\xcc\x3b\x5c\x5e\x8b\xfc\x06\x86\xcb\xdf\xc7\x14\x70\x6a\xdf\xcc\xb4\x53\x9d\xcd\xe7\xd4\xd7\xee\x77\x40\xcd\x31\x9b\xb3\x6f\x6d\x5c\x98\x2c\xcd\x0e\x4c\x37\x43\x4c\x2d\x0c\xc0\x6f\x1b\x18\xc8\x14\x7e\xa9\xe9\xb4\xd4\xed\x81\x5f\x55\x52\x33\x82\x0a\xc5\x24\x03\x58\xb6\x5e\xa7\xa0\x0f\xc4\x7d\xaf\x60\x02\x4b\xf3\xd5\x5a\x8b\x8c\xaf\xfc\x6b\xc3\x2a\x5b\x9f\x5d\x67\x7d\xf8\x45\xe6\x33\xa5\x2f\xa5\xcc\x50\x22\xb1\xd7\xd0\xae\xa1\x6a\x79\x07\xf7\x86\x9e\x3e\x2c\x3f\x61\xa8\x5d\xf3\xd4\xaf\x70\x62\x43\x93\x8c\x58\x7a\x1b\x68\xdb\x94\xf8\x82\x52\x61\xd3\x3e\x8d\x0d\x43\xab\xf9\x68\xd1\xc5\xd2\xa5\xd7\xe2\x56\xf8\x52\x05\x8a\xaa\x3f\xa6\x59\x19\xd5\xb2\x5a\xae\x72\x34\xf7\x97\xc2\xcb\x98\x7f\x05\x00\x00\xff\xff\x65\x7b\x52\xa8\x9b\x21\x00\x00")

func templatesOverviewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesOverviewHtml,
		"templates/overview.html",
	)
}

func templatesOverviewHtml() (*asset, error) {
	bytes, err := templatesOverviewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/overview.html", size: 8603, mode: os.FileMode(436), modTime: time.Unix(1627642153, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/PhpBench.php":     assetsPhpbenchPhp,
	"templates/overview.html": templatesOverviewHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"PhpBench.php": &bintree{assetsPhpbenchPhp, map[string]*bintree{}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"overview.html": &bintree{templatesOverviewHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
